{"ast":null,"code":"import * as i2 from '@abp/ng.components/page';\nimport { PageModule } from '@abp/ng.components/page';\nimport * as i3 from '@abp/ng.core';\nimport { RouterOutletComponent, AuthGuard, ReplaceableRouteContainerComponent, LazyModuleFactory, CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as i1 from '@abp/ng.setting-management/config';\nimport * as i4 from '@angular/common';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\n\nfunction SettingManagementComponent_ng_container_8_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 11);\n    i0.ɵɵlistener(\"click\", function SettingManagementComponent_ng_container_8_li_1_Template_li_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const setting_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.selected = setting_r2;\n    });\n    i0.ɵɵelementStart(1, \"a\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const setting_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"active\", setting_r2.name === ctx_r3.selected.name);\n    i0.ɵɵproperty(\"id\", setting_r2.name + \"-tab\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 4, setting_r2.name));\n  }\n}\n\nfunction SettingManagementComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, SettingManagementComponent_ng_container_8_li_1_Template, 4, 6, \"li\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const setting_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"abpPermission\", setting_r2.requiredPolicy);\n  }\n}\n\nfunction SettingManagementComponent_div_10_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction SettingManagementComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"div\", 14);\n    i0.ɵɵtemplate(2, SettingManagementComponent_div_10_ng_container_2_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", ctx_r1.selected.name + \"-tab\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngComponentOutlet\", ctx_r1.selected.component);\n  }\n}\n\nlet SettingManagementComponent = /*#__PURE__*/(() => {\n  class SettingManagementComponent {\n    constructor(settingTabsService) {\n      this.settingTabsService = settingTabsService;\n      this.subscription = new Subscription();\n      this.settings = [];\n\n      this.trackByFn = (_, item) => item.name;\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n\n    ngOnInit() {\n      this.subscription.add(this.settingTabsService.visible$.subscribe(settings => {\n        this.settings = settings;\n        if (!this.selected) this.selected = this.settings[0];\n      }));\n    }\n\n  }\n\n  SettingManagementComponent.ɵfac = function SettingManagementComponent_Factory(t) {\n    return new (t || SettingManagementComponent)(i0.ɵɵdirectiveInject(i1.SettingTabsService));\n  };\n\n  SettingManagementComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SettingManagementComponent,\n    selectors: [[\"abp-setting-management\"]],\n    decls: 11,\n    vars: 6,\n    consts: [[3, \"title\"], [\"id\", \"SettingManagementWrapper\"], [1, \"card\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-12\", \"col-md-3\", \"mb-2\", \"mb-md-0\"], [\"id\", \"nav-tab\", \"role\", \"tablist\", 1, \"nav\", \"flex-column\", \"nav-pills\"], [4, \"abpFor\", \"abpForOf\", \"abpForTrackBy\"], [1, \"col-12\", \"col-md-9\"], [\"class\", \"tab-content\", 4, \"ngIf\"], [\"class\", \"nav-item pointer\", 3, \"click\", 4, \"abpPermission\"], [1, \"nav-item\", \"pointer\", 3, \"click\"], [\"role\", \"tab\", 1, \"nav-link\", 3, \"id\"], [1, \"tab-content\"], [\"role\", \"tabpanel\", 1, \"tab-pane\", \"fade\", \"show\", \"active\", 3, \"id\"], [4, \"ngComponentOutlet\"]],\n    template: function SettingManagementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"abp-page\", 0);\n        i0.ɵɵpipe(1, \"abpLocalization\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"ul\", 6);\n        i0.ɵɵtemplate(8, SettingManagementComponent_ng_container_8_Template, 2, 1, \"ng-container\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵtemplate(10, SettingManagementComponent_div_10_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(1, 4, \"AbpSettingManagement::Settings\"));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"abpForOf\", ctx.settings)(\"abpForTrackBy\", ctx.trackByFn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.settings.length);\n      }\n    },\n    directives: [i2.PageComponent, i3.ForDirective, i3.PermissionDirective, i4.NgIf, i4.NgComponentOutlet],\n    pipes: [i3.LocalizationPipe],\n    encapsulation: 2\n  });\n  return SettingManagementComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst routes = [{\n  path: '',\n  component: RouterOutletComponent,\n  canActivate: [AuthGuard],\n  children: [{\n    path: '',\n    component: ReplaceableRouteContainerComponent,\n    data: {\n      requiredPolicy: 'AbpAccount.SettingManagement',\n      replaceableComponent: {\n        key: \"SettingManagement.SettingManagementComponent\"\n        /* SettingManagement */\n        ,\n        defaultComponent: SettingManagementComponent\n      }\n    }\n  }]\n}];\nlet SettingManagementRoutingModule = /*#__PURE__*/(() => {\n  class SettingManagementRoutingModule {}\n\n  SettingManagementRoutingModule.ɵfac = function SettingManagementRoutingModule_Factory(t) {\n    return new (t || SettingManagementRoutingModule)();\n  };\n\n  SettingManagementRoutingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SettingManagementRoutingModule\n  });\n  SettingManagementRoutingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[RouterModule.forChild(routes)], RouterModule]\n  });\n  return SettingManagementRoutingModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet SettingManagementModule = /*#__PURE__*/(() => {\n  class SettingManagementModule {\n    static forChild() {\n      return {\n        ngModule: SettingManagementModule,\n        providers: []\n      };\n    }\n\n    static forLazy() {\n      return new LazyModuleFactory(SettingManagementModule.forChild());\n    }\n\n  }\n\n  SettingManagementModule.ɵfac = function SettingManagementModule_Factory(t) {\n    return new (t || SettingManagementModule)();\n  };\n\n  SettingManagementModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SettingManagementModule\n  });\n  SettingManagementModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[SettingManagementRoutingModule, CoreModule, ThemeSharedModule, PageModule]]\n  });\n  return SettingManagementModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { SettingManagementComponent, SettingManagementModule }; //# sourceMappingURL=abp-ng.setting-management.mjs.map","map":null,"metadata":{},"sourceType":"module"}