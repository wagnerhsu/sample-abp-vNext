{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, Component, ChangeDetectionStrategy, Input, ViewChild, Directive, Host, InjectionToken, Inject, ViewChildren, Injector, LOCALE_ID, Pipe, NgModule } from '@angular/core';\nimport * as i5 from '@angular/common';\nimport { formatDate } from '@angular/common';\nimport * as i2 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateAdapter, NgbTimeAdapter, NgbInputDatepicker, NgbTimepicker, NgbDatepickerModule, NgbDropdownModule, NgbTimepickerModule, NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\nimport * as i2$1 from '@angular/forms';\nimport { ControlContainer, Validators, FormGroup, FormControl } from '@angular/forms';\nimport * as i6 from '@ngx-validate/core';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\nimport * as i1 from '@abp/ng.core';\nimport { RestService, AbpValidators, escapeHtmlChars, PermissionService, getShortDateShortTimeFormat, getShortTimeFormat, getShortDateFormat, CoreModule, LocalizationService, createLocalizationPipeKeyGenerator } from '@abp/ng.core';\nimport { of, merge, pipe, zip } from 'rxjs';\nimport { map, debounceTime, distinctUntilChanged, switchMap, filter, take } from 'rxjs/operators';\nimport { LinkedList } from '@abp/utils';\nimport * as i2$2 from '@swimlane/ngx-datatable';\nimport * as i4 from '@abp/ng.theme.shared';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nconst _c0 = [\"field\"];\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_1_ng_template_0_Template(rf, ctx) {}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ExtensibleFormPropComponent_div_0_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n    i0.ɵɵelement(1, \"input\", 14, 15);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", ctx_r3.prop.id)(\"formControlName\", ctx_r3.prop.name)(\"autocomplete\", ctx_r3.prop.autocomplete)(\"type\", ctx_r3.getType(ctx_r3.prop))(\"abpDisabled\", ctx_r3.disabled)(\"readonly\", ctx_r3.readonly);\n  }\n}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 16);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formControlName\", ctx_r4.prop.name);\n  }\n}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_3_ng_template_3_Template(rf, ctx) {}\n\nconst _c1 = function () {\n  return {\n    $implicit: \"form-check-label\"\n  };\n};\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelement(1, \"input\", 18, 15);\n    i0.ɵɵtemplate(3, ExtensibleFormPropComponent_div_0_ng_template_3_ng_template_3_Template, 0, 0, \"ng-template\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", ctx_r5.prop.id)(\"formControlName\", ctx_r5.prop.name)(\"abpDisabled\", ctx_r5.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction0(5, _c1));\n  }\n}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_4_ng_template_0_Template(rf, ctx) {}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_4_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r20 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", option_r20.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r20.key, \" \");\n  }\n}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ExtensibleFormPropComponent_div_0_ng_template_4_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n    i0.ɵɵelementStart(1, \"select\", 20, 15);\n    i0.ɵɵtemplate(3, ExtensibleFormPropComponent_div_0_ng_template_4_option_3_Template, 2, 2, \"option\", 21);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", ctx_r6.prop.id)(\"formControlName\", ctx_r6.prop.name)(\"abpDisabled\", ctx_r6.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(4, 6, ctx_r6.options$))(\"ngForTrackBy\", ctx_r6.track.by(\"value\"));\n  }\n}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_5_ng_template_0_Template(rf, ctx) {}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_5_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r24 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", option_r24.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r24.key, \" \");\n  }\n}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ExtensibleFormPropComponent_div_0_ng_template_5_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n    i0.ɵɵelementStart(1, \"select\", 23, 15);\n    i0.ɵɵtemplate(3, ExtensibleFormPropComponent_div_0_ng_template_5_option_3_Template, 2, 2, \"option\", 21);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", ctx_r7.prop.id)(\"formControlName\", ctx_r7.prop.name)(\"abpDisabled\", ctx_r7.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(4, 6, ctx_r7.options$))(\"ngForTrackBy\", ctx_r7.track.by(\"value\"));\n  }\n}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_6_ng_template_0_Template(rf, ctx) {}\n\nconst _c2 = function () {\n  return {\n    standalone: true\n  };\n};\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵtemplate(0, ExtensibleFormPropComponent_div_0_ng_template_6_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n    i0.ɵɵelementStart(1, \"div\", 24, 25);\n    i0.ɵɵelementStart(3, \"input\", 26, 15);\n    i0.ɵɵlistener(\"ngModelChange\", function ExtensibleFormPropComponent_div_0_ng_template_6_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return ctx_r28.typeaheadModel = $event;\n    })(\"selectItem\", function ExtensibleFormPropComponent_div_0_ng_template_6_Template_input_selectItem_3_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return ctx_r30.setTypeaheadValue($event.item);\n    })(\"blur\", function ExtensibleFormPropComponent_div_0_ng_template_6_Template_input_blur_3_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return ctx_r31.setTypeaheadValue(ctx_r31.typeaheadModel);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r26 = i0.ɵɵreference(2);\n\n    const ctx_r8 = i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"is-invalid\", _r26.classList.contains(\"is-invalid\"));\n    i0.ɵɵproperty(\"id\", ctx_r8.prop.id)(\"autocomplete\", ctx_r8.prop.autocomplete)(\"abpDisabled\", ctx_r8.disabled)(\"ngbTypeahead\", ctx_r8.search)(\"editable\", false)(\"inputFormatter\", ctx_r8.typeaheadFormatter)(\"resultFormatter\", ctx_r8.typeaheadFormatter)(\"ngModelOptions\", i0.ɵɵpureFunction0(13, _c2))(\"ngModel\", ctx_r8.typeaheadModel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", ctx_r8.prop.name);\n  }\n}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_7_ng_template_0_Template(rf, ctx) {}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵtemplate(0, ExtensibleFormPropComponent_div_0_ng_template_7_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n    i0.ɵɵelementStart(1, \"input\", 27, 28);\n    i0.ɵɵlistener(\"click\", function ExtensibleFormPropComponent_div_0_ng_template_7_Template_input_click_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n\n      const _r33 = i0.ɵɵreference(2);\n\n      return _r33.open();\n    })(\"keyup.space\", function ExtensibleFormPropComponent_div_0_ng_template_7_Template_input_keyup_space_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n\n      const _r33 = i0.ɵɵreference(2);\n\n      return _r33.open();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", ctx_r9.prop.id)(\"formControlName\", ctx_r9.prop.name);\n  }\n}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_8_ng_template_0_Template(rf, ctx) {}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ExtensibleFormPropComponent_div_0_ng_template_8_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n    i0.ɵɵelement(1, \"ngb-timepicker\", 29);\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r10.prop.name);\n  }\n}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_9_ng_template_0_Template(rf, ctx) {}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ExtensibleFormPropComponent_div_0_ng_template_9_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n    i0.ɵɵelement(1, \"abp-date-time-picker\", 30);\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"prop\", ctx_r11.prop)(\"meridian\", ctx_r11.meridian);\n  }\n}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_10_ng_template_0_Template(rf, ctx) {}\n\nfunction ExtensibleFormPropComponent_div_0_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ExtensibleFormPropComponent_div_0_ng_template_10_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n    i0.ɵɵelement(1, \"textarea\", 31, 15);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", ctx_r12.prop.id)(\"formControlName\", ctx_r12.prop.name)(\"abpDisabled\", ctx_r12.disabled)(\"readonly\", ctx_r12.readonly);\n  }\n}\n\nfunction ExtensibleFormPropComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, ExtensibleFormPropComponent_div_0_ng_template_1_Template, 3, 7, \"ng-template\", 3);\n    i0.ɵɵtemplate(2, ExtensibleFormPropComponent_div_0_ng_template_2_Template, 1, 1, \"ng-template\", 4);\n    i0.ɵɵtemplate(3, ExtensibleFormPropComponent_div_0_ng_template_3_Template, 4, 6, \"ng-template\", 5);\n    i0.ɵɵtemplate(4, ExtensibleFormPropComponent_div_0_ng_template_4_Template, 5, 8, \"ng-template\", 6);\n    i0.ɵɵtemplate(5, ExtensibleFormPropComponent_div_0_ng_template_5_Template, 5, 8, \"ng-template\", 7);\n    i0.ɵɵtemplate(6, ExtensibleFormPropComponent_div_0_ng_template_6_Template, 6, 14, \"ng-template\", 8);\n    i0.ɵɵtemplate(7, ExtensibleFormPropComponent_div_0_ng_template_7_Template, 3, 3, \"ng-template\", 9);\n    i0.ɵɵtemplate(8, ExtensibleFormPropComponent_div_0_ng_template_8_Template, 2, 2, \"ng-template\", 10);\n    i0.ɵɵtemplate(9, ExtensibleFormPropComponent_div_0_ng_template_9_Template, 2, 3, \"ng-template\", 11);\n    i0.ɵɵtemplate(10, ExtensibleFormPropComponent_div_0_ng_template_10_Template, 3, 5, \"ng-template\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r0.getComponent(ctx_r0.prop));\n  }\n}\n\nfunction ExtensibleFormPropComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const classes_r41 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"htmlFor\", ctx_r2.prop.id)(\"ngClass\", classes_r41 || \"form-label\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(2, 4, ctx_r2.prop.displayName), \" \", ctx_r2.asterisk, \"\");\n  }\n}\n\nfunction ExtensibleFormComponent_ng_container_0_ng_container_1_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 5);\n    i0.ɵɵelement(1, \"abp-extensible-form-prop\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const prop_r4 = i0.ɵɵnextContext(2).$implicit;\n    const data_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroupName\", ctx_r7.extraPropertiesKey);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"prop\", prop_r4)(\"data\", data_r2);\n  }\n}\n\nfunction ExtensibleFormComponent_ng_container_0_ng_container_1_ng_container_1_ng_container_1_ng_template_2_abp_extensible_form_prop_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"abp-extensible-form-prop\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    const prop_r4 = ctx_r13.$implicit;\n    const first_r5 = ctx_r13.first;\n    const data_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"prop\", prop_r4)(\"data\", data_r2)(\"first\", first_r5);\n  }\n}\n\nfunction ExtensibleFormComponent_ng_container_0_ng_container_1_ng_container_1_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ExtensibleFormComponent_ng_container_0_ng_container_1_ng_container_1_ng_container_1_ng_template_2_abp_extensible_form_prop_0_Template, 1, 3, \"abp-extensible-form-prop\", 7);\n  }\n\n  if (rf & 2) {\n    const prop_r4 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.form.get(prop_r4.name));\n  }\n}\n\nfunction ExtensibleFormComponent_ng_container_0_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ExtensibleFormComponent_ng_container_0_ng_container_1_ng_container_1_ng_container_1_ng_container_1_Template, 2, 3, \"ng-container\", 3);\n    i0.ɵɵtemplate(2, ExtensibleFormComponent_ng_container_0_ng_container_1_ng_container_1_ng_container_1_ng_template_2_Template, 1, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r8 = i0.ɵɵreference(3);\n\n    const prop_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.extraProperties.controls[prop_r4.name])(\"ngIfElse\", _r8);\n  }\n}\n\nfunction ExtensibleFormComponent_ng_container_0_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ExtensibleFormComponent_ng_container_0_ng_container_1_ng_container_1_ng_container_1_Template, 4, 2, \"ng-container\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const prop_r4 = ctx.$implicit;\n    const data_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", prop_r4.visible(data_r2));\n  }\n}\n\nfunction ExtensibleFormComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ExtensibleFormComponent_ng_container_0_ng_container_1_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.propList)(\"ngForTrackBy\", ctx_r1.track.by(\"name\"));\n  }\n}\n\nfunction ExtensibleFormComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ExtensibleFormComponent_ng_container_0_ng_container_1_Template, 2, 2, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"abpPropDataFromList\", ctx_r0.propList)(\"abpPropDataWithRecord\", ctx_r0.record);\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction GridActionsComponent_div_0_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 10);\n  }\n\n  if (rf & 2) {\n    const action_r9 = ctx.$implicit;\n    i0.ɵɵnextContext(2);\n\n    const _r2 = i0.ɵɵreference(3);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, action_r9));\n  }\n}\n\nfunction GridActionsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"button\", 6);\n    i0.ɵɵelement(2, \"i\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 8);\n    i0.ɵɵtemplate(6, GridActionsComponent_div_0_ng_container_6_Template, 1, 4, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"me-1\", ctx_r0.icon);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(4, 6, ctx_r0.text), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.actionList)(\"ngForTrackBy\", ctx_r0.trackByFn);\n  }\n}\n\nfunction GridActionsComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n\n    const _r6 = i0.ɵɵreference(7);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r6)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, ctx_r1.actionList.get(0).value));\n  }\n}\n\nfunction GridActionsComponent_ng_template_2_ng_container_0_button_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction GridActionsComponent_ng_template_2_ng_container_0_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function GridActionsComponent_ng_template_2_ng_container_0_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const action_r10 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return action_r10.action(ctx_r14.data);\n    });\n    i0.ɵɵtemplate(1, GridActionsComponent_ng_template_2_ng_container_0_button_1_ng_container_1_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r10 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵnextContext();\n\n    const _r4 = i0.ɵɵreference(5);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r4)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, action_r10));\n  }\n}\n\nfunction GridActionsComponent_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, GridActionsComponent_ng_template_2_ng_container_0_button_1_Template, 2, 4, \"button\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const action_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"abpPermission\", action_r10.permission)(\"abpPermissionRunChangeDetection\", false);\n  }\n}\n\nfunction GridActionsComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, GridActionsComponent_ng_template_2_ng_container_0_Template, 2, 2, \"ng-container\", 11);\n  }\n\n  if (rf & 2) {\n    const action_r10 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", action_r10.visible(ctx_r3.data));\n  }\n}\n\nfunction GridActionsComponent_ng_template_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r19 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, action_r19.text));\n  }\n}\n\nfunction GridActionsComponent_ng_template_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r19 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, action_r19.text));\n  }\n}\n\nfunction GridActionsComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 7);\n    i0.ɵɵtemplate(1, GridActionsComponent_ng_template_4_span_1_Template, 3, 3, \"span\", 15);\n    i0.ɵɵtemplate(2, GridActionsComponent_ng_template_4_ng_template_2_Template, 3, 3, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const action_r19 = ctx.$implicit;\n\n    const _r21 = i0.ɵɵreference(3);\n\n    i0.ɵɵclassProp(\"me-1\", action_r19.icon);\n    i0.ɵɵproperty(\"ngClass\", action_r19.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", action_r19.icon)(\"ngIfElse\", _r21);\n  }\n}\n\nfunction GridActionsComponent_ng_template_6_ng_container_0_button_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction GridActionsComponent_ng_template_6_ng_container_0_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function GridActionsComponent_ng_template_6_ng_container_0_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const action_r25 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r29 = i0.ɵɵnextContext();\n      return action_r25.action(ctx_r29.data);\n    });\n    i0.ɵɵtemplate(1, GridActionsComponent_ng_template_6_ng_container_0_button_1_ng_container_1_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r25 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵnextContext();\n\n    const _r4 = i0.ɵɵreference(5);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r4)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, action_r25));\n  }\n}\n\nfunction GridActionsComponent_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, GridActionsComponent_ng_template_6_ng_container_0_button_1_Template, 2, 4, \"button\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const action_r25 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"abpPermission\", action_r25.permission)(\"abpPermissionRunChangeDetection\", false);\n  }\n}\n\nfunction GridActionsComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, GridActionsComponent_ng_template_6_ng_container_0_Template, 2, 2, \"ng-container\", 11);\n  }\n\n  if (rf & 2) {\n    const action_r25 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", action_r25.visible(ctx_r7.data));\n  }\n}\n\nfunction ExtensibleTableComponent_ngx_datatable_column_1_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ExtensibleTableComponent_ngx_datatable_column_1_ng_template_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"abp-grid-actions\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    const i_r4 = ctx_r8.rowIndex;\n    const row_r3 = ctx_r8.row;\n    i0.ɵɵproperty(\"index\", i_r4)(\"record\", row_r3);\n  }\n}\n\nconst _c4 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction ExtensibleTableComponent_ngx_datatable_column_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ExtensibleTableComponent_ngx_datatable_column_1_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵtemplate(1, ExtensibleTableComponent_ngx_datatable_column_1_ng_template_2_ng_template_1_Template, 1, 2, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const row_r3 = ctx.row;\n    const i_r4 = ctx.rowIndex;\n\n    const _r6 = i0.ɵɵreference(2);\n\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.actionsTemplate || _r6)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c4, row_r3, i_r4));\n  }\n}\n\nfunction ExtensibleTableComponent_ngx_datatable_column_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-datatable-column\", 3);\n    i0.ɵɵpipe(1, \"abpLocalization\");\n    i0.ɵɵtemplate(2, ExtensibleTableComponent_ngx_datatable_column_1_ng_template_2_Template, 3, 5, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"name\", i0.ɵɵpipeBind1(1, 4, ctx_r0.actionsText))(\"maxWidth\", ctx_r0.columnWidths[0])(\"width\", ctx_r0.columnWidths[0])(\"sortable\", false);\n  }\n}\n\nfunction ExtensibleTableComponent_ng_container_2_ng_template_3_ng_container_0_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵlistener(\"click\", function ExtensibleTableComponent_ng_container_2_ng_template_3_ng_container_0_ng_container_1_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext(3);\n      const row_r12 = ctx_r22.row;\n      const i_r13 = ctx_r22.index;\n      const prop_r9 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return prop_r9.action && prop_r9.action({\n        getInjected: ctx_r19.getInjected,\n        record: row_r12,\n        index: i_r13\n      });\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r12 = i0.ɵɵnextContext(3).row;\n    const prop_r9 = i0.ɵɵnextContext().$implicit;\n    const ctx_r18 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"pointer\", prop_r9.action);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 4, row_r12[\"_\" + prop_r9.name] == null ? null : row_r12[\"_\" + prop_r9.name].value), i0.ɵɵsanitizeHtml)(\"ngClass\", ctx_r18.entityPropTypeClasses[prop_r9.type]);\n  }\n}\n\nfunction ExtensibleTableComponent_ng_container_2_ng_template_3_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ExtensibleTableComponent_ng_container_2_ng_template_3_ng_container_0_ng_container_1_div_1_Template, 2, 6, \"div\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r16 = i0.ɵɵreference(3);\n\n    const row_r12 = i0.ɵɵnextContext().row;\n    const prop_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r12[\"_\" + prop_r9.name].component)(\"ngIfElse\", _r16);\n  }\n}\n\nfunction ExtensibleTableComponent_ng_container_2_ng_template_3_ng_container_0_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ExtensibleTableComponent_ng_container_2_ng_template_3_ng_container_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ExtensibleTableComponent_ng_container_2_ng_template_3_ng_container_0_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 14);\n  }\n\n  if (rf & 2) {\n    const row_r12 = i0.ɵɵnextContext(2).row;\n    const prop_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngComponentOutlet\", row_r12[\"_\" + prop_r9.name].component)(\"ngComponentOutletInjector\", row_r12[\"_\" + prop_r9.name].injector);\n  }\n}\n\nfunction ExtensibleTableComponent_ng_container_2_ng_template_3_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ExtensibleTableComponent_ng_container_2_ng_template_3_ng_container_0_ng_container_1_Template, 2, 2, \"ng-container\", 10);\n    i0.ɵɵtemplate(2, ExtensibleTableComponent_ng_container_2_ng_template_3_ng_container_0_ng_template_2_Template, 1, 2, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const row_r12 = i0.ɵɵnextContext().row;\n    const prop_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r12[\"_\" + prop_r9.name] == null ? null : row_r12[\"_\" + prop_r9.name].visible);\n  }\n}\n\nfunction ExtensibleTableComponent_ng_container_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ExtensibleTableComponent_ng_container_2_ng_template_3_ng_container_0_Template, 4, 1, \"ng-container\", 9);\n  }\n\n  if (rf & 2) {\n    const prop_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"abpPermission\", prop_r9.permission)(\"abpPermissionRunChangeDetection\", false);\n  }\n}\n\nfunction ExtensibleTableComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ngx-datatable-column\", 8);\n    i0.ɵɵpipe(2, \"abpLocalization\");\n    i0.ɵɵtemplate(3, ExtensibleTableComponent_ng_container_2_ng_template_3_Template, 1, 2, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const prop_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"width\", ctx_r1.columnWidths[i_r10 + 1] || 200)(\"name\", i0.ɵɵpipeBind1(2, 4, prop_r9.displayName))(\"prop\", prop_r9.name)(\"sortable\", prop_r9.sortable);\n  }\n}\n\nfunction PageToolbarComponent_div_1_ng_container_1_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction PageToolbarComponent_div_1_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, PageToolbarComponent_div_1_ng_container_1_ng_container_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵpipe(2, \"createInjector\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const component_r8 = ctx.ngIf;\n    const action_r1 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngComponentOutlet\", component_r8)(\"ngComponentOutletInjector\", i0.ɵɵpipeBind3(2, 2, ctx_r5.record, action_r1, ctx_r5));\n  }\n}\n\nfunction PageToolbarComponent_div_1_ng_container_1_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function PageToolbarComponent_div_1_ng_container_1_ng_container_1_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const action_r1 = i0.ɵɵnextContext(3).$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return action_r1.action(ctx_r11.data);\n    });\n    i0.ɵɵelement(1, \"i\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r1 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", action_r1.btnClass ? action_r1.btnClass : ctx_r7.defaultBtnClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"me-1\", action_r1.icon);\n    i0.ɵɵproperty(\"ngClass\", action_r1.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 5, action_r1.text), \" \");\n  }\n}\n\nfunction PageToolbarComponent_div_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, PageToolbarComponent_div_1_ng_container_1_ng_container_1_ng_container_1_Template, 3, 6, \"ng-container\", 5);\n    i0.ɵɵtemplate(2, PageToolbarComponent_div_1_ng_container_1_ng_container_1_ng_template_2_Template, 4, 7, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r6 = i0.ɵɵreference(3);\n\n    const action_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", action_r1.component)(\"ngIfElse\", _r6);\n  }\n}\n\nfunction PageToolbarComponent_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, PageToolbarComponent_div_1_ng_container_1_ng_container_1_Template, 4, 2, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const action_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"abpPermission\", action_r1.permission)(\"abpPermissionRunChangeDetection\", false);\n  }\n}\n\nfunction PageToolbarComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, PageToolbarComponent_div_1_ng_container_1_Template, 2, 2, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r1 = ctx.$implicit;\n    const last_r2 = ctx.last;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"pe-0\", last_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", action_r1.visible(ctx_r0.data));\n  }\n}\n\nlet DateTimeAdapter = /*#__PURE__*/(() => {\n  class DateTimeAdapter {\n    fromModel(value) {\n      if (!value) return null;\n      const date = new Date(value);\n      if (isNaN(date)) return null;\n      this.value = {\n        year: date.getFullYear(),\n        month: date.getMonth() + 1,\n        day: date.getDate(),\n        hour: date.getHours(),\n        minute: date.getMinutes(),\n        second: date.getSeconds()\n      };\n      return this.value;\n    }\n\n    toModel(value) {\n      if (!value) return '';\n      const now = new Date();\n      value = Object.assign(Object.assign({\n        // TODO look for strict mode errors\n        year: now.getUTCFullYear(),\n        month: now.getMonth() + 1,\n        day: now.getDate(),\n        hour: 0,\n        minute: 0,\n        second: 0\n      }, this.value), value);\n      const date = new Date(value.year, value.month - 1, value.day, value.hour, value.minute, value.second);\n      return new Date(date).toISOString();\n    }\n\n  }\n\n  DateTimeAdapter.ɵfac = function DateTimeAdapter_Factory(t) {\n    return new (t || DateTimeAdapter)();\n  };\n\n  DateTimeAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DateTimeAdapter,\n    factory: DateTimeAdapter.ɵfac\n  });\n  return DateTimeAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DateAdapter = /*#__PURE__*/(() => {\n  class DateAdapter extends NgbDateAdapter {\n    fromModel(value) {\n      if (!value) return null;\n      let date;\n\n      if (typeof value === 'string') {\n        date = this.dateOf(value);\n      } else {\n        date = new Date(value);\n      }\n\n      if (isNaN(date)) return null;\n      return {\n        day: date.getDate(),\n        month: date.getMonth() + 1,\n        year: date.getFullYear()\n      };\n    }\n\n    toModel(value) {\n      if (!value) return '';\n      const date = new Date(value.year, value.month - 1, value.day);\n      const formattedDate = formatDate(date, 'yyyy-MM-dd', 'en');\n      return formattedDate;\n    }\n\n    dateOf(value) {\n      const dateUtc = new Date(Date.parse(value));\n      return new Date(dateUtc.getTime() + Math.abs(dateUtc.getTimezoneOffset() * 60000));\n    }\n\n  }\n\n  DateAdapter.ɵfac = /* @__PURE__ */function () {\n    let ɵDateAdapter_BaseFactory;\n    return function DateAdapter_Factory(t) {\n      return (ɵDateAdapter_BaseFactory || (ɵDateAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(DateAdapter)))(t || DateAdapter);\n    };\n  }();\n\n  DateAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DateAdapter,\n    factory: DateAdapter.ɵfac\n  });\n  return DateAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TimeAdapter = /*#__PURE__*/(() => {\n  class TimeAdapter extends NgbTimeAdapter {\n    fromModel(value) {\n      if (!value) return null;\n      const date = isTimeStr(value) ? new Date(0, 0, 1, ...value.split(':').map(Number)) : new Date(value);\n      if (isNaN(date)) return null;\n      return {\n        hour: date.getHours(),\n        minute: date.getMinutes(),\n        second: date.getSeconds()\n      };\n    }\n\n    toModel(value) {\n      if (!value) return '';\n      const date = new Date(0, 0, 1, value.hour, value.minute, value.second);\n      const formattedDate = formatDate(date, 'HH:mm', 'en');\n      return formattedDate;\n    }\n\n  }\n\n  TimeAdapter.ɵfac = /* @__PURE__ */function () {\n    let ɵTimeAdapter_BaseFactory;\n    return function TimeAdapter_Factory(t) {\n      return (ɵTimeAdapter_BaseFactory || (ɵTimeAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(TimeAdapter)))(t || TimeAdapter);\n    };\n  }();\n\n  TimeAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TimeAdapter,\n    factory: TimeAdapter.ɵfac\n  });\n  return TimeAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction isTimeStr(value) {\n  return /^((2[123])|[01][0-9])(\\:[0-5][0-9]){1,2}$/.test(String(value));\n}\n\nfunction selfFactory(dependency) {\n  return dependency;\n}\n\nlet DateTimePickerComponent = /*#__PURE__*/(() => {\n  class DateTimePickerComponent {\n    constructor(cdRef) {\n      this.cdRef = cdRef;\n      this.meridian = false;\n    }\n\n    setDate(datestr) {\n      this.date.writeValue(datestr);\n    }\n\n    setTime(datestr) {\n      this.time.writeValue(datestr);\n    }\n\n  }\n\n  DateTimePickerComponent.ɵfac = function DateTimePickerComponent_Factory(t) {\n    return new (t || DateTimePickerComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  DateTimePickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DateTimePickerComponent,\n    selectors: [[\"abp-date-time-picker\"]],\n    viewQuery: function DateTimePickerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(NgbInputDatepicker, 5);\n        i0.ɵɵviewQuery(NgbTimepicker, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.date = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.time = _t.first);\n      }\n    },\n    inputs: {\n      prop: \"prop\",\n      meridian: \"meridian\"\n    },\n    exportAs: [\"abpDateTimePicker\"],\n    features: [i0.ɵɵProvidersFeature([], [{\n      provide: ControlContainer,\n      useFactory: selfFactory,\n      deps: [[new Optional(), new SkipSelf(), ControlContainer]]\n    }, {\n      provide: NgbDateAdapter,\n      useClass: DateTimeAdapter\n    }, {\n      provide: NgbTimeAdapter,\n      useClass: DateTimeAdapter\n    }])],\n    decls: 4,\n    vars: 4,\n    consts: [[\"ngbDatepicker\", \"\", \"type\", \"text\", 1, \"form-control\", 3, \"id\", \"formControlName\", \"ngModelChange\", \"click\", \"keyup.space\"], [\"datepicker\", \"ngbDatepicker\"], [3, \"formControlName\", \"meridian\", \"ngModelChange\"], [\"timepicker\", \"\"]],\n    template: function DateTimePickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"input\", 0, 1);\n        i0.ɵɵlistener(\"ngModelChange\", function DateTimePickerComponent_Template_input_ngModelChange_0_listener($event) {\n          return ctx.setTime($event);\n        })(\"click\", function DateTimePickerComponent_Template_input_click_0_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(1);\n\n          return _r0.open();\n        })(\"keyup.space\", function DateTimePickerComponent_Template_input_keyup_space_0_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(1);\n\n          return _r0.open();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ngb-timepicker\", 2, 3);\n        i0.ɵɵlistener(\"ngModelChange\", function DateTimePickerComponent_Template_ngb_timepicker_ngModelChange_2_listener($event) {\n          return ctx.setDate($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.prop.id)(\"formControlName\", ctx.prop.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControlName\", ctx.prop.name)(\"meridian\", ctx.meridian);\n      }\n    },\n    directives: [i2.NgbTimepicker, i2.NgbInputDatepicker, i2$1.DefaultValueAccessor, i2$1.NgControlStatus, i2$1.FormControlName, i6.ValidationDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return DateTimePickerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst EXTRA_PROPERTIES_KEY = 'extraProperties';\nconst TYPEAHEAD_TEXT_SUFFIX = '_Text';\nconst TYPEAHEAD_TEXT_SUFFIX_REGEX = /_Text$/;\n\nfunction createTypeaheadOptions(lookup) {\n  return (data, searchText) => searchText && data ? data.getInjected(RestService).request({\n    method: 'GET',\n    url: lookup.url || '',\n    params: {\n      [lookup.filterParamName || '']: searchText\n    }\n  }, {\n    apiName: 'Default'\n  }).pipe(map(response => {\n    const list = response[lookup.resultListPropertyName || ''];\n\n    const mapToOption = item => ({\n      key: item[lookup.displayPropertyName || ''],\n      value: item[lookup.valuePropertyName || '']\n    });\n\n    return list.map(mapToOption);\n  })) : of([]);\n}\n\nfunction getTypeaheadType(lookup, name) {\n  return Boolean(lookup.url) ? \"typeahead\"\n  /* Typeahead */\n  : name.endsWith(TYPEAHEAD_TEXT_SUFFIX) ? \"hidden\"\n  /* Hidden */\n  : undefined;\n}\n\nfunction createTypeaheadDisplayNameGenerator(displayNameGeneratorFn, properties) {\n  return (displayName, fallback) => {\n    const name = removeTypeaheadTextSuffix(fallback.name || '');\n    return displayNameGeneratorFn(displayName || properties[name].displayName, {\n      name,\n      resource: fallback.resource\n    });\n  };\n}\n\nfunction addTypeaheadTextSuffix(name) {\n  return name + TYPEAHEAD_TEXT_SUFFIX;\n}\n\nfunction hasTypeaheadTextSuffix(name) {\n  return TYPEAHEAD_TEXT_SUFFIX_REGEX.test(name);\n}\n\nfunction removeTypeaheadTextSuffix(name) {\n  return name.replace(TYPEAHEAD_TEXT_SUFFIX_REGEX, '');\n}\n\nlet DisabledDirective = /*#__PURE__*/(() => {\n  class DisabledDirective {\n    constructor(ngControl) {\n      this.ngControl = ngControl;\n      this.abpDisabled = false;\n    } // Related issue: https://github.com/angular/angular/issues/35330\n\n\n    ngOnChanges({\n      abpDisabled\n    }) {\n      if (this.ngControl.control && abpDisabled) {\n        this.ngControl.control[abpDisabled.currentValue ? 'disable' : 'enable']();\n      }\n    }\n\n  }\n\n  DisabledDirective.ɵfac = function DisabledDirective_Factory(t) {\n    return new (t || DisabledDirective)(i0.ɵɵdirectiveInject(i2$1.NgControl, 1));\n  };\n\n  DisabledDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DisabledDirective,\n    selectors: [[\"\", \"abpDisabled\", \"\"]],\n    inputs: {\n      abpDisabled: \"abpDisabled\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return DisabledDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ExtensibleFormPropComponent = /*#__PURE__*/(() => {\n  class ExtensibleFormPropComponent {\n    constructor(cdRef, track, configState, groupDirective) {\n      this.cdRef = cdRef;\n      this.track = track;\n      this.configState = configState;\n      this.asterisk = '';\n      this.options$ = of([]);\n      this.validators = [];\n\n      this.disabledFn = data => false;\n\n      this.search = text$ => text$ ? text$.pipe(debounceTime(300), distinctUntilChanged(), switchMap(text => this.prop.options(this.data, text))) : of([]);\n\n      this.typeaheadFormatter = option => option.key;\n\n      this.form = groupDirective.form;\n    }\n\n    get disabled() {\n      return this.disabledFn(this.data);\n    }\n\n    setTypeaheadValue(selectedOption) {\n      this.typeaheadModel = selectedOption || {\n        key: null,\n        value: null\n      };\n      const {\n        key,\n        value\n      } = this.typeaheadModel;\n      const [keyControl, valueControl] = this.getTypeaheadControls();\n      if ((valueControl === null || valueControl === void 0 ? void 0 : valueControl.value) && !value) valueControl.markAsDirty();\n      keyControl === null || keyControl === void 0 ? void 0 : keyControl.setValue(key);\n      valueControl === null || valueControl === void 0 ? void 0 : valueControl.setValue(value);\n    }\n\n    get meridian() {\n      return (this.configState.getDeep('localization.currentCulture.dateTimeFormat.shortTimePattern') || '').includes('tt');\n    }\n\n    get isInvalid() {\n      const control = this.form.get(this.prop.name);\n      return control.touched && control.invalid;\n    }\n\n    getTypeaheadControls() {\n      const {\n        name\n      } = this.prop;\n      const extraPropName = `${EXTRA_PROPERTIES_KEY}.${name}`;\n      const keyControl = this.form.get(addTypeaheadTextSuffix(extraPropName)) || this.form.get(addTypeaheadTextSuffix(name));\n      const valueControl = this.form.get(extraPropName) || this.form.get(name);\n      return [keyControl, valueControl];\n    }\n\n    setAsterisk() {\n      this.asterisk = this.validators.some(isRequired) ? '*' : '';\n    }\n\n    ngAfterViewInit() {\n      if (this.first && this.fieldRef) {\n        this.fieldRef.nativeElement.focus();\n      }\n    }\n\n    getComponent(prop) {\n      switch (prop.type) {\n        case \"boolean\"\n        /* Boolean */\n        :\n          return 'checkbox';\n\n        case \"date\"\n        /* Date */\n        :\n          return 'date';\n\n        case \"datetime\"\n        /* DateTime */\n        :\n          return 'dateTime';\n\n        case \"hidden\"\n        /* Hidden */\n        :\n          return 'hidden';\n\n        case \"multiselect\"\n        /* MultiSelect */\n        :\n          return 'multiselect';\n\n        case \"text\"\n        /* Text */\n        :\n          return 'textarea';\n\n        case \"time\"\n        /* Time */\n        :\n          return 'time';\n\n        case \"typeahead\"\n        /* Typeahead */\n        :\n          return 'typeahead';\n\n        default:\n          return prop.options ? 'select' : 'input';\n      }\n    }\n\n    getType(prop) {\n      switch (prop.type) {\n        case \"date\"\n        /* Date */\n        :\n        case \"string\"\n        /* String */\n        :\n          return 'text';\n\n        case \"boolean\"\n        /* Boolean */\n        :\n          return 'checkbox';\n\n        case \"number\"\n        /* Number */\n        :\n          return 'number';\n\n        case \"email\"\n        /* Email */\n        :\n          return 'email';\n\n        case \"password\"\n        /* Password */\n        :\n          return 'password';\n\n        default:\n          return 'hidden';\n      }\n    }\n\n    ngOnChanges({\n      prop\n    }) {\n      const currentProp = prop === null || prop === void 0 ? void 0 : prop.currentValue;\n      const {\n        options,\n        readonly,\n        disabled,\n        validators\n      } = currentProp || {};\n      if (options) this.options$ = options(this.data);\n      if (readonly) this.readonly = readonly(this.data);\n\n      if (disabled) {\n        this.disabledFn = disabled;\n      }\n\n      if (validators) {\n        this.validators = validators(this.data);\n        this.setAsterisk();\n      }\n\n      const [keyControl, valueControl] = this.getTypeaheadControls();\n      if (keyControl && valueControl) this.typeaheadModel = {\n        key: keyControl.value,\n        value: valueControl.value\n      };\n    }\n\n  }\n\n  ExtensibleFormPropComponent.ɵfac = function ExtensibleFormPropComponent_Factory(t) {\n    return new (t || ExtensibleFormPropComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TrackByService), i0.ɵɵdirectiveInject(i1.ConfigStateService), i0.ɵɵdirectiveInject(i2$1.FormGroupDirective));\n  };\n\n  ExtensibleFormPropComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ExtensibleFormPropComponent,\n    selectors: [[\"abp-extensible-form-prop\"]],\n    viewQuery: function ExtensibleFormPropComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fieldRef = _t.first);\n      }\n    },\n    inputs: {\n      data: \"data\",\n      prop: \"prop\",\n      first: \"first\"\n    },\n    features: [i0.ɵɵProvidersFeature([], [{\n      provide: ControlContainer,\n      useFactory: selfFactory,\n      deps: [[new Optional(), new SkipSelf(), ControlContainer]]\n    }, {\n      provide: NgbDateAdapter,\n      useClass: DateAdapter\n    }, {\n      provide: NgbTimeAdapter,\n      useClass: TimeAdapter\n    }]), i0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[\"class\", \"mb-3 form-group\", 3, \"ngSwitch\", 4, \"abpPermission\", \"abpPermissionRunChangeDetection\"], [\"label\", \"\"], [1, \"mb-3\", \"form-group\", 3, \"ngSwitch\"], [\"ngSwitchCase\", \"input\"], [\"ngSwitchCase\", \"hidden\"], [\"ngSwitchCase\", \"checkbox\"], [\"ngSwitchCase\", \"select\"], [\"ngSwitchCase\", \"multiselect\"], [\"ngSwitchCase\", \"typeahead\"], [\"ngSwitchCase\", \"date\"], [\"ngSwitchCase\", \"time\"], [\"ngSwitchCase\", \"dateTime\"], [\"ngSwitchCase\", \"textarea\"], [3, \"ngTemplateOutlet\"], [1, \"form-control\", 3, \"id\", \"formControlName\", \"autocomplete\", \"type\", \"abpDisabled\", \"readonly\"], [\"field\", \"\"], [\"type\", \"hidden\", 3, \"formControlName\"], [\"validationTarget\", \"\", 1, \"form-check\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"id\", \"formControlName\", \"abpDisabled\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"form-select\", \"form-control\", 3, \"id\", \"formControlName\", \"abpDisabled\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngValue\"], [\"multiple\", \"multiple\", 1, \"form-select\", \"form-control\", 3, \"id\", \"formControlName\", \"abpDisabled\"], [\"validationStyle\", \"\", \"validationTarget\", \"\", 1, \"position-relative\"], [\"typeahead\", \"\"], [1, \"form-control\", 3, \"id\", \"autocomplete\", \"abpDisabled\", \"ngbTypeahead\", \"editable\", \"inputFormatter\", \"resultFormatter\", \"ngModelOptions\", \"ngModel\", \"ngModelChange\", \"selectItem\", \"blur\"], [\"ngbDatepicker\", \"\", \"type\", \"text\", 1, \"form-control\", 3, \"id\", \"formControlName\", \"click\", \"keyup.space\"], [\"datepicker\", \"ngbDatepicker\"], [3, \"formControlName\"], [3, \"prop\", \"meridian\"], [1, \"form-control\", 3, \"id\", \"formControlName\", \"abpDisabled\", \"readonly\"], [3, \"htmlFor\", \"ngClass\"]],\n    template: function ExtensibleFormPropComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ExtensibleFormPropComponent_div_0_Template, 11, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, ExtensibleFormPropComponent_ng_template_1_Template, 3, 6, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"abpPermission\", ctx.prop.permission)(\"abpPermissionRunChangeDetection\", false);\n      }\n    },\n    directives: [i2.NgbTimepicker, DateTimePickerComponent, i1.PermissionDirective, i5.NgSwitch, i5.NgSwitchCase, i5.NgTemplateOutlet, i2$1.DefaultValueAccessor, i2$1.NgControlStatus, i2$1.FormControlName, i6.ValidationDirective, DisabledDirective, i6.ValidationTargetDirective, i2$1.CheckboxControlValueAccessor, i2$1.SelectControlValueAccessor, i5.NgForOf, i2$1.NgSelectOption, i2$1.ɵNgSelectMultipleOption, i2$1.SelectMultipleControlValueAccessor, i6.ValidationStyleDirective, i2.NgbTypeahead, i2$1.NgModel, i2.NgbInputDatepicker, i5.NgClass],\n    pipes: [i5.AsyncPipe, i1.LocalizationPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return ExtensibleFormPropComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction isRequired(validator) {\n  return validator === Validators.required || validator === AbpValidators.required;\n}\n\nconst EXTENSIONS_IDENTIFIER = new InjectionToken('EXTENSIONS_IDENTIFIER');\nconst EXTENSIONS_ACTION_TYPE = new InjectionToken('EXTENSIONS_ACTION_TYPE');\nconst EXTENSIONS_ACTION_DATA = new InjectionToken('EXTENSIONS_ACTION_DATA');\nconst EXTENSIONS_ACTION_CALLBACK = new InjectionToken('EXTENSIONS_ACTION_DATA');\nconst PROP_DATA_STREAM = new InjectionToken('PROP_DATA_STREAM');\nconst ENTITY_PROP_TYPE_CLASSES = new InjectionToken('ENTITY_PROP_TYPE_CLASSES', {\n  factory: () => ({})\n});\n\nclass ActionList extends LinkedList {}\n\nclass ActionData {\n  get data() {\n    return {\n      getInjected: this.getInjected,\n      index: this.index,\n      record: this.record\n    };\n  }\n\n}\n\nclass Action {\n  constructor(permission, visible = _ => true, action = _ => {}) {\n    this.permission = permission;\n    this.visible = visible;\n    this.action = action;\n  }\n\n}\n\nclass ActionsFactory {\n  constructor() {\n    this.contributorCallbacks = {};\n  }\n\n  get(name) {\n    this.contributorCallbacks[name] = this.contributorCallbacks[name] || [];\n    return new this._ctor(this.contributorCallbacks[name]);\n  }\n\n}\n\nclass Actions {\n  constructor(callbackList) {\n    this.callbackList = callbackList;\n  }\n\n  get actions() {\n    const actionList = new this._ctor();\n    this.callbackList.forEach(callback => callback(actionList));\n    return actionList;\n  }\n\n  addContributor(contributeCallback) {\n    this.callbackList.push(contributeCallback);\n  }\n\n  clearContributors() {\n    while (this.callbackList.length) this.callbackList.pop();\n  }\n\n}\n\nclass EntityActionList extends ActionList {}\n\nclass EntityActions extends Actions {\n  constructor() {\n    super(...arguments);\n    this._ctor = EntityActionList;\n  }\n\n}\n\nclass EntityActionsFactory extends ActionsFactory {\n  constructor() {\n    super(...arguments);\n    this._ctor = EntityActions;\n  }\n\n}\n\nclass EntityAction extends Action {\n  constructor(options) {\n    super(options.permission, options.visible, options.action);\n    this.text = options.text;\n    this.icon = options.icon || '';\n  }\n\n  static create(options) {\n    return new EntityAction(options);\n  }\n\n  static createMany(arrayOfOptions) {\n    return arrayOfOptions.map(EntityAction.create);\n  }\n\n}\n\nclass PropList extends LinkedList {}\n\nclass PropData {\n  get data() {\n    return {\n      getInjected: this.getInjected,\n      index: this.index,\n      record: this.record\n    };\n  }\n\n}\n\nclass Prop {\n  constructor(type, name, displayName, permission, visible = _ => true, isExtra = false) {\n    this.type = type;\n    this.name = name;\n    this.displayName = displayName;\n    this.permission = permission;\n    this.visible = visible;\n    this.isExtra = isExtra;\n    this.displayName = this.displayName || this.name;\n  }\n\n}\n\nclass PropsFactory {\n  constructor() {\n    this.contributorCallbacks = {};\n  }\n\n  get(name) {\n    this.contributorCallbacks[name] = this.contributorCallbacks[name] || [];\n    return new this._ctor(this.contributorCallbacks[name]);\n  }\n\n}\n\nclass Props {\n  constructor(callbackList) {\n    this.callbackList = callbackList;\n  }\n\n  get props() {\n    const propList = new this._ctor();\n    this.callbackList.forEach(callback => callback(propList));\n    return propList;\n  }\n\n  addContributor(contributeCallback) {\n    this.callbackList.push(contributeCallback);\n  }\n\n  clearContributors() {\n    while (this.callbackList.length) this.callbackList.pop();\n  }\n\n}\n\nclass EntityPropList extends PropList {}\n\nclass EntityProps extends Props {\n  constructor() {\n    super(...arguments);\n    this._ctor = EntityPropList;\n  }\n\n}\n\nclass EntityPropsFactory extends PropsFactory {\n  constructor() {\n    super(...arguments);\n    this._ctor = EntityProps;\n  }\n\n}\n\nclass EntityProp extends Prop {\n  constructor(options) {\n    super(options.type, options.name, options.displayName, options.permission, options.visible, options.isExtra);\n    this.columnWidth = options.columnWidth;\n    this.sortable = options.sortable || false;\n\n    this.valueResolver = options.valueResolver || (data => of(escapeHtmlChars(data.record[this.name])));\n\n    this.action = options.action;\n    this.component = options.component;\n    this.enumList = options.enumList;\n  }\n\n  static create(options) {\n    return new EntityProp(options);\n  }\n\n  static createMany(arrayOfOptions) {\n    return arrayOfOptions.map(EntityProp.create);\n  }\n\n}\n\nclass FormPropList extends PropList {}\n\nclass FormProps extends Props {\n  constructor() {\n    super(...arguments);\n    this._ctor = FormPropList;\n  }\n\n}\n\nclass CreateFormPropsFactory extends PropsFactory {\n  constructor() {\n    super(...arguments);\n    this._ctor = FormProps;\n  }\n\n}\n\nclass EditFormPropsFactory extends PropsFactory {\n  constructor() {\n    super(...arguments);\n    this._ctor = FormProps;\n  }\n\n}\n\nclass FormProp extends Prop {\n  constructor(options) {\n    super(options.type, options.name, options.displayName, options.permission, options.visible, options.isExtra);\n\n    this.asyncValidators = options.asyncValidators || (_ => []);\n\n    this.validators = options.validators || (_ => []);\n\n    this.disabled = options.disabled || (_ => false);\n\n    this.readonly = options.readonly || (_ => false);\n\n    this.autocomplete = options.autocomplete || 'off';\n    this.options = options.options;\n    this.id = options.id || options.name;\n    const defaultValue = options.defaultValue;\n    this.defaultValue = isFalsyValue(defaultValue) ? defaultValue : defaultValue || null;\n  }\n\n  static create(options) {\n    return new FormProp(options);\n  }\n\n  static createMany(arrayOfOptions) {\n    return arrayOfOptions.map(FormProp.create);\n  }\n\n}\n\nclass FormPropData extends PropData {\n  constructor(injector, record) {\n    super();\n    this.record = record;\n    this.getInjected = injector.get.bind(injector);\n  }\n\n}\n\nfunction isFalsyValue(defaultValue) {\n  return [0, '', false].indexOf(defaultValue) > -1;\n}\n\nclass ToolbarActionList extends ActionList {}\n\nclass ToolbarActions extends Actions {\n  constructor() {\n    super(...arguments);\n    this._ctor = ToolbarActionList;\n  }\n\n}\n\nclass ToolbarActionsFactory extends ActionsFactory {\n  constructor() {\n    super(...arguments);\n    this._ctor = ToolbarActions;\n  }\n\n}\n\nclass ToolbarAction extends Action {\n  constructor(options) {\n    super(options.permission || '', options.visible, options.action);\n    this.text = options.text;\n    this.icon = options.icon || '';\n\n    if (options.btnClass) {\n      this.btnClass = options.btnClass;\n    }\n  }\n\n  static create(options) {\n    return new ToolbarAction(options);\n  }\n\n  static createMany(arrayOfOptions) {\n    return arrayOfOptions.map(ToolbarAction.create);\n  }\n\n}\n\nclass ToolbarComponent extends Action {\n  constructor(options) {\n    super(options.permission || '', options.visible, options.action);\n    this.component = options.component;\n  }\n\n  static create(options) {\n    return new ToolbarComponent(options);\n  }\n\n  static createMany(arrayOfOptions) {\n    return arrayOfOptions.map(ToolbarComponent.create);\n  }\n\n}\n\nlet ExtensionsService = /*#__PURE__*/(() => {\n  class ExtensionsService {\n    constructor() {\n      this.entityActions = new EntityActionsFactory();\n      this.toolbarActions = new ToolbarActionsFactory();\n      this.entityProps = new EntityPropsFactory();\n      this.createFormProps = new CreateFormPropsFactory();\n      this.editFormProps = new EditFormPropsFactory();\n    }\n\n  }\n\n  ExtensionsService.ɵfac = function ExtensionsService_Factory(t) {\n    return new (t || ExtensionsService)();\n  };\n\n  ExtensionsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ExtensionsService,\n    factory: ExtensionsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ExtensionsService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/* eslint-disable @angular-eslint/no-input-rename */\n\n\nlet PropDataDirective = /*#__PURE__*/(() => {\n  class PropDataDirective extends PropData {\n    constructor(tempRef, vcRef, injector) {\n      super();\n      this.tempRef = tempRef;\n      this.vcRef = vcRef;\n      this.getInjected = injector.get.bind(injector);\n    }\n\n    ngOnChanges() {\n      this.vcRef.clear();\n      this.vcRef.createEmbeddedView(this.tempRef, {\n        $implicit: this.data,\n        index: 0\n      });\n    }\n\n    ngOnDestroy() {\n      this.vcRef.clear();\n    }\n\n  }\n\n  PropDataDirective.ɵfac = function PropDataDirective_Factory(t) {\n    return new (t || PropDataDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  PropDataDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: PropDataDirective,\n    selectors: [[\"\", \"abpPropData\", \"\"]],\n    inputs: {\n      propList: [\"abpPropDataFromList\", \"propList\"],\n      record: [\"abpPropDataWithRecord\", \"record\"],\n      index: [\"abpPropDataAtIndex\", \"index\"]\n    },\n    exportAs: [\"abpPropData\"],\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n  });\n  return PropDataDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ExtensibleFormComponent = /*#__PURE__*/(() => {\n  class ExtensibleFormComponent {\n    constructor(cdRef, track, container, extensions, identifier) {\n      this.cdRef = cdRef;\n      this.track = track;\n      this.container = container;\n      this.extensions = extensions;\n      this.identifier = identifier;\n      this.extraPropertiesKey = EXTRA_PROPERTIES_KEY;\n    }\n\n    set selectedRecord(record) {\n      const type = !record || JSON.stringify(record) === '{}' ? 'create' : 'edit';\n      this.propList = this.extensions[`${type}FormProps`].get(this.identifier).props;\n      this.record = record;\n    }\n\n    get form() {\n      return this.container ? this.container.control : {\n        controls: {}\n      };\n    }\n\n    get extraProperties() {\n      return this.form.controls.extraProperties || {\n        controls: {}\n      };\n    }\n\n  }\n\n  ExtensibleFormComponent.ɵfac = function ExtensibleFormComponent_Factory(t) {\n    return new (t || ExtensibleFormComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.TrackByService), i0.ɵɵdirectiveInject(i2$1.ControlContainer), i0.ɵɵdirectiveInject(ExtensionsService), i0.ɵɵdirectiveInject(EXTENSIONS_IDENTIFIER));\n  };\n\n  ExtensibleFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ExtensibleFormComponent,\n    selectors: [[\"abp-extensible-form\"]],\n    viewQuery: function ExtensibleFormComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(ExtensibleFormPropComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formProps = _t);\n      }\n    },\n    inputs: {\n      selectedRecord: \"selectedRecord\"\n    },\n    exportAs: [\"abpExtensibleForm\"],\n    features: [i0.ɵɵProvidersFeature([], [{\n      provide: ControlContainer,\n      useFactory: selfFactory,\n      deps: [[new Optional(), new SkipSelf(), ControlContainer]]\n    }])],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [4, \"abpPropData\", \"abpPropDataFromList\", \"abpPropDataWithRecord\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"formGroupName\", 4, \"ngIf\", \"ngIfElse\"], [\"tempDefault\", \"\"], [3, \"formGroupName\"], [3, \"prop\", \"data\"], [3, \"prop\", \"data\", \"first\", 4, \"ngIf\"], [3, \"prop\", \"data\", \"first\"]],\n    template: function ExtensibleFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ExtensibleFormComponent_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.form);\n      }\n    },\n    directives: [ExtensibleFormPropComponent, i5.NgIf, PropDataDirective, i5.NgForOf, i2$1.NgControlStatusGroup, i2$1.FormGroupName, i6.ValidationGroupDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return ExtensibleFormComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // Fix for https://github.com/angular/angular/issues/23904\n// @dynamic\n\n\nlet AbstractActionsComponent = /*#__PURE__*/(() => {\n  class AbstractActionsComponent extends ActionData {\n    constructor(injector) {\n      super();\n      this.getInjected = injector.get.bind(injector);\n      const extensions = injector.get(ExtensionsService);\n      const name = injector.get(EXTENSIONS_IDENTIFIER);\n      const type = injector.get(EXTENSIONS_ACTION_TYPE);\n      this.actionList = extensions[type].get(name).actions;\n    }\n\n  }\n\n  AbstractActionsComponent.ɵfac = function AbstractActionsComponent_Factory(t) {\n    return new (t || AbstractActionsComponent)(i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  AbstractActionsComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AbstractActionsComponent,\n    inputs: {\n      record: \"record\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return AbstractActionsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet GridActionsComponent = /*#__PURE__*/(() => {\n  class GridActionsComponent extends AbstractActionsComponent {\n    constructor(injector) {\n      super(injector);\n      this.icon = 'fa fa-cog';\n      this.text = '';\n\n      this.trackByFn = (_, item) => item.text;\n    }\n\n  }\n\n  GridActionsComponent.ɵfac = function GridActionsComponent_Factory(t) {\n    return new (t || GridActionsComponent)(i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  GridActionsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: GridActionsComponent,\n    selectors: [[\"abp-grid-actions\"]],\n    inputs: {\n      icon: \"icon\",\n      index: \"index\",\n      text: \"text\"\n    },\n    exportAs: [\"abpGridActions\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: EXTENSIONS_ACTION_TYPE,\n      useValue: 'entityActions'\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 8,\n    vars: 2,\n    consts: [[\"ngbDropdown\", \"\", \"container\", \"body\", \"class\", \"d-inline-block\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [\"dropDownBtnItemTmp\", \"\"], [\"buttonContentTmp\", \"\"], [\"btnTmp\", \"\"], [\"ngbDropdown\", \"\", \"container\", \"body\", 1, \"d-inline-block\"], [\"data-toggle\", \"dropdown\", \"aria-haspopup\", \"true\", \"ngbDropdownToggle\", \"\", 1, \"btn\", \"btn-primary\", \"btn-sm\", \"dropdown-toggle\"], [3, \"ngClass\"], [\"ngbDropdownMenu\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngIf\"], [\"ngbDropdownItem\", \"\", \"type\", \"button\", 3, \"click\", 4, \"abpPermission\", \"abpPermissionRunChangeDetection\"], [\"ngbDropdownItem\", \"\", \"type\", \"button\", 3, \"click\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngIf\", \"ngIfElse\"], [\"ellipsis\", \"\"], [\"abpEllipsis\", \"\"], [\"type\", \"button\", \"class\", \"btn btn-primary text-center\", 3, \"click\", 4, \"abpPermission\", \"abpPermissionRunChangeDetection\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"text-center\", 3, \"click\"]],\n    template: function GridActionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, GridActionsComponent_div_0_Template, 7, 8, \"div\", 0);\n        i0.ɵɵtemplate(1, GridActionsComponent_ng_container_1_Template, 1, 4, \"ng-container\", 1);\n        i0.ɵɵtemplate(2, GridActionsComponent_ng_template_2_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(4, GridActionsComponent_ng_template_4_Template, 4, 5, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(6, GridActionsComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.actionList.length > 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.actionList.length === 1);\n      }\n    },\n    directives: [i5.NgIf, i2.NgbDropdown, i2.NgbDropdownToggle, i5.NgClass, i2.NgbDropdownMenu, i5.NgForOf, i5.NgTemplateOutlet, i1.PermissionDirective, i2.NgbDropdownItem, i4.EllipsisDirective],\n    pipes: [i1.LocalizationPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return GridActionsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst DEFAULT_ACTIONS_COLUMN_WIDTH = 150;\nlet ExtensibleTableComponent = /*#__PURE__*/(() => {\n  class ExtensibleTableComponent {\n    constructor(locale, config, injector) {\n      this.locale = locale;\n      this.config = config;\n      this.injector = injector;\n\n      this.trackByFn = (_, item) => item.name;\n\n      this.entityPropTypeClasses = injector.get(ENTITY_PROP_TYPE_CLASSES);\n      this.getInjected = injector.get.bind(injector);\n      const extensions = injector.get(ExtensionsService);\n      const name = injector.get(EXTENSIONS_IDENTIFIER);\n      this.propList = extensions.entityProps.get(name).props;\n      this.actionList = extensions['entityActions'].get(name).actions;\n      const permissionService = injector.get(PermissionService);\n      this.hasAtLeastOnePermittedAction = permissionService.filterItemsByPolicy(this.actionList.toArray().map(action => ({\n        requiredPolicy: action.permission\n      }))).length > 0;\n      this.setColumnWidths(DEFAULT_ACTIONS_COLUMN_WIDTH);\n    }\n\n    set actionsText(value) {\n      this._actionsText = value;\n    }\n\n    get actionsText() {\n      var _a;\n\n      return (_a = this._actionsText) !== null && _a !== void 0 ? _a : this.actionList.length > 1 ? 'AbpUi::Actions' : '';\n    }\n\n    set actionsColumnWidth(width) {\n      this.setColumnWidths(width ? Number(width) : undefined);\n    }\n\n    setColumnWidths(actionsColumn) {\n      const widths = [actionsColumn];\n      this.propList.forEach(({\n        value: prop\n      }) => {\n        widths.push(prop.columnWidth);\n      });\n      this.columnWidths = widths;\n    }\n\n    getDate(value, format) {\n      return value ? formatDate(value, format, this.locale) : '';\n    }\n\n    getIcon(value) {\n      return value ? '<div class=\"text-success\"><i class=\"fa fa-check\"></i></div>' : '<div class=\"text-danger\"><i class=\"fa fa-times\"></i></div>';\n    }\n\n    getEnum(rowValue, list) {\n      if (!list) return rowValue;\n      const {\n        key\n      } = list.find(({\n        value\n      }) => value === rowValue);\n      return key;\n    }\n\n    getContent(prop, data) {\n      return prop.valueResolver(data).pipe(map(value => {\n        switch (prop.type) {\n          case \"boolean\"\n          /* Boolean */\n          :\n            return this.getIcon(value);\n\n          case \"date\"\n          /* Date */\n          :\n            return this.getDate(value, getShortDateFormat(this.config));\n\n          case \"time\"\n          /* Time */\n          :\n            return this.getDate(value, getShortTimeFormat(this.config));\n\n          case \"datetime\"\n          /* DateTime */\n          :\n            return this.getDate(value, getShortDateShortTimeFormat(this.config));\n\n          case \"enum\"\n          /* Enum */\n          :\n            return this.getEnum(value, prop.enumList);\n\n          default:\n            return value;\n          // More types can be handled in the future\n        }\n      }));\n    }\n\n    ngOnChanges({\n      data\n    }) {\n      if (!(data === null || data === void 0 ? void 0 : data.currentValue)) return;\n      this.data = data.currentValue.map((record, index) => {\n        this.propList.forEach(prop => {\n          const propData = {\n            getInjected: this.getInjected,\n            record,\n            index\n          };\n          const value = this.getContent(prop.value, propData);\n          const propKey = `_${prop.value.name}`;\n          record[propKey] = {\n            visible: prop.value.visible(propData),\n            value\n          };\n\n          if (prop.value.component) {\n            const injector = Injector.create([{\n              provide: PROP_DATA_STREAM,\n              useValue: value\n            }], this.injector);\n            record[propKey].injector = injector;\n            record[propKey].component = prop.value.component;\n          }\n        });\n        return record;\n      });\n    }\n\n  }\n\n  ExtensibleTableComponent.ɵfac = function ExtensibleTableComponent_Factory(t) {\n    return new (t || ExtensibleTableComponent)(i0.ɵɵdirectiveInject(LOCALE_ID), i0.ɵɵdirectiveInject(i1.ConfigStateService), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  ExtensibleTableComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ExtensibleTableComponent,\n    selectors: [[\"abp-extensible-table\"]],\n    inputs: {\n      actionsText: \"actionsText\",\n      data: \"data\",\n      list: \"list\",\n      recordsTotal: \"recordsTotal\",\n      actionsColumnWidth: \"actionsColumnWidth\",\n      actionsTemplate: \"actionsTemplate\"\n    },\n    exportAs: [\"abpExtensibleTable\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 6,\n    consts: [[\"default\", \"\", 3, \"rows\", \"count\", \"list\"], [3, \"name\", \"maxWidth\", \"width\", \"sortable\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"name\", \"maxWidth\", \"width\", \"sortable\"], [\"ngx-datatable-cell-template\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"gridActions\", \"\"], [\"text\", \"AbpUi::Actions\", 3, \"index\", \"record\"], [3, \"width\", \"name\", \"prop\", \"sortable\"], [4, \"abpPermission\", \"abpPermissionRunChangeDetection\"], [4, \"ngIf\"], [\"component\", \"\"], [3, \"innerHTML\", \"ngClass\", \"pointer\", \"click\", 4, \"ngIf\", \"ngIfElse\"], [3, \"innerHTML\", \"ngClass\", \"click\"], [4, \"ngComponentOutlet\", \"ngComponentOutletInjector\"]],\n    template: function ExtensibleTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ngx-datatable\", 0);\n        i0.ɵɵtemplate(1, ExtensibleTableComponent_ngx_datatable_column_1_Template, 3, 6, \"ngx-datatable-column\", 1);\n        i0.ɵɵtemplate(2, ExtensibleTableComponent_ng_container_2_Template, 4, 6, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"rows\", ctx.data)(\"count\", ctx.recordsTotal)(\"list\", ctx.list);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.actionsTemplate || ctx.actionList.length && ctx.hasAtLeastOnePermittedAction);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.propList)(\"ngForTrackBy\", ctx.trackByFn);\n      }\n    },\n    directives: [i2$2.DatatableComponent, GridActionsComponent, i4.NgxDatatableDefaultDirective, i4.NgxDatatableListDirective, i5.NgIf, i2$2.DataTableColumnDirective, i2$2.DataTableColumnCellDirective, i5.NgTemplateOutlet, i5.NgForOf, i1.PermissionDirective, i5.NgClass, i5.NgComponentOutlet],\n    pipes: [i1.LocalizationPipe, i5.AsyncPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return ExtensibleTableComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CreateInjectorPipe = /*#__PURE__*/(() => {\n  class CreateInjectorPipe {\n    transform(_, action, context) {\n      const get = (token, notFoundValue, flags) => {\n        const componentData = context.getData();\n\n        const componentDataCallback = data => {\n          data = data !== null && data !== void 0 ? data : context.getData();\n          return action.action(data);\n        };\n\n        let extensionData;\n\n        switch (token) {\n          case EXTENSIONS_ACTION_DATA:\n            extensionData = componentData;\n            break;\n\n          case EXTENSIONS_ACTION_CALLBACK:\n            extensionData = componentDataCallback;\n            break;\n\n          default:\n            extensionData = context.getInjected.call(context.injector, token, notFoundValue, flags);\n        }\n\n        return extensionData;\n      };\n\n      return {\n        get\n      };\n    }\n\n  }\n\n  CreateInjectorPipe.ɵfac = function CreateInjectorPipe_Factory(t) {\n    return new (t || CreateInjectorPipe)();\n  };\n\n  CreateInjectorPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"createInjector\",\n    type: CreateInjectorPipe,\n    pure: true\n  });\n  return CreateInjectorPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PageToolbarComponent = /*#__PURE__*/(() => {\n  class PageToolbarComponent extends AbstractActionsComponent {\n    constructor(injector) {\n      super(injector);\n      this.injector = injector;\n      this.defaultBtnClass = 'btn btn-sm btn-primary';\n\n      this.getData = () => this.data;\n\n      this.trackByFn = (_, item) => item.action || item.component;\n    }\n\n  }\n\n  PageToolbarComponent.ɵfac = function PageToolbarComponent_Factory(t) {\n    return new (t || PageToolbarComponent)(i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  PageToolbarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PageToolbarComponent,\n    selectors: [[\"abp-page-toolbar\"]],\n    exportAs: [\"abpPageToolbar\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: EXTENSIONS_ACTION_TYPE,\n      useValue: 'toolbarActions'\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"id\", \"AbpContentToolbar\", 1, \"row\", \"justify-content-end\", \"mx-0\"], [\"class\", \"col-auto px-1 pt-0 pt-md-2\", 3, \"pe-0\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"col-auto\", \"px-1\", \"pt-0\", \"pt-md-2\"], [4, \"ngIf\"], [4, \"abpPermission\", \"abpPermissionRunChangeDetection\"], [4, \"ngIf\", \"ngIfElse\"], [\"button\", \"\"], [4, \"ngComponentOutlet\", \"ngComponentOutletInjector\"], [\"type\", \"button\", 3, \"ngClass\", \"click\"], [3, \"ngClass\"]],\n    template: function PageToolbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, PageToolbarComponent_div_1_Template, 2, 3, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.actionList)(\"ngForTrackBy\", ctx.trackByFn);\n      }\n    },\n    directives: [i5.NgForOf, i5.NgIf, i1.PermissionDirective, i5.NgComponentOutlet, i5.NgClass],\n    pipes: [CreateInjectorPipe, i1.LocalizationPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return PageToolbarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar objectExtensions = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\nlet BaseUiExtensionsModule = /*#__PURE__*/(() => {\n  class BaseUiExtensionsModule {}\n\n  BaseUiExtensionsModule.ɵfac = function BaseUiExtensionsModule_Factory(t) {\n    return new (t || BaseUiExtensionsModule)();\n  };\n\n  BaseUiExtensionsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BaseUiExtensionsModule\n  });\n  BaseUiExtensionsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CoreModule, ThemeSharedModule, NgxValidateCoreModule, NgbDatepickerModule, NgbDropdownModule, NgbTimepickerModule, NgbTypeaheadModule]]\n  });\n  return BaseUiExtensionsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet UiExtensionsModule = /*#__PURE__*/(() => {\n  class UiExtensionsModule {}\n\n  UiExtensionsModule.ɵfac = function UiExtensionsModule_Factory(t) {\n    return new (t || UiExtensionsModule)();\n  };\n\n  UiExtensionsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: UiExtensionsModule\n  });\n  UiExtensionsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[BaseUiExtensionsModule], BaseUiExtensionsModule]\n  });\n  return UiExtensionsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction mergeWithDefaultActions(extension, defaultActions, ...contributors) {\n  Object.keys(defaultActions).forEach(name => {\n    const actions = extension.get(name);\n    actions.clearContributors();\n    actions.addContributor(actionList => actionList.addManyTail(defaultActions[name]));\n    contributors.forEach(contributor => (contributor[name] || []).forEach(callback => actions.addContributor(callback)));\n  });\n}\n\nfunction generateFormFromProps(data) {\n  const extensions = data.getInjected(ExtensionsService);\n  const identifier = data.getInjected(EXTENSIONS_IDENTIFIER);\n  const form = new FormGroup({});\n  const extraForm = new FormGroup({});\n  form.addControl(EXTRA_PROPERTIES_KEY, extraForm);\n  const record = data.record || {};\n  const type = JSON.stringify(record) === '{}' ? 'create' : 'edit';\n  const props = extensions[`${type}FormProps`].get(identifier).props;\n  const extraProperties = record[EXTRA_PROPERTIES_KEY] || {};\n  props.forEach(({\n    value: prop\n  }) => {\n    const name = prop.name;\n    const isExtraProperty = prop.isExtra || name in extraProperties;\n    let value = isExtraProperty ? extraProperties[name] : name in record ? record[name] : undefined;\n    if (typeof value === 'undefined') value = prop.defaultValue;\n\n    if (value) {\n      let adapter;\n\n      switch (prop.type) {\n        case \"date\"\n        /* Date */\n        :\n          adapter = new DateAdapter();\n          value = adapter.toModel(adapter.fromModel(value));\n          break;\n\n        case \"time\"\n        /* Time */\n        :\n          adapter = new TimeAdapter();\n          value = adapter.toModel(adapter.fromModel(value));\n          break;\n\n        case \"datetime\"\n        /* DateTime */\n        :\n          adapter = new DateTimeAdapter();\n          value = adapter.toModel(adapter.fromModel(value));\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    const formControl = new FormControl(value, {\n      asyncValidators: prop.asyncValidators(data),\n      validators: prop.validators(data)\n    });\n    (isExtraProperty ? extraForm : form).addControl(name, formControl);\n  });\n  return form;\n}\n\nfunction createExtraPropertyValueResolver(name) {\n  return data => of(data.record[EXTRA_PROPERTIES_KEY][name]);\n}\n\nfunction mergeWithDefaultProps(extension, defaultProps, ...contributors) {\n  Object.keys(defaultProps).forEach(name => {\n    const props = extension.get(name);\n    props.clearContributors();\n    props.addContributor(propList => propList.addManyTail(defaultProps[name]));\n    contributors.forEach(contributor => (contributor[name] || []).forEach(callback => props.addContributor(callback)));\n  });\n}\n\nfunction createEnum(members) {\n  const enumObject = {};\n  members.forEach(({\n    name = '',\n    value\n  }) => {\n    enumObject[enumObject[name] = value] = name;\n  });\n  return enumObject;\n}\n\nfunction createEnumValueResolver(enumType, lookupEnum, propName) {\n  return data => {\n    const value = data.record[EXTRA_PROPERTIES_KEY][propName];\n    const key = lookupEnum.transformed[value];\n    const l10n = data.getInjected(LocalizationService);\n    const localizeEnum = createEnumLocalizer(l10n, enumType, lookupEnum);\n    return createLocalizationStream(l10n, localizeEnum(key));\n  };\n}\n\nfunction createEnumOptions(enumType, lookupEnum) {\n  return data => {\n    const l10n = data.getInjected(LocalizationService);\n    const localizeEnum = createEnumLocalizer(l10n, enumType, lookupEnum);\n    return createLocalizationStream(l10n, lookupEnum.fields.map(({\n      name = '',\n      value\n    }) => ({\n      key: localizeEnum(name),\n      value\n    })));\n  };\n}\n\nfunction createLocalizationStream(l10n, mapTarget) {\n  return merge(of(null), l10n.languageChange$).pipe(map(() => mapTarget));\n}\n\nfunction createEnumLocalizer(l10n, enumType, lookupEnum) {\n  const resource = lookupEnum.localizationResource;\n  const shortType = getShortEnumType(enumType);\n  return key => l10n.localizeWithFallbackSync([resource || ''], ['Enum:' + shortType + '.' + key, shortType + '.' + key, key], key);\n}\n\nfunction getShortEnumType(enumType) {\n  return enumType.split('.').pop();\n}\n\nfunction createDisplayNameLocalizationPipeKeyGenerator(localization) {\n  const generateLocalizationPipeKey = createLocalizationPipeKeyGenerator(localization);\n  return (displayName, fallback) => {\n    if (displayName && displayName.name) return generateLocalizationPipeKey([displayName.resource || ''], [displayName.name], displayName.name);\n    const key = generateLocalizationPipeKey([fallback.resource || ''], ['DisplayName:' + fallback.name], undefined);\n    if (key) return key;\n    return generateLocalizationPipeKey([fallback.resource || ''], [fallback.name || ''], fallback.name);\n  };\n}\n\nfunction getValidatorsFromProperty(property) {\n  const validators = [];\n  property.attributes.forEach(attr => {\n    if (attr.typeSimple && attr.typeSimple in AbpValidators) {\n      validators.push(AbpValidators[attr.typeSimple](attr.config));\n    }\n  });\n  return validators;\n}\n\nfunction selectObjectExtensions(configState) {\n  return configState.getOne$('objectExtensions');\n}\n\nfunction selectLocalization(configState) {\n  return configState.getOne$('localization');\n}\n\nfunction selectEnums(configState) {\n  return selectObjectExtensions(configState).pipe(map(extensions => Object.keys(extensions.enums).reduce((acc, key) => {\n    const {\n      fields,\n      localizationResource\n    } = extensions.enums[key];\n    acc[key] = {\n      fields,\n      localizationResource,\n      transformed: createEnum(fields)\n    };\n    return acc;\n  }, {})));\n}\n\nfunction getObjectExtensionEntitiesFromStore(configState, moduleKey) {\n  return selectObjectExtensions(configState).pipe(map(extensions => {\n    if (!extensions) return null;\n    return (extensions.modules[moduleKey] || {}).entities;\n  }), map(entities => isUndefined(entities) ? {} : entities), filter(Boolean), take(1));\n}\n\nfunction mapEntitiesToContributors(configState, resource) {\n  return pipe(switchMap(entities => zip(selectLocalization(configState), selectEnums(configState)).pipe(map(([localization, enums]) => {\n    const generateDisplayName = createDisplayNameLocalizationPipeKeyGenerator(localization);\n    return Object.keys(entities).reduce((acc, key) => {\n      acc.prop[key] = [];\n      acc.createForm[key] = [];\n      acc.editForm[key] = [];\n      const entity = entities[key];\n      if (!entity) return acc;\n      const properties = entity.properties;\n      if (!properties) return acc;\n      const mapPropertiesToContributors = createPropertiesToContributorsMapper(generateDisplayName, resource, enums);\n      return mapPropertiesToContributors(properties, acc, key);\n    }, {\n      prop: {},\n      createForm: {},\n      editForm: {}\n    });\n  }))), take(1));\n}\n\nfunction createPropertiesToContributorsMapper(generateDisplayName, resource, enums) {\n  return (properties, contributors, key) => {\n    const isExtra = true;\n    const generateTypeaheadDisplayName = createTypeaheadDisplayNameGenerator(generateDisplayName, properties);\n    Object.keys(properties).forEach(name => {\n      const property = properties[name];\n      const propName = name;\n      const lookup = property.ui.lookup || {};\n      const type = getTypeaheadType(lookup, name) || getTypeFromProperty(property);\n      const generateDN = hasTypeaheadTextSuffix(name) ? generateTypeaheadDisplayName : generateDisplayName;\n      const displayName = generateDN(property.displayName, {\n        name,\n        resource\n      });\n\n      if (property.ui.onTable.isVisible) {\n        const sortable = Boolean(property.ui.onTable.isSortable);\n        const columnWidth = type === \"boolean\"\n        /* Boolean */\n        ? 150 : 250;\n        const valueResolver = type === \"enum\"\n        /* Enum */\n        ? createEnumValueResolver(property.type, enums[property.type], propName) : createExtraPropertyValueResolver(propName);\n        const entityProp = new EntityProp({\n          type,\n          name: propName,\n          displayName,\n          sortable,\n          columnWidth,\n          valueResolver,\n          isExtra\n        });\n\n        const contributor = propList => propList.addTail(entityProp);\n\n        contributors.prop[key].push(contributor);\n      }\n\n      const isOnCreateForm = property.ui.onCreateForm.isVisible;\n      const isOnEditForm = property.ui.onEditForm.isVisible;\n\n      if (isOnCreateForm || isOnEditForm) {\n        const defaultValue = property.defaultValue;\n\n        const validators = () => getValidatorsFromProperty(property);\n\n        let options;\n        if (type === \"enum\"\n        /* Enum */\n        ) options = createEnumOptions(propName, enums[property.type || '']);else if (type === \"typeahead\"\n        /* Typeahead */\n        ) options = createTypeaheadOptions(lookup);\n        const formProp = new FormProp({\n          type,\n          name: propName,\n          displayName,\n          options,\n          defaultValue,\n          validators,\n          isExtra\n        });\n\n        const formContributor = propList => propList.addTail(formProp);\n\n        if (isOnCreateForm) contributors.createForm[key].push(formContributor);\n        if (isOnEditForm) contributors.editForm[key].push(formContributor);\n      }\n    });\n    return contributors;\n  };\n}\n\nfunction getTypeFromProperty(property) {\n  var _a;\n\n  return (_a = property === null || property === void 0 ? void 0 : property.typeSimple) === null || _a === void 0 ? void 0 : _a.replace(/\\?$/, '');\n}\n\nfunction isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { ActionList, BaseUiExtensionsModule, CreateFormPropsFactory, CreateInjectorPipe, DateAdapter, DateTimeAdapter, DateTimePickerComponent, DisabledDirective, ENTITY_PROP_TYPE_CLASSES, EXTENSIONS_ACTION_CALLBACK, EXTENSIONS_ACTION_DATA, EXTENSIONS_ACTION_TYPE, EXTENSIONS_IDENTIFIER, EXTRA_PROPERTIES_KEY, EditFormPropsFactory, EntityAction, EntityActionList, EntityActions, EntityActionsFactory, EntityProp, EntityPropList, EntityProps, EntityPropsFactory, ExtensibleFormComponent, ExtensibleFormPropComponent, ExtensibleTableComponent, ExtensionsService, FormProp, FormPropData, FormPropList, FormProps, GridActionsComponent, objectExtensions as ObjectExtensions, PROP_DATA_STREAM, PageToolbarComponent, PropDataDirective, PropList, TimeAdapter, ToolbarAction, ToolbarActionList, ToolbarActions, ToolbarActionsFactory, ToolbarComponent, UiExtensionsModule, createExtraPropertyValueResolver, generateFormFromProps, getObjectExtensionEntitiesFromStore, mapEntitiesToContributors, mergeWithDefaultActions, mergeWithDefaultProps }; //# sourceMappingURL=abp-ng.theme.shared-extensions.mjs.map","map":null,"metadata":{},"sourceType":"module"}