{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChildren, NgModule } from '@angular/core';\nimport { concat, of } from 'rxjs';\nimport { take, switchMap, finalize, tap } from 'rxjs/operators';\nimport * as i1 from '@abp/ng.permission-management/proxy';\nimport * as i2 from '@abp/ng.core';\nimport { CoreModule } from '@abp/ng.core';\nimport * as i3 from '@abp/ng.theme.shared';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport * as i4 from '@angular/common';\nimport * as i5 from '@angular/forms';\nconst _c0 = [\"selectAllInThisTabsRef\"];\nconst _c1 = [\"selectAllInAllTabsRef\"];\n\nfunction PermissionManagementComponent_ng_container_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(2, 2, \"AbpPermissionManagement::Permissions\"), \" - \", ctx_r2.entityDisplayName || ctx_r2.data.entityDisplayName, \" \");\n  }\n}\n\nfunction PermissionManagementComponent_ng_container_1_ng_template_3_li_10_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 24);\n    i0.ɵɵlistener(\"click\", function PermissionManagementComponent_ng_container_1_ng_template_3_li_10_a_1_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const group_r11 = i0.ɵɵnextContext().$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      return ctx_r14.onChangeGroup(group_r11);\n    });\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const count_r13 = ctx.ngIf;\n    const group_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassProp(\"active\", (ctx_r12.selectedGroup == null ? null : ctx_r12.selectedGroup.name) === (group_r11 == null ? null : group_r11.name));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"font-weight-bold\", count_r13.assignedCount);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", group_r11 == null ? null : group_r11.displayName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", count_r13.assignedCount, \")\");\n  }\n}\n\nconst _c2 = function (a0) {\n  return {\n    assignedCount: a0\n  };\n};\n\nfunction PermissionManagementComponent_ng_container_1_ng_template_3_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 22);\n    i0.ɵɵtemplate(1, PermissionManagementComponent_ng_container_1_ng_template_3_li_10_a_1_Template, 5, 6, \"a\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r11 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpureFunction1(1, _c2, ctx_r8.getAssignedCount(group_r11.name)));\n  }\n}\n\nfunction PermissionManagementComponent_ng_container_1_ng_template_3_div_23_ng_container_5_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const provider_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", provider_r23.providerName, \": \", provider_r23.providerKey, \"\");\n  }\n}\n\nfunction PermissionManagementComponent_ng_container_1_ng_template_3_div_23_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, PermissionManagementComponent_ng_container_1_ng_template_3_div_23_ng_container_5_span_1_Template, 2, 2, \"span\", 29);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const permission_r18 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", permission_r18.grantedProviders);\n  }\n}\n\nfunction PermissionManagementComponent_ng_container_1_ng_template_3_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelementStart(1, \"input\", 26, 27);\n    i0.ɵɵlistener(\"click\", function PermissionManagementComponent_ng_container_1_ng_template_3_div_23_Template_input_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const permission_r18 = restoredCtx.$implicit;\n\n      const _r20 = i0.ɵɵreference(2);\n\n      const ctx_r25 = i0.ɵɵnextContext(3);\n      return ctx_r25.onClickCheckbox(permission_r18, _r20.value);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 28);\n    i0.ɵɵtext(4);\n    i0.ɵɵtemplate(5, PermissionManagementComponent_ng_container_1_ng_template_3_div_23_ng_container_5_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const permission_r18 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngStyle\", permission_r18.style);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r10.getChecked(permission_r18.name))(\"value\", ctx_r10.getChecked(permission_r18.name))(\"disabled\", ctx_r10.isGrantedByOtherProviderName(permission_r18.grantedProviders));\n    i0.ɵɵattribute(\"id\", permission_r18.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"for\", permission_r18.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", permission_r18.displayName, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r10.hideBadges);\n  }\n}\n\nfunction PermissionManagementComponent_ng_container_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"input\", 6, 7);\n    i0.ɵɵlistener(\"ngModelChange\", function PermissionManagementComponent_ng_container_1_ng_template_3_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return ctx_r27.selectAllTab = $event;\n    })(\"click\", function PermissionManagementComponent_ng_container_1_ng_template_3_Template_input_click_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return ctx_r29.onClickSelectAll();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"hr\", 9);\n    i0.ɵɵelementStart(7, \"div\", 10);\n    i0.ɵɵelementStart(8, \"div\", 11);\n    i0.ɵɵelementStart(9, \"ul\", 12);\n    i0.ɵɵtemplate(10, PermissionManagementComponent_ng_container_1_ng_template_3_li_10_Template, 2, 3, \"li\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 14);\n    i0.ɵɵelementStart(12, \"h4\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"hr\", 15);\n    i0.ɵɵelementStart(15, \"div\", 16);\n    i0.ɵɵelementStart(16, \"div\", 5);\n    i0.ɵɵelementStart(17, \"input\", 17, 18);\n    i0.ɵɵlistener(\"ngModelChange\", function PermissionManagementComponent_ng_container_1_ng_template_3_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return ctx_r30.selectThisTab = $event;\n    })(\"click\", function PermissionManagementComponent_ng_container_1_ng_template_3_Template_input_click_17_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return ctx_r31.onClickSelectThisTab();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"label\", 19);\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"hr\", 20);\n    i0.ɵɵtemplate(23, PermissionManagementComponent_ng_container_1_ng_template_3_div_23_Template, 6, 8, \"div\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.selectAllTab);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 9, \"AbpPermissionManagement::SelectAllInAllTabs\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.data.groups)(\"ngForTrackBy\", ctx_r4.trackByFn);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.selectedGroup == null ? null : ctx_r4.selectedGroup.displayName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.selectThisTab);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 11, \"AbpPermissionManagement::SelectAllInThisTab\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.selectedGroupPermissions)(\"ngForTrackBy\", ctx_r4.trackByFn);\n  }\n}\n\nfunction PermissionManagementComponent_ng_container_1_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"abp-button\", 32);\n    i0.ɵɵlistener(\"click\", function PermissionManagementComponent_ng_container_1_ng_template_5_Template_abp_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return ctx_r32.submit();\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"AbpIdentity::Cancel\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 4, \"AbpIdentity::Save\"));\n  }\n}\n\nfunction PermissionManagementComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, PermissionManagementComponent_ng_container_1_ng_template_1_Template, 3, 4, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(3, PermissionManagementComponent_ng_container_1_ng_template_3_Template, 24, 13, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, PermissionManagementComponent_ng_container_1_ng_template_5_Template, 6, 6, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nconst _c3 = function () {\n  return {\n    size: \"lg\"\n  };\n};\n\nlet PermissionManagementComponent = /*#__PURE__*/(() => {\n  class PermissionManagementComponent {\n    constructor(service, configState) {\n      this.service = service;\n      this.configState = configState;\n      this.hideBadges = false;\n      this._visible = false;\n      this.visibleChange = new EventEmitter();\n      this.data = {\n        groups: [],\n        entityDisplayName: null\n      };\n      this.permissions = [];\n      this.selectThisTab = false;\n      this.selectAllTab = false;\n      this.modalBusy = false;\n\n      this.trackByFn = (_, item) => item.name;\n    }\n\n    get visible() {\n      return this._visible;\n    }\n\n    set visible(value) {\n      if (value === this._visible) return;\n\n      if (value) {\n        this.openModal().subscribe(() => {\n          this._visible = true;\n          this.visibleChange.emit(true);\n          concat(this.selectAllInAllTabsRef.changes, this.selectAllInThisTabsRef.changes).pipe(take(1)).subscribe(() => {\n            this.initModal();\n          });\n        });\n      } else {\n        this.selectedGroup = null;\n        this._visible = false;\n        this.visibleChange.emit(false);\n      }\n    }\n\n    get selectedGroupPermissions() {\n      if (!this.selectedGroup) return [];\n      const margin = `margin-${document.body.dir === 'rtl' ? 'right' : 'left'}.px`;\n      const permissions = this.data.groups.find(group => group.name === this.selectedGroup.name).permissions;\n      return permissions.map(permission => Object.assign(Object.assign({}, permission), {\n        style: {\n          [margin]: findMargin(permissions, permission)\n        },\n        isGranted: this.permissions.find(per => per.name === permission.name).isGranted\n      }));\n    }\n\n    getChecked(name) {\n      return (this.permissions.find(per => per.name === name) || {\n        isGranted: false\n      }).isGranted;\n    }\n\n    isGrantedByOtherProviderName(grantedProviders) {\n      if (grantedProviders.length) {\n        return grantedProviders.findIndex(p => p.providerName !== this.providerName) > -1;\n      }\n\n      return false;\n    }\n\n    onClickCheckbox(clickedPermission, value) {\n      if (clickedPermission.isGranted && this.isGrantedByOtherProviderName(clickedPermission.grantedProviders)) return;\n      setTimeout(() => {\n        this.permissions = this.permissions.map(per => {\n          if (clickedPermission.name === per.name) {\n            return Object.assign(Object.assign({}, per), {\n              isGranted: !per.isGranted\n            });\n          } else if (clickedPermission.name === per.parentName && clickedPermission.isGranted) {\n            return Object.assign(Object.assign({}, per), {\n              isGranted: false\n            });\n          } else if (clickedPermission.parentName === per.name && !clickedPermission.isGranted) {\n            return Object.assign(Object.assign({}, per), {\n              isGranted: true\n            });\n          }\n\n          return per;\n        });\n        this.setTabCheckboxState();\n        this.setGrantCheckboxState();\n      }, 0);\n    }\n\n    setTabCheckboxState() {\n      const selectedPermissions = this.selectedGroupPermissions.filter(per => per.isGranted);\n      const element = document.querySelector('#select-all-in-this-tabs');\n\n      if (selectedPermissions.length === this.selectedGroupPermissions.length) {\n        element.indeterminate = false;\n        this.selectThisTab = true;\n      } else if (selectedPermissions.length === 0) {\n        element.indeterminate = false;\n        this.selectThisTab = false;\n      } else {\n        element.indeterminate = true;\n      }\n    }\n\n    setGrantCheckboxState() {\n      const selectedAllPermissions = this.permissions.filter(per => per.isGranted);\n      const checkboxElement = document.querySelector('#select-all-in-all-tabs');\n\n      if (selectedAllPermissions.length === this.permissions.length) {\n        checkboxElement.indeterminate = false;\n        this.selectAllTab = true;\n      } else if (selectedAllPermissions.length === 0) {\n        checkboxElement.indeterminate = false;\n        this.selectAllTab = false;\n      } else {\n        checkboxElement.indeterminate = true;\n      }\n    }\n\n    onClickSelectThisTab() {\n      this.selectedGroupPermissions.forEach(permission => {\n        if (permission.isGranted && this.isGrantedByOtherProviderName(permission.grantedProviders)) return;\n        const index = this.permissions.findIndex(per => per.name === permission.name);\n        this.permissions = [...this.permissions.slice(0, index), Object.assign(Object.assign({}, this.permissions[index]), {\n          isGranted: !this.selectThisTab\n        }), ...this.permissions.slice(index + 1)];\n      });\n      this.setGrantCheckboxState();\n    }\n\n    onClickSelectAll() {\n      this.permissions = this.permissions.map(permission => Object.assign(Object.assign({}, permission), {\n        isGranted: this.isGrantedByOtherProviderName(permission.grantedProviders) || !this.selectAllTab\n      }));\n      this.selectThisTab = !this.selectAllTab;\n    }\n\n    onChangeGroup(group) {\n      this.selectedGroup = group;\n      this.setTabCheckboxState();\n    }\n\n    submit() {\n      const unchangedPermissions = getPermissions(this.data.groups);\n      const changedPermissions = this.permissions.filter(per => unchangedPermissions.find(unchanged => unchanged.name === per.name).isGranted === per.isGranted ? false : true).map(({\n        name,\n        isGranted\n      }) => ({\n        name,\n        isGranted\n      }));\n\n      if (!changedPermissions.length) {\n        this.visible = false;\n        return;\n      }\n\n      this.modalBusy = true;\n      this.service.update(this.providerName, this.providerKey, {\n        permissions: changedPermissions\n      }).pipe(switchMap(() => this.shouldFetchAppConfig() ? this.configState.refreshAppState() : of(null)), finalize(() => this.modalBusy = false)).subscribe(() => {\n        this.visible = false;\n      });\n    }\n\n    openModal() {\n      if (!this.providerKey || !this.providerName) {\n        throw new Error('Provider Key and Provider Name are required.');\n      }\n\n      return this.service.get(this.providerName, this.providerKey).pipe(tap(permissionRes => {\n        this.data = permissionRes;\n        this.selectedGroup = permissionRes.groups[0];\n        this.permissions = getPermissions(permissionRes.groups);\n      }));\n    }\n\n    initModal() {\n      // TODO: Refactor\n      setTimeout(() => {\n        this.setTabCheckboxState();\n        this.setGrantCheckboxState();\n      });\n    }\n\n    getAssignedCount(groupName) {\n      return this.permissions.reduce((acc, val) => val.groupName === groupName && val.isGranted ? acc + 1 : acc, 0);\n    }\n\n    shouldFetchAppConfig() {\n      const currentUser = this.configState.getOne('currentUser');\n      if (this.providerName === 'R') return currentUser.roles.some(role => role === this.providerKey);\n      if (this.providerName === 'U') return currentUser.id === this.providerKey;\n      return false;\n    }\n\n  }\n\n  PermissionManagementComponent.ɵfac = function PermissionManagementComponent_Factory(t) {\n    return new (t || PermissionManagementComponent)(i0.ɵɵdirectiveInject(i1.PermissionsService), i0.ɵɵdirectiveInject(i2.ConfigStateService));\n  };\n\n  PermissionManagementComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PermissionManagementComponent,\n    selectors: [[\"abp-permission-management\"]],\n    viewQuery: function PermissionManagementComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectAllInThisTabsRef = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectAllInAllTabsRef = _t);\n      }\n    },\n    inputs: {\n      providerName: \"providerName\",\n      providerKey: \"providerKey\",\n      hideBadges: \"hideBadges\",\n      entityDisplayName: \"entityDisplayName\",\n      visible: \"visible\"\n    },\n    outputs: {\n      visibleChange: \"visibleChange\"\n    },\n    exportAs: [\"abpPermissionManagement\"],\n    decls: 2,\n    vars: 5,\n    consts: [[3, \"visible\", \"busy\", \"options\", \"visibleChange\"], [4, \"ngIf\"], [\"abpHeader\", \"\"], [\"abpBody\", \"\"], [\"abpFooter\", \"\"], [1, \"form-check\", \"mb-2\"], [\"type\", \"checkbox\", \"id\", \"select-all-in-all-tabs\", \"name\", \"select-all-in-all-tabs\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\", \"click\"], [\"selectAllInAllTabsRef\", \"\"], [\"for\", \"select-all-in-all-tabs\", 1, \"form-check-label\"], [1, \"mt-2\", \"mb-2\"], [1, \"row\"], [1, \"overflow-scroll\", \"col-md-4\"], [1, \"nav\", \"nav-pills\", \"flex-column\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"col-md-8\", \"overflow-scroll\"], [1, \"mt-2\", \"mb-3\"], [1, \"ps-1\", \"pt-1\"], [\"type\", \"checkbox\", \"id\", \"select-all-in-this-tabs\", \"name\", \"select-all-in-this-tabs\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\", \"click\"], [\"selectAllInThisTabsRef\", \"\"], [\"for\", \"select-all-in-this-tabs\", 1, \"form-check-label\"], [1, \"mb-3\"], [\"class\", \"form-check mb-2\", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"nav-item\"], [\"class\", \"nav-link pointer\", 3, \"active\", \"click\", 4, \"ngIf\"], [1, \"nav-link\", \"pointer\", 3, \"click\"], [1, \"form-check\", \"mb-2\", 3, \"ngStyle\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"checked\", \"value\", \"disabled\", \"click\"], [\"permissionCheckbox\", \"\"], [1, \"form-check-label\"], [\"class\", \"badge bg-light text-dark\", 4, \"ngFor\", \"ngForOf\"], [1, \"badge\", \"bg-light\", \"text-dark\"], [\"type\", \"button\", \"abpClose\", \"\", 1, \"btn\", \"btn-secondary\"], [\"iconClass\", \"fa fa-check\", 3, \"click\"]],\n    template: function PermissionManagementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"abp-modal\", 0);\n        i0.ɵɵlistener(\"visibleChange\", function PermissionManagementComponent_Template_abp_modal_visibleChange_0_listener($event) {\n          return ctx.visible = $event;\n        });\n        i0.ɵɵtemplate(1, PermissionManagementComponent_ng_container_1_Template, 7, 0, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"visible\", ctx.visible)(\"busy\", ctx.modalBusy)(\"options\", i0.ɵɵpureFunction0(4, _c3));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.data.entityDisplayName || ctx.entityDisplayName);\n      }\n    },\n    directives: [i3.ModalComponent, i3.ButtonComponent, i4.NgIf, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgModel, i4.NgForOf, i4.NgStyle, i3.ModalCloseDirective],\n    pipes: [i2.LocalizationPipe],\n    styles: [\".overflow-scroll[_ngcontent-%COMP%]{max-height:70vh;overflow-y:scroll}\"]\n  });\n  return PermissionManagementComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction findMargin(permissions, permission) {\n  const parentPermission = permissions.find(per => per.name === permission.parentName);\n\n  if (parentPermission && parentPermission.parentName) {\n    let margin = 20;\n    return margin += findMargin(permissions, parentPermission);\n  }\n\n  return parentPermission ? 20 : 0;\n}\n\nfunction getPermissions(groups) {\n  return groups.reduce((acc, val) => [...acc, ...val.permissions.map(p => Object.assign(Object.assign({}, p), {\n    groupName: val.name\n  }))], []);\n}\n\nlet PermissionManagementModule = /*#__PURE__*/(() => {\n  class PermissionManagementModule {}\n\n  PermissionManagementModule.ɵfac = function PermissionManagementModule_Factory(t) {\n    return new (t || PermissionManagementModule)();\n  };\n\n  PermissionManagementModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: PermissionManagementModule\n  });\n  PermissionManagementModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CoreModule, ThemeSharedModule]]\n  });\n  return PermissionManagementModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { PermissionManagementComponent, PermissionManagementModule }; //# sourceMappingURL=abp-ng.permission-management.mjs.map","map":null,"metadata":{},"sourceType":"module"}