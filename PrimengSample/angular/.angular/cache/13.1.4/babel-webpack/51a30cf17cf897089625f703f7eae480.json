{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { mockMembers } from './mock-members';\nlet OrganizationUnitsComponent = class OrganizationUnitsComponent {\n  constructor(confirmationService) {\n    this.confirmationService = confirmationService;\n    this.organizationUnits = [{\n      label: 'Management',\n      expanded: true,\n      children: [{\n        label: 'Selling',\n        expanded: true,\n        children: [{\n          label: 'Customer Relations'\n        }, {\n          label: 'Marketing'\n        }]\n      }, {\n        label: 'Supporting',\n        expanded: true,\n        children: [{\n          label: 'Buying'\n        }, {\n          label: 'Human Resources'\n        }]\n      }]\n    }];\n    this.members = mockMembers;\n    this.breadcrumbItems = [{\n      icon: 'fas fa-home',\n      url: '/'\n    }, {\n      icon: 'fas fa-wrench mr-1',\n      label: 'Administration'\n    }, {\n      icon: 'fas fa-sitemap mr-1',\n      label: 'Organization Units'\n    }];\n    this.memberAutocompleteData = [];\n    this.filteredMembers = [];\n  }\n\n  get tableData() {\n    return this.members.filter(user => user.parents.indexOf(this.selectedUnit.label) > -1);\n  }\n\n  newMember() {\n    this.memberAutocompleteData = [];\n    this.isDialogVisible = true;\n  }\n\n  filterMember(event) {\n    let filtered = [];\n    let query = event.query;\n    const arr = this.members.filter(m => {\n      const memberFromAnotherOrg = m.parents.indexOf(this.selectedUnit.label) < 0;\n      const isMemberSelected = this.memberAutocompleteData.findIndex(memb => memb.fullName === m.fullName) > -1;\n      return memberFromAnotherOrg && !isMemberSelected;\n    });\n\n    for (let i = 0; i < arr.length; i++) {\n      let member = arr[i];\n\n      if (member.fullName.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n        filtered.push(member);\n      }\n    }\n\n    this.filteredMembers = filtered;\n  }\n\n  addMember() {\n    this.memberAutocompleteData.forEach(newMember => {\n      const index = this.members.findIndex(member => member.fullName === newMember.fullName);\n      this.members[index].parents.push(this.selectedUnit.label);\n    });\n    this.isDialogVisible = false;\n  }\n\n  removeMember(member, event) {\n    this.confirmationService.confirm({\n      target: event.target,\n      message: `Are you sure you want to remove the member ${member.fullName}?`,\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        const index = this.members.findIndex(m => m.fullName === member.fullName);\n        const parentIndex = this.members[index].parents.findIndex(parent => parent === this.selectedUnit.label);\n        this.members[index].parents.splice(parentIndex, 1);\n      },\n      reject: () => {}\n    });\n  }\n\n};\nOrganizationUnitsComponent = __decorate([Component({\n  selector: 'app-organization-units',\n  templateUrl: './organization-units.component.html',\n  styleUrls: ['./organization-units.component.scss']\n})], OrganizationUnitsComponent);\nexport { OrganizationUnitsComponent };","map":null,"metadata":{},"sourceType":"module"}