{"ast":null,"code":"import { animation, style, animate, keyframes, trigger, state, transition, useAnimation, query } from '@angular/animations';\nimport * as i0 from '@angular/core';\nimport { Component, Input, ChangeDetectionStrategy, EventEmitter, Output, ViewChild, InjectionToken, Inject, ViewEncapsulation, Injectable, Optional, ContentChild, Directive, HostListener, HostBinding, NgModule, ComponentFactoryResolver, RendererFactory2, ApplicationRef, APP_INITIALIZER, inject, LOCALE_ID } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, formatDate, DatePipe } from '@angular/common';\nimport * as i1$1 from '@angular/router';\nimport { ResolveEnd } from '@angular/router';\nimport * as i2 from '@abp/ng.core';\nimport { getRoutePath, SubscriptionService, PROJECTION_STRATEGY, uuid, LocalizationService, getLocaleDirection, HttpErrorReporterService, RouterEvents, AuthService, RoutesService, InternalStore, DomInsertionService, CONTENT_STRATEGY, CoreModule, noop, ConfigStateService } from '@abp/ng.core';\nimport { __rest } from 'tslib';\nimport { startWith, map, debounceTime, filter, takeUntil, distinctUntilChanged, take, catchError, switchMap } from 'rxjs/operators';\nimport { fromEvent, Subscription, combineLatest, timer, ReplaySubject, Subject, BehaviorSubject, throwError, Observable, of } from 'rxjs';\nimport * as i3 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbInputDatepickerConfig, NgbTypeaheadConfig, NgbDateParserFormatter, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport * as i1$2 from '@swimlane/ngx-datatable';\nimport { ColumnMode, NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgxValidateCoreModule, VALIDATION_BLUEPRINTS, VALIDATION_MAP_ERRORS_FN, defaultMapErrorsFn, VALIDATION_VALIDATE_ON_SUBMIT, normalizeDiacritics } from '@ngx-validate/core';\nimport { Validators } from '@angular/forms';\n\nfunction BreadcrumbItemsComponent_ol_0_li_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction BreadcrumbItemsComponent_ol_0_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 8);\n    i0.ɵɵtemplate(1, BreadcrumbItemsComponent_ol_0_li_4_ng_container_1_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const last_r7 = ctx.last;\n    i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(2);\n\n    const _r3 = i0.ɵɵreference(4);\n\n    i0.ɵɵclassProp(\"active\", last_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", item_r6.path ? _r1 : _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c0, item_r6));\n  }\n}\n\nfunction BreadcrumbItemsComponent_ol_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ol\", 3);\n    i0.ɵɵelementStart(1, \"li\", 4);\n    i0.ɵɵelementStart(2, \"a\", 5);\n    i0.ɵɵelement(3, \"i\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, BreadcrumbItemsComponent_ol_0_li_4_Template, 2, 6, \"li\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.items);\n  }\n}\n\nfunction BreadcrumbItemsComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", item_r9.path);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, item_r9.name), \"\");\n  }\n}\n\nfunction BreadcrumbItemsComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"abpLocalization\");\n  }\n\n  if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(1, 1, item_r10.name), \"\\n\");\n  }\n}\n\nconst _c1 = [\"button\"];\nconst _c2 = [\"*\"];\n\nfunction ConfirmationComponent_div_0_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 14);\n  }\n\n  if (rf & 2) {\n    const data_r1 = i0.ɵɵnextContext(2).ngIf;\n    i0.ɵɵproperty(\"outerHTML\", data_r1.options.iconTemplate, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ConfirmationComponent_div_0_div_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 15);\n  }\n\n  if (rf & 2) {\n    const data_r1 = i0.ɵɵnextContext(2).ngIf;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r9.getIconClass(data_r1));\n  }\n}\n\nfunction ConfirmationComponent_div_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, ConfirmationComponent_div_0_div_3_div_1_Template, 1, 1, \"div\", 12);\n    i0.ɵɵtemplate(2, ConfirmationComponent_div_0_div_3_ng_template_2_Template, 1, 1, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r8 = i0.ɵɵreference(3);\n\n    const data_r1 = i0.ɵɵnextContext().ngIf;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", data_r1.severity);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isIconTemplateExits(data_r1))(\"ngIfElse\", _r8);\n  }\n}\n\nfunction ConfirmationComponent_div_0_h1_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"h1\", 16);\n    i0.ɵɵpipe(1, \"abpLocalization\");\n  }\n\n  if (rf & 2) {\n    const data_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(1, 1, data_r1.title, data_r1.options == null ? null : data_r1.options.titleLocalizationParams), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ConfirmationComponent_div_0_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\", 17);\n    i0.ɵɵpipe(1, \"abpLocalization\");\n  }\n\n  if (rf & 2) {\n    const data_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(1, 1, data_r1.message, data_r1.options == null ? null : data_r1.options.messageLocalizationParams), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ConfirmationComponent_div_0_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ConfirmationComponent_div_0_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.close(ctx_r15.reject);\n    });\n    i0.ɵɵpipe(1, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 1, (data_r1.options == null ? null : data_r1.options.cancelText) || \"AbpUi::Cancel\"), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ConfirmationComponent_div_0_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ConfirmationComponent_div_0_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.close(ctx_r18.confirm);\n    });\n    i0.ɵɵpipe(1, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 1, (data_r1.options == null ? null : data_r1.options.yesText) || \"AbpUi::Yes\"), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ConfirmationComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵlistener(\"click\", function ConfirmationComponent_div_0_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const data_r1 = restoredCtx.ngIf;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return (data_r1.options == null ? null : data_r1.options.dismissible) ? ctx_r21.close(ctx_r21.dismiss) : null;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵtemplate(3, ConfirmationComponent_div_0_div_3_Template, 4, 3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"div\", 5);\n    i0.ɵɵtemplate(5, ConfirmationComponent_div_0_h1_5_Template, 2, 4, \"h1\", 6);\n    i0.ɵɵtemplate(6, ConfirmationComponent_div_0_p_6_Template, 2, 4, \"p\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵtemplate(8, ConfirmationComponent_div_0_button_8_Template, 2, 3, \"button\", 9);\n    i0.ɵɵtemplate(9, ConfirmationComponent_div_0_button_9_Template, 2, 3, \"button\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", data_r1.severity || ctx_r0.isCustomIconExists(data_r1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", data_r1.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", data_r1.message);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !(data_r1 == null ? null : data_r1.options == null ? null : data_r1.options.hideCancelBtn));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(data_r1 == null ? null : data_r1.options == null ? null : data_r1.options.hideYesBtn));\n  }\n}\n\nconst _c3 = [\"container\"];\n\nfunction HttpErrorWrapperComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function HttpErrorWrapperComponent_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.destroy();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c4 = function () {\n  return {\n    key: \"::Menu:Home\",\n    defaultValue: \"Home\"\n  };\n};\n\nfunction HttpErrorWrapperComponent_div_3_a_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 11);\n    i0.ɵɵlistener(\"click\", function HttpErrorWrapperComponent_div_3_a_10_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.destroy();\n    });\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, i0.ɵɵpureFunction0(3, _c4)), \" \");\n  }\n}\n\nfunction HttpErrorWrapperComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"div\", 7);\n    i0.ɵɵelementStart(3, \"h1\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 8);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 9);\n    i0.ɵɵtemplate(10, HttpErrorWrapperComponent_div_3_a_10_Template, 4, 4, \"a\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r2.statusText, \" \", i0.ɵɵpipeBind1(5, 4, ctx_r2.title), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(8, 6, ctx_r2.details), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isHomeShow);\n  }\n}\n\nconst _c5 = function (a0, a1) {\n  return {\n    \"background-color\": a0,\n    \"box-shadow\": a1\n  };\n};\n\nconst _c6 = [\"abpHeader\"];\nconst _c7 = [\"abpBody\"];\nconst _c8 = [\"abpFooter\"];\nconst _c9 = [\"modalContent\"];\n\nfunction ModalComponent_ng_template_1_div_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ModalComponent_ng_template_1_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, ModalComponent_ng_template_1_div_0_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵtext(2, \" \\u200B \");\n    i0.ɵɵelementStart(3, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ModalComponent_ng_template_1_div_0_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const modal_r2 = i0.ɵɵnextContext().$implicit;\n      return modal_r2.dismiss();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.abpHeader);\n  }\n}\n\nfunction ModalComponent_ng_template_1_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ModalComponent_ng_template_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, ModalComponent_ng_template_1_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.abpBody);\n  }\n}\n\nfunction ModalComponent_ng_template_1_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ModalComponent_ng_template_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, ModalComponent_ng_template_1_div_2_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.abpFooter);\n  }\n}\n\nfunction ModalComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ModalComponent_ng_template_1_div_0_Template, 4, 1, \"div\", 1);\n    i0.ɵɵtemplate(1, ModalComponent_ng_template_1_div_1_Template, 2, 1, \"div\", 2);\n    i0.ɵɵtemplate(2, ModalComponent_ng_template_1_div_2_Template, 2, 1, \"div\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.abpHeader);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.abpBody);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.abpFooter);\n  }\n}\n\nfunction ToastComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ToastComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.close();\n    });\n    i0.ɵɵelement(1, \"i\", 8);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ToastContainerComponent_abp_toast_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"abp-toast\", 2);\n    i0.ɵɵlistener(\"remove\", function ToastContainerComponent_abp_toast_1_Template_abp_toast_remove_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.remove($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const toast_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"toast\", toast_r1);\n  }\n}\n\nconst bounceIn = animation([style({\n  opacity: '0',\n  display: '{{ display }}'\n}), animate('{{ time}} {{ easing }}', keyframes([style({\n  opacity: '0',\n  transform: '{{ transform }} scale(0.0)',\n  offset: 0\n}), style({\n  opacity: '0',\n  transform: '{{ transform }} scale(0.8)',\n  offset: 0.5\n}), style({\n  opacity: '1',\n  transform: '{{ transform }} scale(1.0)',\n  offset: 1\n})]))], {\n  params: {\n    time: '350ms',\n    easing: 'cubic-bezier(.7,.31,.72,1.47)',\n    display: 'block',\n    transform: 'translate(-50%, -50%)'\n  }\n});\nconst collapseY = animation([style({\n  height: '*',\n  overflow: 'hidden',\n  'box-sizing': 'border-box'\n}), animate('{{ time }} {{ easing }}', style({\n  height: '0',\n  padding: '0px'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease'\n  }\n});\nconst collapseYWithMargin = animation([style({\n  'margin-top': '0'\n}), animate('{{ time }} {{ easing }}', style({\n  'margin-left': '-100%'\n}))], {\n  params: {\n    time: '500ms',\n    easing: 'ease'\n  }\n});\nconst collapseX = animation([style({\n  width: '*',\n  overflow: 'hidden',\n  'box-sizing': 'border-box'\n}), animate('{{ time }} {{ easing }}', style({\n  width: '0',\n  padding: '0px'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease'\n  }\n});\nconst expandY = animation([style({\n  height: '0',\n  overflow: 'hidden',\n  'box-sizing': 'border-box'\n}), animate('{{ time }} {{ easing }}', style({\n  height: '*',\n  padding: '*'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease'\n  }\n});\nconst expandYWithMargin = animation([style({\n  'margin-top': '-100%'\n}), animate('{{ time }} {{ easing }}', style({\n  'margin-top': '0'\n}))], {\n  params: {\n    time: '500ms',\n    easing: 'ease'\n  }\n});\nconst expandX = animation([style({\n  width: '0',\n  overflow: 'hidden',\n  'box-sizing': 'border-box'\n}), animate('{{ time }} {{ easing }}', style({\n  width: '*',\n  padding: '*'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease'\n  }\n});\nconst collapse = trigger('collapse', [state('collapsed', style({\n  height: '0',\n  overflow: 'hidden'\n})), state('expanded', style({\n  height: '*',\n  overflow: 'hidden'\n})), transition('expanded => collapsed', useAnimation(collapseY)), transition('collapsed => expanded', useAnimation(expandY))]);\nconst collapseWithMargin = trigger('collapseWithMargin', [state('collapsed', style({\n  'margin-top': '-100%'\n})), state('expanded', style({\n  'margin-top': '0'\n})), transition('expanded => collapsed', useAnimation(collapseYWithMargin), {\n  params: {\n    time: '400ms',\n    easing: 'linear'\n  }\n}), transition('collapsed => expanded', useAnimation(expandYWithMargin))]);\nconst collapseLinearWithMargin = trigger('collapseLinearWithMargin', [state('collapsed', style({\n  'margin-top': '-100vh'\n})), state('expanded', style({\n  'margin-top': '0'\n})), transition('expanded => collapsed', useAnimation(collapseYWithMargin, {\n  params: {\n    time: '200ms',\n    easing: 'linear'\n  }\n})), transition('collapsed => expanded', useAnimation(expandYWithMargin, {\n  params: {\n    time: '250ms',\n    easing: 'linear'\n  }\n}))]);\nconst fadeIn = animation([style({\n  opacity: '0'\n}), animate('{{ time}} {{ easing }}', style({\n  opacity: '1'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease'\n  }\n});\nconst fadeOut = animation([style({\n  opacity: '1'\n}), animate('{{ time}} {{ easing }}', style({\n  opacity: '0'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease'\n  }\n});\nconst fadeInDown = animation([style({\n  opacity: '0',\n  transform: '{{ transform }} translateY(-20px)'\n}), animate('{{ time }} {{ easing }}', style({\n  opacity: '1',\n  transform: '{{ transform }} translateY(0)'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease',\n    transform: ''\n  }\n});\nconst fadeInUp = animation([style({\n  opacity: '0',\n  transform: '{{ transform }} translateY(20px)'\n}), animate('{{ time }} {{ easing }}', style({\n  opacity: '1',\n  transform: '{{ transform }} translateY(0)'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease',\n    transform: ''\n  }\n});\nconst fadeInLeft = animation([style({\n  opacity: '0',\n  transform: '{{ transform }} translateX(20px)'\n}), animate('{{ time }} {{ easing }}', style({\n  opacity: '1',\n  transform: '{{ transform }} translateX(0)'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease',\n    transform: ''\n  }\n});\nconst fadeInRight = animation([style({\n  opacity: '0',\n  transform: '{{ transform }} translateX(-20px)'\n}), animate('{{ time }} {{ easing }}', style({\n  opacity: '1',\n  transform: '{{ transform }} translateX(0)'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease',\n    transform: ''\n  }\n});\nconst fadeOutDown = animation([style({\n  opacity: '1',\n  transform: '{{ transform }} translateY(0)'\n}), animate('{{ time }} {{ easing }}', style({\n  opacity: '0',\n  transform: '{{ transform }} translateY(20px)'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease',\n    transform: ''\n  }\n});\nconst fadeOutUp = animation([style({\n  opacity: '1',\n  transform: '{{ transform }} translateY(0)'\n}), animate('{{ time }} {{ easing }}', style({\n  opacity: '0',\n  transform: '{{ transform }} translateY(-20px)'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease',\n    transform: ''\n  }\n});\nconst fadeOutLeft = animation([style({\n  opacity: '1',\n  transform: '{{ transform }} translateX(0)'\n}), animate('{{ time }} {{ easing }}', style({\n  opacity: '0',\n  transform: '{{ transform }} translateX(20px)'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease',\n    transform: ''\n  }\n});\nconst fadeOutRight = animation([style({\n  opacity: '1',\n  transform: '{{ transform }} translateX(0)'\n}), animate('{{ time }} {{ easing }}', style({\n  opacity: '0',\n  transform: '{{ transform }} translateX(-20px)'\n}))], {\n  params: {\n    time: '350ms',\n    easing: 'ease',\n    transform: ''\n  }\n});\nconst fadeAnimation = trigger('fade', [transition(':enter', useAnimation(fadeIn)), transition(':leave', useAnimation(fadeOut))]);\nconst dialogAnimation = trigger('dialog', [transition(':enter', useAnimation(fadeInDown)), transition(':leave', useAnimation(fadeOut))]);\nconst slideFromBottom = trigger('slideFromBottom', [transition('* <=> *', [style({\n  'margin-top': '20px',\n  opacity: '0'\n}), animate('0.2s ease-out', style({\n  opacity: '1',\n  'margin-top': '0px'\n}))])]);\nconst toastInOut = trigger('toastInOut', [transition('* <=> *', [query(':enter', [style({\n  opacity: 0,\n  transform: 'translateY(20px)'\n}), animate('350ms ease', style({\n  opacity: 1,\n  transform: 'translateY(0)'\n}))], {\n  optional: true\n}), query(':leave', animate('450ms ease', style({\n  opacity: 0\n})), {\n  optional: true\n})])]);\nlet BreadcrumbItemsComponent = /*#__PURE__*/(() => {\n  class BreadcrumbItemsComponent {\n    constructor() {\n      this.items = [];\n    }\n\n  }\n\n  BreadcrumbItemsComponent.ɵfac = function BreadcrumbItemsComponent_Factory(t) {\n    return new (t || BreadcrumbItemsComponent)();\n  };\n\n  BreadcrumbItemsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BreadcrumbItemsComponent,\n    selectors: [[\"abp-breadcrumb-items\"]],\n    inputs: {\n      items: \"items\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[\"class\", \"breadcrumb\", 4, \"ngIf\"], [\"linkTemplate\", \"\"], [\"textTemplate\", \"\"], [1, \"breadcrumb\"], [1, \"breadcrumb-item\"], [\"routerLink\", \"/\"], [1, \"fa\", \"fa-home\"], [\"class\", \"breadcrumb-item\", \"aria-current\", \"page\", 3, \"active\", 4, \"ngFor\", \"ngForOf\"], [\"aria-current\", \"page\", 1, \"breadcrumb-item\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"routerLink\"]],\n    template: function BreadcrumbItemsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, BreadcrumbItemsComponent_ol_0_Template, 5, 1, \"ol\", 0);\n        i0.ɵɵtemplate(1, BreadcrumbItemsComponent_ng_template_1_Template, 3, 4, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(3, BreadcrumbItemsComponent_ng_template_3_Template, 2, 3, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.items.length);\n      }\n    },\n    directives: [i1.NgIf, i1$1.RouterLinkWithHref, i1.NgForOf, i1.NgTemplateOutlet],\n    pipes: [i2.LocalizationPipe],\n    encapsulation: 2\n  });\n  return BreadcrumbItemsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet BreadcrumbComponent = /*#__PURE__*/(() => {\n  class BreadcrumbComponent {\n    constructor(cdRef, router, routes, subscription, routerEvents) {\n      this.cdRef = cdRef;\n      this.router = router;\n      this.routes = routes;\n      this.subscription = subscription;\n      this.routerEvents = routerEvents;\n      this.segments = [];\n    }\n\n    ngOnInit() {\n      this.subscription.addOne(this.routerEvents.getNavigationEvents('End').pipe(startWith(null), map(() => this.routes.search({\n        path: getRoutePath(this.router)\n      }))), route => {\n        this.segments = [];\n\n        if (route) {\n          let node = {\n            parent: route\n          };\n\n          while (node.parent) {\n            node = node.parent;\n\n            const {\n              parent,\n              children,\n              isLeaf,\n              path\n            } = node,\n                  segment = __rest(node, [\"parent\", \"children\", \"isLeaf\", \"path\"]);\n\n            if (!isAdministration(segment)) this.segments.unshift(segment);\n          }\n\n          this.cdRef.detectChanges();\n        }\n      });\n    }\n\n  }\n\n  BreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) {\n    return new (t || BreadcrumbComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.Router), i0.ɵɵdirectiveInject(i2.RoutesService), i0.ɵɵdirectiveInject(i2.SubscriptionService), i0.ɵɵdirectiveInject(i2.RouterEvents));\n  };\n\n  BreadcrumbComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BreadcrumbComponent,\n    selectors: [[\"abp-breadcrumb\"]],\n    features: [i0.ɵɵProvidersFeature([SubscriptionService])],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"items\"]],\n    template: function BreadcrumbComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"abp-breadcrumb-items\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"items\", ctx.segments);\n      }\n    },\n    directives: [BreadcrumbItemsComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return BreadcrumbComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction isAdministration(route) {\n  return route.name === \"AbpUiNavigation::Menu:Administration\"\n  /* Administration */\n  ;\n}\n\nlet ButtonComponent = /*#__PURE__*/(() => {\n  class ButtonComponent {\n    constructor(renderer) {\n      this.renderer = renderer;\n      this.buttonId = '';\n      this.buttonClass = 'btn btn-primary';\n      this.buttonType = 'button';\n      this.formName = undefined;\n      this.loading = false;\n      this.disabled = false;\n      this.click = new EventEmitter();\n      this.focus = new EventEmitter();\n      this.blur = new EventEmitter();\n      this.abpClick = new EventEmitter();\n      this.abpFocus = new EventEmitter();\n      this.abpBlur = new EventEmitter();\n    }\n\n    get icon() {\n      return `${this.loading ? 'fa fa-spinner fa-spin' : this.iconClass || 'd-none'}`;\n    }\n\n    ngOnInit() {\n      if (this.attributes) {\n        Object.keys(this.attributes).forEach(key => {\n          var _a;\n\n          if ((_a = this.attributes) === null || _a === void 0 ? void 0 : _a[key]) {\n            this.renderer.setAttribute(this.buttonRef.nativeElement, key, this.attributes[key]);\n          }\n        });\n      }\n    }\n\n  }\n\n  ButtonComponent.ɵfac = function ButtonComponent_Factory(t) {\n    return new (t || ButtonComponent)(i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n\n  ButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ButtonComponent,\n    selectors: [[\"abp-button\"]],\n    viewQuery: function ButtonComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.buttonRef = _t.first);\n      }\n    },\n    inputs: {\n      buttonId: \"buttonId\",\n      buttonClass: \"buttonClass\",\n      buttonType: \"buttonType\",\n      formName: \"formName\",\n      iconClass: \"iconClass\",\n      loading: \"loading\",\n      disabled: \"disabled\",\n      attributes: \"attributes\"\n    },\n    outputs: {\n      click: \"click\",\n      focus: \"focus\",\n      blur: \"blur\",\n      abpClick: \"abpClick\",\n      abpFocus: \"abpFocus\",\n      abpBlur: \"abpBlur\"\n    },\n    ngContentSelectors: _c2,\n    decls: 4,\n    vars: 6,\n    consts: [[3, \"id\", \"ngClass\", \"disabled\", \"click.stop\", \"focus\", \"blur\"], [\"button\", \"\"], [1, \"me-1\", 3, \"ngClass\"]],\n    template: function ButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"button\", 0, 1);\n        i0.ɵɵlistener(\"click.stop\", function ButtonComponent_Template_button_click_stop_0_listener($event) {\n          ctx.click.next($event);\n          return ctx.abpClick.next($event);\n        })(\"focus\", function ButtonComponent_Template_button_focus_0_listener($event) {\n          ctx.focus.next($event);\n          return ctx.abpFocus.next($event);\n        })(\"blur\", function ButtonComponent_Template_button_blur_0_listener($event) {\n          ctx.blur.next($event);\n          return ctx.abpBlur.next($event);\n        });\n        i0.ɵɵelement(2, \"i\", 2);\n        i0.ɵɵprojection(3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.buttonId)(\"ngClass\", ctx.buttonClass)(\"disabled\", ctx.loading || ctx.disabled);\n        i0.ɵɵattribute(\"type\", ctx.buttonType)(\"form\", ctx.formName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.icon);\n      }\n    },\n    directives: [i1.NgClass, i2.StopPropagationDirective],\n    encapsulation: 2\n  });\n  return ButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar Confirmation;\n\n(function (Confirmation) {\n  let Status;\n\n  (function (Status) {\n    Status[\"confirm\"] = \"confirm\";\n    Status[\"reject\"] = \"reject\";\n    Status[\"dismiss\"] = \"dismiss\";\n  })(Status = Confirmation.Status || (Confirmation.Status = {}));\n})(Confirmation || (Confirmation = {}));\n\nconst CONFIRMATION_ICONS = new InjectionToken('CONFIRMATION_ICONS');\nconst DEFAULT_CONFIRMATION_ICONS = {\n  info: 'fa fa-info-circle',\n  success: 'fa fa-check-circle',\n  warning: 'fa fa-exclamation-triangle',\n  error: 'fa fa-times-circle',\n  default: 'fa fa-question-circle'\n};\nlet ConfirmationComponent = /*#__PURE__*/(() => {\n  class ConfirmationComponent {\n    constructor(icons) {\n      this.icons = icons;\n      this.confirm = Confirmation.Status.confirm;\n      this.reject = Confirmation.Status.reject;\n      this.dismiss = Confirmation.Status.dismiss;\n    }\n\n    close(status) {\n      this.clear(status);\n    }\n\n    getIconClass({\n      severity,\n      options\n    }) {\n      if (options && options.icon) {\n        return options.icon;\n      }\n\n      if (!this.icons) {\n        return '';\n      }\n\n      return this.icons[severity] || this.icons.default;\n    }\n\n    isCustomIconExists({\n      options\n    }) {\n      return !!(options && (options.iconTemplate || options.icon));\n    }\n\n    isIconTemplateExits({\n      options\n    }) {\n      return !!(options && options.iconTemplate);\n    }\n\n  }\n\n  ConfirmationComponent.ɵfac = function ConfirmationComponent_Factory(t) {\n    return new (t || ConfirmationComponent)(i0.ɵɵdirectiveInject(CONFIRMATION_ICONS));\n  };\n\n  ConfirmationComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ConfirmationComponent,\n    selectors: [[\"abp-confirmation\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"confirmation\", 4, \"ngIf\"], [1, \"confirmation\"], [1, \"confirmation-backdrop\", 3, \"click\"], [1, \"confirmation-dialog\"], [\"class\", \"icon-container\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"content\"], [\"class\", \"title\", 3, \"innerHTML\", 4, \"ngIf\"], [\"class\", \"message\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"footer\"], [\"id\", \"cancel\", \"class\", \"confirmation-button confirmation-button--reject\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"id\", \"confirm\", \"class\", \"confirmation-button confirmation-button--approve\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [1, \"icon-container\", 3, \"ngClass\"], [3, \"outerHTML\", 4, \"ngIf\", \"ngIfElse\"], [\"iconHolder\", \"\"], [3, \"outerHTML\"], [1, \"icon\", 3, \"ngClass\"], [1, \"title\", 3, \"innerHTML\"], [1, \"message\", 3, \"innerHTML\"], [\"id\", \"cancel\", 1, \"confirmation-button\", \"confirmation-button--reject\", 3, \"innerHTML\", \"click\"], [\"id\", \"confirm\", 1, \"confirmation-button\", \"confirmation-button--approve\", 3, \"innerHTML\", \"click\"]],\n    template: function ConfirmationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ConfirmationComponent_div_0_Template, 10, 5, \"div\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.confirmation$));\n      }\n    },\n    directives: [i1.NgIf, i1.NgClass],\n    pipes: [i1.AsyncPipe, i2.LocalizationPipe],\n    styles: [\".confirmation[_ngcontent-%COMP%]{position:fixed;top:0;right:0;bottom:0;left:0;display:flex;align-items:center;justify-content:center;z-index:1060}.confirmation[_ngcontent-%COMP%]   .confirmation-backdrop[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:1061!important}.confirmation[_ngcontent-%COMP%]   .confirmation-dialog[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:20px auto;padding:0;width:450px;min-height:300px;z-index:1062!important}@media screen and (max-width: 500px){.confirmation[_ngcontent-%COMP%]   .confirmation-dialog[_ngcontent-%COMP%]{width:90vw}}.confirmation[_ngcontent-%COMP%]   .confirmation-dialog[_ngcontent-%COMP%]   .icon-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;margin:0 0 10px;padding:20px}.confirmation[_ngcontent-%COMP%]   .confirmation-dialog[_ngcontent-%COMP%]   .icon-container[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{width:100px;height:100px;stroke-width:1;font-size:80px;text-align:center}.confirmation[_ngcontent-%COMP%]   .confirmation-dialog[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{flex-grow:1;display:block}.confirmation[_ngcontent-%COMP%]   .confirmation-dialog[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{display:block;margin:0;padding:0;font-size:27px;font-weight:600;text-align:center}.confirmation[_ngcontent-%COMP%]   .confirmation-dialog[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]{display:block;margin:10px auto;padding:20px;font-size:16px;font-weight:400;text-align:center}.confirmation[_ngcontent-%COMP%]   .confirmation-dialog[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:flex-end;margin:10px 0 0;padding:20px;width:100%}.confirmation[_ngcontent-%COMP%]   .confirmation-dialog[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]   .confirmation-button[_ngcontent-%COMP%]{display:inline-block;margin:0 5px;padding:10px 20px;border:none;border-radius:6px;font-size:14px;font-weight:600}\"]\n  });\n  return ConfirmationComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet HttpErrorWrapperComponent = /*#__PURE__*/(() => {\n  class HttpErrorWrapperComponent {\n    constructor(subscription) {\n      this.subscription = subscription;\n      this.status = 0;\n      this.title = 'Oops!';\n      this.details = 'Sorry, an error has occured.';\n      this.customComponent = undefined;\n      this.hideCloseIcon = false;\n      this.isHomeShow = true;\n    }\n\n    get statusText() {\n      return this.status ? `[${this.status}]` : '';\n    }\n\n    ngOnInit() {\n      var _a;\n\n      this.backgroundColor = ((_a = window.getComputedStyle(document.body)) === null || _a === void 0 ? void 0 : _a.getPropertyValue('background-color')) || '#fff';\n    }\n\n    ngAfterViewInit() {\n      if (this.customComponent) {\n        const customComponentRef = this.cfRes.resolveComponentFactory(this.customComponent).create(this.injector);\n        customComponentRef.instance.errorStatus = this.status;\n        customComponentRef.instance.destroy$ = this.destroy$;\n        this.appRef.attachView(customComponentRef.hostView);\n\n        if (this.containerRef) {\n          this.containerRef.nativeElement.appendChild(customComponentRef.hostView.rootNodes[0]);\n        }\n\n        customComponentRef.changeDetectorRef.detectChanges();\n      }\n\n      const keyup$ = fromEvent(document, 'keyup').pipe(debounceTime(150), filter(key => key && key.key === 'Escape'));\n      this.subscription.addOne(keyup$, () => this.destroy());\n    }\n\n    ngOnDestroy() {\n      this.destroy();\n    }\n\n    destroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  HttpErrorWrapperComponent.ɵfac = function HttpErrorWrapperComponent_Factory(t) {\n    return new (t || HttpErrorWrapperComponent)(i0.ɵɵdirectiveInject(i2.SubscriptionService));\n  };\n\n  HttpErrorWrapperComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: HttpErrorWrapperComponent,\n    selectors: [[\"abp-http-error-wrapper\"]],\n    viewQuery: function HttpErrorWrapperComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c3, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([SubscriptionService])],\n    decls: 4,\n    vars: 4,\n    consts: [[\"id\", \"abp-http-error-container\", 1, \"error\"], [\"container\", \"\"], [\"id\", \"abp-close-button\", \"type\", \"button\", \"class\", \"btn-close me-2\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"row centered\", 4, \"ngIf\"], [\"id\", \"abp-close-button\", \"type\", \"button\", 1, \"btn-close\", \"me-2\", 3, \"click\"], [1, \"row\", \"centered\"], [1, \"col-md-12\"], [1, \"error-template\"], [1, \"error-details\"], [1, \"error-actions\"], [\"routerLink\", \"/\", \"class\", \"btn btn-primary btn-md mt-2\", 3, \"click\", 4, \"ngIf\"], [\"routerLink\", \"/\", 1, \"btn\", \"btn-primary\", \"btn-md\", \"mt-2\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-home\"]],\n    template: function HttpErrorWrapperComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, HttpErrorWrapperComponent_button_2_Template, 1, 0, \"button\", 2);\n        i0.ɵɵtemplate(3, HttpErrorWrapperComponent_div_3_Template, 11, 8, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"background-color\", ctx.backgroundColor);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hideCloseIcon);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.customComponent);\n      }\n    },\n    directives: [i1.NgIf, i1$1.RouterLinkWithHref],\n    pipes: [i2.LocalizationPipe],\n    styles: [\".error[_ngcontent-%COMP%]{position:fixed;top:0;width:100vw;height:100vh;z-index:999999}.centered[_ngcontent-%COMP%]{position:fixed;top:50%;left:50%;transform:translate(-50%,-50%)}\"]\n  });\n  return HttpErrorWrapperComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet LoaderBarComponent = /*#__PURE__*/(() => {\n  class LoaderBarComponent {\n    constructor(router, cdRef, subscription, httpWaitService, routerWaitService) {\n      this.router = router;\n      this.cdRef = cdRef;\n      this.subscription = subscription;\n      this.httpWaitService = httpWaitService;\n      this.routerWaitService = routerWaitService;\n      this.containerClass = 'abp-loader-bar';\n      this.color = '#77b6ff';\n      this.progressLevel = 0;\n      this.interval = new Subscription();\n      this.timer = new Subscription();\n      this.intervalPeriod = 350;\n      this.stopDelay = 800;\n\n      this.clearProgress = () => {\n        this.progressLevel = 0;\n        this.cdRef.detectChanges();\n      };\n\n      this.reportProgress = () => {\n        if (this.progressLevel < 75) {\n          this.progressLevel += 1 + Math.random() * 9;\n        } else if (this.progressLevel < 90) {\n          this.progressLevel += 0.4;\n        } else if (this.progressLevel < 100) {\n          this.progressLevel += 0.1;\n        } else {\n          this.interval.unsubscribe();\n        }\n\n        this.cdRef.detectChanges();\n      };\n    }\n\n    set isLoading(value) {\n      this._isLoading = value;\n      this.cdRef.detectChanges();\n    }\n\n    get isLoading() {\n      return this._isLoading;\n    }\n\n    get boxShadow() {\n      return `0 0 10px rgba(${this.color}, 0.5)`;\n    }\n\n    ngOnInit() {\n      this.subscribeLoading();\n    }\n\n    subscribeLoading() {\n      this.subscription.addOne(combineLatest([this.httpWaitService.getLoading$(), this.routerWaitService.getLoading$()]), ([httpLoading, routerLoading]) => {\n        if (httpLoading || routerLoading) this.startLoading();else this.stopLoading();\n      });\n    }\n\n    ngOnDestroy() {\n      this.interval.unsubscribe();\n    }\n\n    startLoading() {\n      if (this.isLoading || !this.interval.closed) return;\n      this.isLoading = true;\n      this.progressLevel = 0;\n      this.cdRef.detectChanges();\n      this.interval = timer(0, this.intervalPeriod).subscribe(this.reportProgress);\n      this.timer.unsubscribe();\n    }\n\n    stopLoading() {\n      this.interval.unsubscribe();\n      this.progressLevel = 100;\n      this.isLoading = false;\n      if (!this.timer.closed) return;\n      this.timer = timer(this.stopDelay).subscribe(this.clearProgress);\n    }\n\n  }\n\n  LoaderBarComponent.ɵfac = function LoaderBarComponent_Factory(t) {\n    return new (t || LoaderBarComponent)(i0.ɵɵdirectiveInject(i1$1.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.SubscriptionService), i0.ɵɵdirectiveInject(i2.HttpWaitService), i0.ɵɵdirectiveInject(i2.RouterWaitService));\n  };\n\n  LoaderBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: LoaderBarComponent,\n    selectors: [[\"abp-loader-bar\"]],\n    inputs: {\n      isLoading: \"isLoading\",\n      containerClass: \"containerClass\",\n      color: \"color\"\n    },\n    features: [i0.ɵɵProvidersFeature([SubscriptionService])],\n    decls: 2,\n    vars: 11,\n    consts: [[\"id\", \"abp-loader-bar\", 3, \"ngClass\"], [1, \"abp-progress\", 3, \"ngStyle\"]],\n    template: function LoaderBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"is-loading\", ctx.isLoading);\n        i0.ɵɵproperty(\"ngClass\", ctx.containerClass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"width\", ctx.progressLevel, \"vw\");\n        i0.ɵɵclassProp(\"progressing\", ctx.progressLevel);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(8, _c5, ctx.color, ctx.boxShadow));\n      }\n    },\n    directives: [i1.NgClass, i1.NgStyle],\n    styles: [\".abp-loader-bar[_ngcontent-%COMP%]{left:0;opacity:0;position:fixed;top:0;transition:opacity .4s linear .4s;z-index:99999}.abp-loader-bar.is-loading[_ngcontent-%COMP%]{opacity:1;transition:none}.abp-loader-bar[_ngcontent-%COMP%]   .abp-progress[_ngcontent-%COMP%]{height:3px;left:0;position:fixed;top:0}.abp-loader-bar[_ngcontent-%COMP%]   .abp-progress.progressing[_ngcontent-%COMP%]{transition:width .4s ease}\"]\n  });\n  return LoaderBarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet LoadingComponent = /*#__PURE__*/(() => {\n  class LoadingComponent {}\n\n  LoadingComponent.ɵfac = function LoadingComponent_Factory(t) {\n    return new (t || LoadingComponent)();\n  };\n\n  LoadingComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: LoadingComponent,\n    selectors: [[\"abp-loading\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"abp-loading\"], [1, \"fa\", \"fa-spinner\", \"fa-pulse\", \"abp-spinner\"]],\n    template: function LoadingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"i\", 1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".abp-loading{position:absolute;width:100%;height:100%;top:0;left:0;z-index:1040}.abp-loading .abp-spinner{position:absolute;top:50%;left:50%;font-size:14px;transform:translate(-50%) translateY(-50%)}\\n\"],\n    encapsulation: 2\n  });\n  return LoadingComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst SUPPRESS_UNSAVED_CHANGES_WARNING = new InjectionToken('SUPPRESS_UNSAVED_CHANGES_WARNING');\nlet ConfirmationService = /*#__PURE__*/(() => {\n  class ConfirmationService {\n    constructor(contentProjectionService) {\n      this.contentProjectionService = contentProjectionService;\n      this.confirmation$ = new ReplaySubject(1);\n\n      this.clear = (status = Confirmation.Status.dismiss) => {\n        this.confirmation$.next();\n        this.status$.next(status);\n      };\n    }\n\n    setContainer() {\n      this.containerComponentRef = this.contentProjectionService.projectContent(PROJECTION_STRATEGY.AppendComponentToBody(ConfirmationComponent, {\n        confirmation$: this.confirmation$,\n        clear: this.clear\n      }));\n      setTimeout(() => {\n        this.containerComponentRef.changeDetectorRef.detectChanges();\n      }, 0);\n    }\n\n    info(message, title, options) {\n      return this.show(message, title, 'info', options);\n    }\n\n    success(message, title, options) {\n      return this.show(message, title, 'success', options);\n    }\n\n    warn(message, title, options) {\n      return this.show(message, title, 'warning', options);\n    }\n\n    error(message, title, options) {\n      return this.show(message, title, 'error', options);\n    }\n\n    show(message, title, severity, options = {}) {\n      if (!this.containerComponentRef) this.setContainer();\n      this.confirmation$.next({\n        message,\n        title,\n        severity: severity || 'neutral',\n        options\n      });\n      this.status$ = new Subject();\n      const {\n        dismissible = true\n      } = options;\n      if (dismissible) this.listenToEscape();\n      return this.status$;\n    }\n\n    listenToEscape() {\n      fromEvent(document, 'keyup').pipe(takeUntil(this.status$), debounceTime(150), filter(key => key && key.key === 'Escape')).subscribe(() => {\n        this.clear();\n      });\n    }\n\n  }\n\n  ConfirmationService.ɵfac = function ConfirmationService_Factory(t) {\n    return new (t || ConfirmationService)(i0.ɵɵinject(i2.ContentProjectionService));\n  };\n\n  ConfirmationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ConfirmationService,\n    factory: ConfirmationService.ɵfac,\n    providedIn: 'root'\n  });\n  return ConfirmationService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ModalRefService = /*#__PURE__*/(() => {\n  class ModalRefService {\n    constructor() {\n      this.modalRefs = [];\n    }\n\n    register(modal) {\n      this.modalRefs.push(modal);\n    }\n\n    unregister(modal) {\n      const index = this.modalRefs.indexOf(modal);\n\n      if (index > -1) {\n        this.modalRefs.splice(index, 1);\n      }\n    }\n\n    dismissAll(mode) {\n      this.modalRefs.forEach(modal => modal.dismiss(mode));\n    }\n\n  }\n\n  ModalRefService.ɵfac = function ModalRefService_Factory(t) {\n    return new (t || ModalRefService)();\n  };\n\n  ModalRefService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ModalRefService,\n    factory: ModalRefService.ɵfac,\n    providedIn: 'root'\n  });\n  return ModalRefService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ModalComponent = /*#__PURE__*/(() => {\n  class ModalComponent {\n    constructor(confirmationService, subscription, suppressUnsavedChangesWarningToken, modal, modalRefService) {\n      this.confirmationService = confirmationService;\n      this.subscription = subscription;\n      this.suppressUnsavedChangesWarningToken = suppressUnsavedChangesWarningToken;\n      this.modal = modal;\n      this.modalRefService = modalRefService;\n      this.options = {};\n      this.suppressUnsavedChangesWarning = this.suppressUnsavedChangesWarningToken;\n      this.visibleChange = new EventEmitter();\n      this.init = new EventEmitter();\n      this.appear = new EventEmitter();\n      this.disappear = new EventEmitter();\n      this._visible = false;\n      this._busy = false;\n      this.isConfirmationOpen = false;\n      this.destroy$ = new Subject();\n      this.modalIdentifier = `modal-${uuid()}`;\n      this.toggle$ = new Subject();\n      this.initToggleStream();\n    }\n\n    get visible() {\n      return this._visible;\n    }\n\n    set visible(value) {\n      if (typeof value !== 'boolean') return;\n      this.toggle$.next(value);\n    }\n\n    get busy() {\n      return this._busy;\n    }\n\n    set busy(value) {\n      if (this.abpSubmit && this.abpSubmit instanceof ButtonComponent) {\n        this.abpSubmit.loading = value;\n      }\n\n      this._busy = value;\n    }\n\n    get modalWindowRef() {\n      return document.querySelector(`ngb-modal-window.${this.modalIdentifier}`);\n    }\n\n    get isFormDirty() {\n      var _a;\n\n      return Boolean((_a = this.modalWindowRef) === null || _a === void 0 ? void 0 : _a.querySelector('.ng-dirty'));\n    }\n\n    ngOnInit() {\n      this.modalRefService.register(this);\n    }\n\n    dismiss(mode) {\n      switch (mode) {\n        case 'hard':\n          this.visible = false;\n          break;\n\n        case 'soft':\n          this.close();\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    initToggleStream() {\n      this.subscription.addOne(this.toggle$.pipe(debounceTime(0), distinctUntilChanged()), value => this.toggle(value));\n    }\n\n    toggle(value) {\n      var _a;\n\n      this._visible = value;\n      this.visibleChange.emit(value);\n\n      if (!value) {\n        (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.dismiss();\n        this.disappear.emit();\n        this.destroy$.next();\n        return;\n      }\n\n      setTimeout(() => this.listen(), 0);\n      this.modalRef = this.modal.open(this.modalContent, Object.assign(Object.assign({\n        size: 'md',\n        centered: false,\n        keyboard: false,\n        scrollable: true,\n        beforeDismiss: () => {\n          if (!this.visible) return true;\n          this.close();\n          return !this.visible;\n        }\n      }, this.options), {\n        windowClass: `${this.options.windowClass || ''} ${this.modalIdentifier}`\n      }));\n      this.appear.emit();\n    }\n\n    ngOnDestroy() {\n      this.modalRefService.unregister(this);\n      this.toggle(false);\n      this.destroy$.next();\n    }\n\n    close() {\n      if (this.busy) return;\n\n      if (this.isFormDirty && !this.suppressUnsavedChangesWarning) {\n        if (this.isConfirmationOpen) return;\n        this.isConfirmationOpen = true;\n        this.confirmationService.warn('AbpUi::AreYouSureYouWantToCancelEditingWarningMessage', 'AbpUi::AreYouSure', {\n          dismissible: false\n        }).subscribe(status => {\n          this.isConfirmationOpen = false;\n\n          if (status === Confirmation.Status.confirm) {\n            this.visible = false;\n          }\n        });\n      } else {\n        this.visible = false;\n      }\n    }\n\n    listen() {\n      if (this.modalWindowRef) {\n        fromEvent(this.modalWindowRef, 'keyup').pipe(takeUntil(this.destroy$), debounceTime(150), filter(key => key && key.key === 'Escape')).subscribe(() => this.close());\n      }\n\n      fromEvent(window, 'beforeunload').pipe(takeUntil(this.destroy$)).subscribe(event => {\n        // TODO: check this\n        if (!this.isFormDirty || this.suppressUnsavedChangesWarning) {\n          event.preventDefault();\n        }\n      });\n      this.init.emit();\n    }\n\n  }\n\n  ModalComponent.ɵfac = function ModalComponent_Factory(t) {\n    return new (t || ModalComponent)(i0.ɵɵdirectiveInject(ConfirmationService), i0.ɵɵdirectiveInject(i2.SubscriptionService), i0.ɵɵdirectiveInject(SUPPRESS_UNSAVED_CHANGES_WARNING, 8), i0.ɵɵdirectiveInject(i3.NgbModal), i0.ɵɵdirectiveInject(ModalRefService));\n  };\n\n  ModalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ModalComponent,\n    selectors: [[\"abp-modal\"]],\n    contentQueries: function ModalComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c6, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c7, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c8, 5);\n        i0.ɵɵcontentQuery(dirIndex, ButtonComponent, 5, ButtonComponent);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.abpHeader = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.abpBody = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.abpFooter = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.abpSubmit = _t.first);\n      }\n    },\n    viewQuery: function ModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c9, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalContent = _t.first);\n      }\n    },\n    inputs: {\n      visible: \"visible\",\n      busy: \"busy\",\n      options: \"options\",\n      suppressUnsavedChangesWarning: \"suppressUnsavedChangesWarning\"\n    },\n    outputs: {\n      visibleChange: \"visibleChange\",\n      init: \"init\",\n      appear: \"appear\",\n      disappear: \"disappear\"\n    },\n    features: [i0.ɵɵProvidersFeature([SubscriptionService])],\n    ngContentSelectors: _c2,\n    decls: 3,\n    vars: 0,\n    consts: [[\"modalContent\", \"\"], [\"id\", \"abp-modal-header\", \"class\", \"modal-header\", 4, \"ngIf\"], [\"id\", \"abp-modal-body\", \"class\", \"modal-body\", 4, \"ngIf\"], [\"id\", \"abp-modal-footer\", \"class\", \"modal-footer\", 4, \"ngIf\"], [\"id\", \"abp-modal-header\", 1, \"modal-header\"], [4, \"ngTemplateOutlet\"], [\"id\", \"abp-modal-close-button\", \"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-sm\", \"btn-close\", 3, \"click\"], [\"id\", \"abp-modal-body\", 1, \"modal-body\"], [\"id\", \"abp-modal-footer\", 1, \"modal-footer\"]],\n    template: function ModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵtemplate(1, ModalComponent_ng_template_1_Template, 3, 3, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    directives: [i1.NgIf, i1.NgTemplateOutlet],\n    styles: [\".modal.show[_ngcontent-%COMP%]{display:block!important}.modal-backdrop[_ngcontent-%COMP%]{opacity:.8}.modal[_ngcontent-%COMP%]::-webkit-scrollbar{width:7px}.modal[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#ddd}.modal[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#8a8686}.modal-dialog[_ngcontent-%COMP%]{z-index:1050}\"]\n  });\n  return ModalComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ModalCloseDirective = /*#__PURE__*/(() => {\n  class ModalCloseDirective {\n    constructor(modal) {\n      this.modal = modal;\n\n      if (!modal) {\n        console.error('Please use abpClose within an abp-modal');\n      }\n    }\n\n    onClick() {\n      var _a;\n\n      (_a = this.modal) === null || _a === void 0 ? void 0 : _a.close();\n    }\n\n  }\n\n  ModalCloseDirective.ɵfac = function ModalCloseDirective_Factory(t) {\n    return new (t || ModalCloseDirective)(i0.ɵɵdirectiveInject(ModalComponent, 8));\n  };\n\n  ModalCloseDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ModalCloseDirective,\n    selectors: [[\"\", \"abpClose\", \"\"]],\n    hostBindings: function ModalCloseDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function ModalCloseDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n    }\n  });\n  return ModalCloseDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToastComponent = /*#__PURE__*/(() => {\n  class ToastComponent {\n    constructor() {\n      this.remove = new EventEmitter();\n    }\n\n    get severityClass() {\n      if (!this.toast || !this.toast.severity) return '';\n      return `abp-toast-${this.toast.severity}`;\n    }\n\n    get iconClass() {\n      switch (this.toast.severity) {\n        case 'success':\n          return 'fa-check-circle';\n\n        case 'info':\n          return 'fa-info-circle';\n\n        case 'warning':\n          return 'fa-exclamation-triangle';\n\n        case 'error':\n          return 'fa-times-circle';\n\n        default:\n          return 'fa-exclamation-circle';\n      }\n    }\n\n    ngOnInit() {\n      const {\n        sticky,\n        life\n      } = this.toast.options || {};\n      if (sticky) return;\n      const timeout = life || 5000;\n      setTimeout(() => {\n        this.close();\n      }, timeout);\n    }\n\n    close() {\n      var _a;\n\n      this.remove.emit((_a = this.toast.options) === null || _a === void 0 ? void 0 : _a.id);\n    }\n\n    tap() {\n      var _a;\n\n      if ((_a = this.toast.options) === null || _a === void 0 ? void 0 : _a.tapToDismiss) this.close();\n    }\n\n  }\n\n  ToastComponent.ɵfac = function ToastComponent_Factory(t) {\n    return new (t || ToastComponent)();\n  };\n\n  ToastComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ToastComponent,\n    selectors: [[\"abp-toast\"]],\n    inputs: {\n      toast: \"toast\"\n    },\n    outputs: {\n      remove: \"remove\"\n    },\n    decls: 10,\n    vars: 11,\n    consts: [[1, \"abp-toast\", 3, \"ngClass\", \"click\"], [1, \"abp-toast-icon\"], [1, \"fa\", \"icon\", 3, \"ngClass\"], [1, \"abp-toast-content\"], [\"class\", \"abp-toast-close-button\", 3, \"click\", 4, \"ngIf\"], [1, \"abp-toast-title\"], [1, \"abp-toast-message\", 3, \"innerHTML\"], [1, \"abp-toast-close-button\", 3, \"click\"], [1, \"fa\", \"fa-times\"]],\n    template: function ToastComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"click\", function ToastComponent_Template_div_click_0_listener() {\n          return ctx.tap();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"i\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtemplate(4, ToastComponent_button_4_Template, 2, 0, \"button\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"abpLocalization\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"p\", 6);\n        i0.ɵɵpipe(9, \"abpLocalization\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.severityClass);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.iconClass);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.toast.options == null ? null : ctx.toast.options.closable);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(7, 5, ctx.toast.title, ctx.toast.options == null ? null : ctx.toast.options.titleLocalizationParams), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(9, 8, ctx.toast.message, ctx.toast.options == null ? null : ctx.toast.options.messageLocalizationParams), i0.ɵɵsanitizeHtml);\n      }\n    },\n    directives: [i1.NgClass, i1.NgIf],\n    pipes: [i2.LocalizationPipe],\n    styles: [\".abp-toast[_ngcontent-%COMP%]{display:grid;grid-template-columns:50px 1fr;grid-gap:10px;gap:10px;margin:5px 0;padding:10px;border-radius:0;width:350px;-webkit-user-select:none;user-select:none;z-index:9999;border:2px solid #f0f0f0;background-color:#f0f0f0;color:#000;box-shadow:0 0 10px -5px #0006;opacity:1}.abp-toast[_ngcontent-%COMP%]:hover{border:2px solid #e3e3e3;background-color:#e3e3e3;box-shadow:0 0 15px -5px #0006}.abp-toast.abp-toast-success[_ngcontent-%COMP%]{border:2px solid #51a351;background-color:#51a351;color:#fff;box-shadow:0 0 10px -5px #0006}.abp-toast.abp-toast-success[_ngcontent-%COMP%]:hover{border:2px solid #499249;background-color:#499249;box-shadow:0 0 15px -5px #0006}.abp-toast.abp-toast-info[_ngcontent-%COMP%]{border:2px solid #2f96b4;background-color:#2f96b4;color:#fff;box-shadow:0 0 10px -5px #0006}.abp-toast.abp-toast-info[_ngcontent-%COMP%]:hover{border:2px solid #2a85a0;background-color:#2a85a0;box-shadow:0 0 15px -5px #0006}.abp-toast.abp-toast-warning[_ngcontent-%COMP%]{border:2px solid #f89406;background-color:#f89406;color:#fff;box-shadow:0 0 10px -5px #0006}.abp-toast.abp-toast-warning[_ngcontent-%COMP%]:hover{border:2px solid #df8505;background-color:#df8505;box-shadow:0 0 15px -5px #0006}.abp-toast.abp-toast-error[_ngcontent-%COMP%]{border:2px solid #bd362f;background-color:#bd362f;color:#fff;box-shadow:0 0 10px -5px #0006}.abp-toast.abp-toast-error[_ngcontent-%COMP%]:hover{border:2px solid #a9302a;background-color:#a9302a;box-shadow:0 0 15px -5px #0006}.abp-toast[_ngcontent-%COMP%]   .abp-toast-icon[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}.abp-toast[_ngcontent-%COMP%]   .abp-toast-icon[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{font-size:36px}.abp-toast[_ngcontent-%COMP%]   .abp-toast-content[_ngcontent-%COMP%]{position:relative}.abp-toast[_ngcontent-%COMP%]   .abp-toast-content[_ngcontent-%COMP%]   .abp-toast-close-button[_ngcontent-%COMP%]{position:absolute;top:0;right:0;display:flex;align-items:center;justify-content:center;margin:0;padding:0 5px 0 0;width:25px;height:25px;border:none;border-radius:50%;background:transparent;color:inherit}.abp-toast[_ngcontent-%COMP%]   .abp-toast-content[_ngcontent-%COMP%]   .abp-toast-close-button[_ngcontent-%COMP%]:focus{outline:none}.abp-toast[_ngcontent-%COMP%]   .abp-toast-content[_ngcontent-%COMP%]   .abp-toast-title[_ngcontent-%COMP%]{margin:0;padding:0;font-size:1rem;font-weight:600}.abp-toast[_ngcontent-%COMP%]   .abp-toast-content[_ngcontent-%COMP%]   .abp-toast-message[_ngcontent-%COMP%]{margin:0;padding:0;max-width:240px}\"]\n  });\n  return ToastComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToastContainerComponent = /*#__PURE__*/(() => {\n  class ToastContainerComponent {\n    constructor() {\n      this.toasts = [];\n      this.right = '30px';\n      this.bottom = '30px';\n    }\n\n    ngOnInit() {\n      this.toasts$.subscribe(toasts => {\n        this.toasts = this.toastKey ? toasts.filter(t => {\n          return t.options && t.options.containerKey !== this.toastKey;\n        }) : toasts;\n      });\n    }\n\n    trackByFunc(index, toast) {\n      var _a;\n\n      if (!toast) return null;\n      return (_a = toast.options) === null || _a === void 0 ? void 0 : _a.id;\n    }\n\n  }\n\n  ToastContainerComponent.ɵfac = function ToastContainerComponent_Factory(t) {\n    return new (t || ToastContainerComponent)();\n  };\n\n  ToastContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ToastContainerComponent,\n    selectors: [[\"abp-toast-container\"]],\n    inputs: {\n      top: \"top\",\n      right: \"right\",\n      bottom: \"bottom\",\n      left: \"left\",\n      toastKey: \"toastKey\"\n    },\n    decls: 2,\n    vars: 13,\n    consts: [[1, \"abp-toast-container\"], [3, \"toast\", \"remove\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"toast\", \"remove\"]],\n    template: function ToastContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ToastContainerComponent_abp_toast_1_Template, 1, 1, \"abp-toast\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"top\", ctx.top || \"auto\")(\"right\", ctx.right || \"auto\")(\"bottom\", ctx.bottom || \"auto\")(\"left\", ctx.left || \"auto\")(\"display\", ctx.toasts.length ? \"flex\" : \"none\");\n        i0.ɵɵproperty(\"@toastInOut\", ctx.toasts.length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.toasts)(\"ngForTrackBy\", ctx.trackByFunc);\n      }\n    },\n    directives: [ToastComponent, i1.NgForOf],\n    styles: [\".abp-toast-container[_ngcontent-%COMP%]{position:fixed;display:flex;flex-direction:column;align-items:center;justify-content:flex-end;min-width:350px;min-height:80px;z-index:1900}.abp-toast-container.new-on-top[_ngcontent-%COMP%]{flex-direction:column-reverse}\"],\n    data: {\n      animation: [toastInOut]\n    }\n  });\n  return ToastContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst DEFAULT_VALIDATION_BLUEPRINTS = {\n  creditCard: 'AbpValidation::ThisFieldIsNotAValidCreditCardNumber.',\n  email: 'AbpValidation::ThisFieldIsNotAValidEmailAddress.',\n  invalid: 'AbpValidation::ThisFieldIsNotValid.',\n  max: 'AbpValidation::ThisFieldMustBeLessOrEqual{0}[{{ max }}]',\n  maxlength: 'AbpValidation::ThisFieldMustBeAStringOrArrayTypeWithAMaximumLengthOf{0}[{{ requiredLength }}]',\n  min: 'AbpValidation::ThisFieldMustBeGreaterThanOrEqual{0}[{{ min }}]',\n  minlength: 'AbpValidation::ThisFieldMustBeAStringOrArrayTypeWithAMinimumLengthOf{0}[{{ requiredLength }}]',\n  ngbDate: 'AbpValidation::ThisFieldIsNotValid.',\n  passwordMismatch: 'AbpIdentity::Volo.Abp.Identity:PasswordConfirmationFailed',\n  range: 'AbpValidation::ThisFieldMustBeBetween{0}And{1}[{{ min }},{{ max }}]',\n  required: 'AbpValidation::ThisFieldIsRequired.',\n  url: 'AbpValidation::ThisFieldIsNotAValidFullyQualifiedHttpHttpsOrFtpUrl',\n  passwordRequiresLower: 'AbpIdentity::Volo.Abp.Identity:PasswordRequiresLower',\n  passwordRequiresUpper: 'AbpIdentity::Volo.Abp.Identity:PasswordRequiresUpper',\n  passwordRequiresDigit: 'AbpIdentity::Volo.Abp.Identity:PasswordRequiresDigit',\n  passwordRequiresNonAlphanumeric: 'AbpIdentity::Volo.Abp.Identity:PasswordRequiresNonAlphanumeric'\n};\nlet EllipsisDirective = /*#__PURE__*/(() => {\n  class EllipsisDirective {\n    constructor(cdRef, elRef) {\n      this.cdRef = cdRef;\n      this.elRef = elRef;\n      this.enabled = true;\n    }\n\n    get inlineClass() {\n      return this.enabled && this.width;\n    }\n\n    get class() {\n      return this.enabled && !this.width;\n    }\n\n    get maxWidth() {\n      return this.enabled && this.width ? this.width || '170px' : undefined;\n    }\n\n    ngAfterViewInit() {\n      this.title = this.title || this.elRef.nativeElement.innerText;\n      this.cdRef.detectChanges();\n    }\n\n  }\n\n  EllipsisDirective.ɵfac = function EllipsisDirective_Factory(t) {\n    return new (t || EllipsisDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  EllipsisDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: EllipsisDirective,\n    selectors: [[\"\", \"abpEllipsis\", \"\"]],\n    hostVars: 7,\n    hostBindings: function EllipsisDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"title\", ctx.title);\n        i0.ɵɵstyleProp(\"max-width\", ctx.maxWidth);\n        i0.ɵɵclassProp(\"abp-ellipsis-inline\", ctx.inlineClass)(\"abp-ellipsis\", ctx.class);\n      }\n    },\n    inputs: {\n      width: [\"abpEllipsis\", \"width\"],\n      title: \"title\",\n      enabled: [\"abpEllipsisEnabled\", \"enabled\"]\n    }\n  });\n  return EllipsisDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet EllipsisModule = /*#__PURE__*/(() => {\n  class EllipsisModule {}\n\n  EllipsisModule.ɵfac = function EllipsisModule_Factory(t) {\n    return new (t || EllipsisModule)();\n  };\n\n  EllipsisModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: EllipsisModule\n  });\n  EllipsisModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return EllipsisModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet LoadingDirective = /*#__PURE__*/(() => {\n  class LoadingDirective {\n    constructor(elRef, vcRef, cdRes, injector, renderer) {\n      this.elRef = elRef;\n      this.vcRef = vcRef;\n      this.cdRes = cdRes;\n      this.injector = injector;\n      this.renderer = renderer;\n      this.position = 'relative';\n      this.delay = 0;\n      this.rootNode = null;\n      this.timerSubscription = null;\n    }\n\n    get loading() {\n      return this._loading;\n    }\n\n    set loading(newValue) {\n      setTimeout(() => {\n        if (!newValue && this.timerSubscription) {\n          this.timerSubscription.unsubscribe();\n          this.timerSubscription = null;\n          this._loading = newValue;\n\n          if (this.rootNode) {\n            this.renderer.removeChild(this.rootNode.parentElement, this.rootNode);\n            this.rootNode = null;\n          }\n\n          return;\n        }\n\n        this.timerSubscription = timer(this.delay).pipe(take(1)).subscribe(() => {\n          var _a;\n\n          if (!this.componentRef) {\n            this.componentRef = this.cdRes.resolveComponentFactory(LoadingComponent).create(this.injector);\n          }\n\n          if (newValue && !this.rootNode) {\n            this.rootNode = this.componentRef.hostView.rootNodes[0];\n            (_a = this.targetElement) === null || _a === void 0 ? void 0 : _a.appendChild(this.rootNode);\n          } else if (this.rootNode) {\n            this.renderer.removeChild(this.rootNode.parentElement, this.rootNode);\n            this.rootNode = null;\n          }\n\n          this._loading = newValue;\n          this.timerSubscription = null;\n        });\n      }, 0);\n    }\n\n    ngOnInit() {\n      if (!this.targetElement) {\n        const {\n          offsetHeight,\n          offsetWidth\n        } = this.elRef.nativeElement;\n\n        if (!offsetHeight && !offsetWidth && this.elRef.nativeElement.children.length) {\n          this.targetElement = this.elRef.nativeElement.children[0];\n        } else {\n          this.targetElement = this.elRef.nativeElement;\n        }\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.timerSubscription) {\n        this.timerSubscription.unsubscribe();\n      }\n    }\n\n  }\n\n  LoadingDirective.ɵfac = function LoadingDirective_Factory(t) {\n    return new (t || LoadingDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n\n  LoadingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: LoadingDirective,\n    selectors: [[\"\", \"abpLoading\", \"\"]],\n    hostVars: 2,\n    hostBindings: function LoadingDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"position\", ctx.position);\n      }\n    },\n    inputs: {\n      loading: [\"abpLoading\", \"loading\"],\n      targetElement: [\"abpLoadingTargetElement\", \"targetElement\"],\n      delay: [\"abpLoadingDelay\", \"delay\"]\n    }\n  });\n  return LoadingDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NgxDatatableDefaultDirective = /*#__PURE__*/(() => {\n  class NgxDatatableDefaultDirective {\n    constructor(table, document) {\n      this.table = table;\n      this.document = document;\n      this.subscription = new Subscription();\n      this.resizeDiff = 0;\n      this.class = 'material bordered';\n      this.table.columnMode = ColumnMode.force;\n      this.table.footerHeight = 50;\n      this.table.headerHeight = 50;\n      this.table.rowHeight = 'auto';\n      this.table.scrollbarH = true;\n      this.table.virtualization = false;\n    }\n\n    get classes() {\n      return `ngx-datatable ${this.class}`;\n    }\n\n    fixHorizontalGap(scroller) {\n      const {\n        body,\n        documentElement\n      } = this.document;\n\n      if (documentElement.scrollHeight !== documentElement.clientHeight) {\n        if (this.resizeDiff === 0) {\n          this.resizeDiff = window.innerWidth - body.offsetWidth;\n          scroller.scrollWidth -= this.resizeDiff;\n        }\n      } else {\n        scroller.scrollWidth += this.resizeDiff;\n        this.resizeDiff = 0;\n      }\n    }\n\n    fixStyleOnWindowResize() {\n      // avoided @HostListener('window:resize') in favor of performance\n      const subscription = fromEvent(window, 'resize').pipe(debounceTime(500)).subscribe(() => {\n        const {\n          scroller\n        } = this.table.bodyComponent;\n        if (!scroller) return;\n        this.fixHorizontalGap(scroller);\n      });\n      this.subscription.add(subscription);\n    }\n\n    ngAfterViewInit() {\n      this.fixStyleOnWindowResize();\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n\n  }\n\n  NgxDatatableDefaultDirective.ɵfac = function NgxDatatableDefaultDirective_Factory(t) {\n    return new (t || NgxDatatableDefaultDirective)(i0.ɵɵdirectiveInject(i1$2.DatatableComponent), i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n\n  NgxDatatableDefaultDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgxDatatableDefaultDirective,\n    selectors: [[\"ngx-datatable\", \"default\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NgxDatatableDefaultDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.classes);\n      }\n    },\n    inputs: {\n      class: \"class\"\n    },\n    exportAs: [\"ngxDatatableDefault\"]\n  });\n  return NgxDatatableDefaultDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst defaultNgxDatatableMessages = {\n  emptyMessage: 'AbpUi::NoDataAvailableInDatatable',\n  totalMessage: 'AbpUi::Total',\n  selectedMessage: 'AbpUi::Selected'\n};\nconst NGX_DATATABLE_MESSAGES = new InjectionToken('NGX_DATATABLE_MESSAGES');\nlet NgxDatatableListDirective = /*#__PURE__*/(() => {\n  class NgxDatatableListDirective {\n    constructor(table, cdRef, localizationService, ngxDatatableMessages) {\n      this.table = table;\n      this.cdRef = cdRef;\n      this.localizationService = localizationService;\n      this.ngxDatatableMessages = ngxDatatableMessages;\n      this.subscription = new Subscription();\n      this.querySubscription = new Subscription();\n      this.setInitialValues();\n    }\n\n    setInitialValues() {\n      this.table.externalPaging = true;\n      this.table.externalSorting = true;\n      const {\n        emptyMessage,\n        selectedMessage,\n        totalMessage\n      } = this.ngxDatatableMessages || defaultNgxDatatableMessages;\n      this.table.messages = {\n        emptyMessage: this.localizationService.instant(emptyMessage),\n        totalMessage: this.localizationService.instant(totalMessage),\n        selectedMessage: this.localizationService.instant(selectedMessage)\n      };\n    }\n\n    subscribeToPage() {\n      const sub = this.table.page.subscribe(({\n        offset\n      }) => {\n        this.list.page = offset;\n        this.table.offset = offset;\n      });\n      this.subscription.add(sub);\n    }\n\n    subscribeToSort() {\n      const sub = this.table.sort.subscribe(({\n        sorts: [{\n          prop,\n          dir\n        }]\n      }) => {\n        if (prop === this.list.sortKey && this.list.sortOrder === 'desc') {\n          this.list.sortKey = '';\n          this.list.sortOrder = '';\n          this.table.sorts = [];\n          this.cdRef.detectChanges();\n        } else {\n          this.list.sortKey = prop;\n          this.list.sortOrder = dir;\n        }\n      });\n      this.subscription.add(sub);\n    }\n\n    subscribeToQuery() {\n      if (!this.querySubscription.closed) this.querySubscription.unsubscribe();\n      this.querySubscription = this.list.query$.subscribe(() => {\n        const offset = this.list.page;\n        if (this.table.offset !== offset) this.table.offset = offset;\n      });\n    }\n\n    ngOnChanges({\n      list\n    }) {\n      this.subscribeToQuery();\n      if (!list.firstChange) return;\n      const {\n        maxResultCount,\n        page\n      } = list.currentValue;\n      this.table.limit = maxResultCount;\n      this.table.offset = page;\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n      this.querySubscription.unsubscribe();\n    }\n\n    ngOnInit() {\n      this.subscribeToPage();\n      this.subscribeToSort();\n    }\n\n  }\n\n  NgxDatatableListDirective.ɵfac = function NgxDatatableListDirective_Factory(t) {\n    return new (t || NgxDatatableListDirective)(i0.ɵɵdirectiveInject(i1$2.DatatableComponent), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.LocalizationService), i0.ɵɵdirectiveInject(NGX_DATATABLE_MESSAGES, 8));\n  };\n\n  NgxDatatableListDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgxDatatableListDirective,\n    selectors: [[\"ngx-datatable\", \"list\", \"\"]],\n    inputs: {\n      list: \"list\"\n    },\n    exportAs: [\"ngxDatatableList\"],\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return NgxDatatableListDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DocumentDirHandlerService = /*#__PURE__*/(() => {\n  class DocumentDirHandlerService {\n    constructor(injector) {\n      this.injector = injector;\n      this.dir = new BehaviorSubject('ltr');\n      this.dir$ = this.dir.asObservable();\n      this.listenToLanguageChanges();\n    }\n\n    listenToLanguageChanges() {\n      const l10n = this.injector.get(LocalizationService); // will always listen, no need to unsubscribe\n\n      l10n.currentLang$.pipe(map(locale => getLocaleDirection(locale))).subscribe(dir => {\n        this.dir.next(dir);\n        this.setBodyDir(dir);\n      });\n    }\n\n    setBodyDir(dir) {\n      document.body.dir = dir;\n      document.dir = dir;\n    }\n\n  }\n\n  DocumentDirHandlerService.ɵfac = function DocumentDirHandlerService_Factory(t) {\n    return new (t || DocumentDirHandlerService)(i0.ɵɵinject(i0.Injector));\n  };\n\n  DocumentDirHandlerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DocumentDirHandlerService,\n    factory: DocumentDirHandlerService.ɵfac\n  });\n  return DocumentDirHandlerService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction httpErrorConfigFactory(config = {}) {\n  if (config.errorScreen && config.errorScreen.component && !config.errorScreen.forWhichErrors) {\n    config.errorScreen.forWhichErrors = [401, 403, 404, 500];\n  }\n\n  return Object.assign({\n    skipHandledErrorCodes: [],\n    errorScreen: {}\n  }, config);\n}\n\nconst HTTP_ERROR_CONFIG = new InjectionToken('HTTP_ERROR_CONFIG');\nconst HTTP_ERROR_HANDLER = new InjectionToken('HTTP_ERROR_HANDLER');\nconst DEFAULT_ERROR_MESSAGES = {\n  defaultError: {\n    title: 'An error has occurred!',\n    details: 'Error detail not sent by server.'\n  },\n  defaultError401: {\n    title: 'You are not authenticated!',\n    details: 'You should be authenticated (sign in) in order to perform this operation.'\n  },\n  defaultError403: {\n    title: 'You are not authorized!',\n    details: 'You are not allowed to perform this operation.'\n  },\n  defaultError404: {\n    title: 'Resource not found!',\n    details: 'The resource requested could not found on the server.'\n  },\n  defaultError500: {\n    title: 'Internal server error',\n    details: 'Error detail not sent by server.'\n  }\n};\nconst DEFAULT_ERROR_LOCALIZATIONS = {\n  defaultError: {\n    title: 'AbpUi::DefaultErrorMessage',\n    details: 'AbpUi::DefaultErrorMessageDetail'\n  },\n  defaultError401: {\n    title: 'AbpUi::DefaultErrorMessage401',\n    details: 'AbpUi::DefaultErrorMessage401Detail'\n  },\n  defaultError403: {\n    title: 'AbpUi::DefaultErrorMessage403',\n    details: 'AbpUi::DefaultErrorMessage403Detail'\n  },\n  defaultError404: {\n    title: 'AbpUi::DefaultErrorMessage404',\n    details: 'AbpUi::DefaultErrorMessage404Detail'\n  },\n  defaultError500: {\n    title: 'AbpUi::500Message',\n    details: 'AbpUi::DefaultErrorMessage'\n  }\n};\nlet ErrorHandler = /*#__PURE__*/(() => {\n  class ErrorHandler {\n    constructor(injector) {\n      this.injector = injector;\n      this.componentRef = null;\n      this.httpErrorHandler = this.injector.get(HTTP_ERROR_HANDLER, (_, err) => throwError(err));\n\n      this.executeErrorHandler = error => {\n        const returnValue = this.httpErrorHandler(this.injector, error);\n        return (returnValue instanceof Observable ? returnValue : of(null)).pipe(catchError(err => {\n          this.handleError(err);\n          return of(null);\n        }));\n      };\n\n      this.filterRestErrors = ({\n        status\n      }) => {\n        if (typeof status !== 'number') return false;\n        return !!this.httpErrorConfig.skipHandledErrorCodes && this.httpErrorConfig.skipHandledErrorCodes.findIndex(code => code === status) < 0;\n      };\n\n      this.filterRouteErrors = navigationError => {\n        var _a, _b;\n\n        return ((_b = (_a = navigationError.error) === null || _a === void 0 ? void 0 : _a.message) === null || _b === void 0 ? void 0 : _b.indexOf('Cannot match')) > -1 && !!this.httpErrorConfig.skipHandledErrorCodes && this.httpErrorConfig.skipHandledErrorCodes.findIndex(code => code === 404) < 0;\n      };\n\n      this.httpErrorReporter = injector.get(HttpErrorReporterService);\n      this.routerEvents = injector.get(RouterEvents);\n      this.confirmationService = injector.get(ConfirmationService);\n      this.cfRes = injector.get(ComponentFactoryResolver);\n      this.rendererFactory = injector.get(RendererFactory2);\n      this.httpErrorConfig = injector.get('HTTP_ERROR_CONFIG');\n      this.listenToRestError();\n      this.listenToRouterError();\n      this.listenToRouterDataResolved();\n    }\n\n    listenToRouterError() {\n      this.routerEvents.getNavigationEvents('Error').pipe(filter(this.filterRouteErrors)).subscribe(() => this.show404Page());\n    }\n\n    listenToRouterDataResolved() {\n      this.routerEvents.getEvents(ResolveEnd).pipe(filter(() => !!this.componentRef)).subscribe(() => {\n        var _a;\n\n        (_a = this.componentRef) === null || _a === void 0 ? void 0 : _a.destroy();\n        this.componentRef = null;\n      });\n    }\n\n    listenToRestError() {\n      this.httpErrorReporter.reporter$.pipe(filter(this.filterRestErrors), switchMap(this.executeErrorHandler)).subscribe();\n    }\n\n    handleError(err) {\n      var _a;\n\n      const body = ((_a = err === null || err === void 0 ? void 0 : err.error) === null || _a === void 0 ? void 0 : _a.error) || {\n        key: DEFAULT_ERROR_LOCALIZATIONS.defaultError.title,\n        defaultValue: DEFAULT_ERROR_MESSAGES.defaultError.title\n      };\n\n      if (err instanceof HttpErrorResponse && err.headers.get('_AbpErrorFormat')) {\n        const confirmation$ = this.showErrorWithRequestBody(body);\n\n        if (err.status === 401) {\n          confirmation$.subscribe(() => {\n            this.navigateToLogin();\n          });\n        }\n      } else {\n        switch (err.status) {\n          case 401:\n            this.canCreateCustomError(401) ? this.show401Page() : this.showError({\n              key: DEFAULT_ERROR_LOCALIZATIONS.defaultError401.title,\n              defaultValue: DEFAULT_ERROR_MESSAGES.defaultError401.title\n            }, {\n              key: DEFAULT_ERROR_LOCALIZATIONS.defaultError401.details,\n              defaultValue: DEFAULT_ERROR_MESSAGES.defaultError401.details\n            }).subscribe(() => this.navigateToLogin());\n            break;\n\n          case 403:\n            this.createErrorComponent({\n              title: {\n                key: DEFAULT_ERROR_LOCALIZATIONS.defaultError403.title,\n                defaultValue: DEFAULT_ERROR_MESSAGES.defaultError403.title\n              },\n              details: {\n                key: DEFAULT_ERROR_LOCALIZATIONS.defaultError403.details,\n                defaultValue: DEFAULT_ERROR_MESSAGES.defaultError403.details\n              },\n              status: 403\n            });\n            break;\n\n          case 404:\n            this.canCreateCustomError(404) ? this.show404Page() : this.showError({\n              key: DEFAULT_ERROR_LOCALIZATIONS.defaultError404.details,\n              defaultValue: DEFAULT_ERROR_MESSAGES.defaultError404.details\n            }, {\n              key: DEFAULT_ERROR_LOCALIZATIONS.defaultError404.title,\n              defaultValue: DEFAULT_ERROR_MESSAGES.defaultError404.title\n            });\n            break;\n\n          case 500:\n            this.createErrorComponent({\n              title: {\n                key: DEFAULT_ERROR_LOCALIZATIONS.defaultError500.title,\n                defaultValue: DEFAULT_ERROR_MESSAGES.defaultError500.title\n              },\n              details: {\n                key: DEFAULT_ERROR_LOCALIZATIONS.defaultError500.details,\n                defaultValue: DEFAULT_ERROR_MESSAGES.defaultError500.details\n              },\n              status: 500\n            });\n            break;\n\n          case 0:\n            if (err.statusText === 'Unknown Error') {\n              this.createErrorComponent({\n                title: {\n                  key: DEFAULT_ERROR_LOCALIZATIONS.defaultError.title,\n                  defaultValue: DEFAULT_ERROR_MESSAGES.defaultError.title\n                },\n                details: err.message,\n                isHomeShow: false\n              });\n            }\n\n            break;\n\n          default:\n            this.showError({\n              key: DEFAULT_ERROR_LOCALIZATIONS.defaultError.details,\n              defaultValue: DEFAULT_ERROR_MESSAGES.defaultError.details\n            }, {\n              key: DEFAULT_ERROR_LOCALIZATIONS.defaultError.title,\n              defaultValue: DEFAULT_ERROR_MESSAGES.defaultError.title\n            });\n            break;\n        }\n      }\n    }\n\n    show401Page() {\n      this.createErrorComponent({\n        title: {\n          key: DEFAULT_ERROR_LOCALIZATIONS.defaultError401.title,\n          defaultValue: DEFAULT_ERROR_MESSAGES.defaultError401.title\n        },\n        status: 401\n      });\n    }\n\n    show404Page() {\n      this.createErrorComponent({\n        title: {\n          key: DEFAULT_ERROR_LOCALIZATIONS.defaultError404.title,\n          defaultValue: DEFAULT_ERROR_MESSAGES.defaultError404.title\n        },\n        status: 404\n      });\n    }\n\n    showErrorWithRequestBody(body) {\n      let message;\n      let title;\n\n      if (body.details) {\n        message = body.details;\n        title = body.message;\n      } else if (body.message) {\n        title = {\n          key: DEFAULT_ERROR_LOCALIZATIONS.defaultError.title,\n          defaultValue: DEFAULT_ERROR_MESSAGES.defaultError.title\n        };\n        message = body.message;\n      } else {\n        message = body.message || {\n          key: DEFAULT_ERROR_LOCALIZATIONS.defaultError.title,\n          defaultValue: DEFAULT_ERROR_MESSAGES.defaultError.title\n        };\n        title = '';\n      }\n\n      return this.showError(message, title);\n    }\n\n    showError(message, title) {\n      return this.confirmationService.error(message, title, {\n        hideCancelBtn: true,\n        yesText: 'AbpAccount::Close'\n      });\n    }\n\n    navigateToLogin() {\n      this.injector.get(AuthService).navigateToLogin();\n    }\n\n    createErrorComponent(instance) {\n      var _a, _b;\n\n      const renderer = this.rendererFactory.createRenderer(null, null);\n      const host = renderer.selectRootElement(document.body, true);\n      this.componentRef = this.cfRes.resolveComponentFactory(HttpErrorWrapperComponent).create(this.injector);\n\n      for (const key in instance) {\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(this.componentRef.instance, key)) {\n          this.componentRef.instance[key] = instance[key];\n        }\n      }\n\n      this.componentRef.instance.hideCloseIcon = !!((_a = this.httpErrorConfig.errorScreen) === null || _a === void 0 ? void 0 : _a.hideCloseIcon);\n      const appRef = this.injector.get(ApplicationRef);\n\n      if (this.canCreateCustomError(instance.status)) {\n        this.componentRef.instance.cfRes = this.cfRes;\n        this.componentRef.instance.appRef = appRef;\n        this.componentRef.instance.injector = this.injector;\n        this.componentRef.instance.customComponent = (_b = this.httpErrorConfig.errorScreen) === null || _b === void 0 ? void 0 : _b.component;\n      }\n\n      appRef.attachView(this.componentRef.hostView);\n      renderer.appendChild(host, this.componentRef.hostView.rootNodes[0]);\n      const destroy$ = new Subject();\n      this.componentRef.instance.destroy$ = destroy$;\n      destroy$.subscribe(() => {\n        var _a;\n\n        (_a = this.componentRef) === null || _a === void 0 ? void 0 : _a.destroy();\n        this.componentRef = null;\n      });\n    }\n\n    canCreateCustomError(status) {\n      var _a, _b, _c, _d, _e, _f;\n\n      return !!(((_b = (_a = this.httpErrorConfig) === null || _a === void 0 ? void 0 : _a.errorScreen) === null || _b === void 0 ? void 0 : _b.component) && ((_d = (_c = this.httpErrorConfig) === null || _c === void 0 ? void 0 : _c.errorScreen) === null || _d === void 0 ? void 0 : _d.forWhichErrors) && ((_f = (_e = this.httpErrorConfig) === null || _e === void 0 ? void 0 : _e.errorScreen) === null || _f === void 0 ? void 0 : _f.forWhichErrors.indexOf(status)) > -1);\n    }\n\n  }\n\n  ErrorHandler.ɵfac = function ErrorHandler_Factory(t) {\n    return new (t || ErrorHandler)(i0.ɵɵinject(i0.Injector));\n  };\n\n  ErrorHandler.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ErrorHandler,\n    factory: ErrorHandler.ɵfac,\n    providedIn: 'root'\n  });\n  return ErrorHandler;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass NavItem {\n  constructor(props) {\n    props = Object.assign(Object.assign({}, props), {\n      visible: props.visible || (() => true)\n    });\n    Object.assign(this, props);\n  }\n\n}\n\nclass UserMenu extends NavItem {}\n\nconst NG_BOOTSTRAP_CONFIG_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: configureNgBootstrap,\n  deps: [NgbInputDatepickerConfig, NgbTypeaheadConfig],\n  multi: true\n}];\n\nfunction configureNgBootstrap(datepicker, typeahead) {\n  return () => {\n    datepicker.container = 'body';\n    typeahead.container = 'body';\n  };\n}\n\nconst THEME_SHARED_ROUTE_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: configureRoutes,\n  deps: [RoutesService],\n  multi: true\n}];\n\nfunction configureRoutes(routesService) {\n  return () => {\n    routesService.add([{\n      path: undefined,\n      name: \"AbpUiNavigation::Menu:Administration\"\n      /* Administration */\n      ,\n      iconClass: 'fa fa-wrench',\n      order: 100\n    }]);\n  };\n}\n\nclass AbstractMenuService {\n  constructor() {\n    this._items$ = new BehaviorSubject([]);\n  }\n\n  get items() {\n    return this._items$.value;\n  }\n\n  get items$() {\n    return this._items$.asObservable();\n  }\n\n  addItems(newItems) {\n    const items = [...this.items];\n    newItems.forEach(item => {\n      const index = items.findIndex(i => i.id === item.id);\n      const data = new this.baseClass(item);\n\n      if (index > -1) {\n        items[index] = data;\n        return;\n      }\n\n      items.push(data);\n    });\n    items.sort(this.sortItems);\n\n    this._items$.next(items);\n  }\n\n  removeItem(id) {\n    const index = this.items.findIndex(item => item.id === id);\n    if (index < 0) return;\n    const items = [...this.items.slice(0, index), ...this.items.slice(index + 1)];\n\n    this._items$.next(items);\n  }\n\n  patchItem(id, item) {\n    const index = this.items.findIndex(i => i.id === id);\n    if (index < 0) return;\n    const items = [...this.items];\n    items[index] = new this.baseClass(Object.assign(Object.assign({}, items[index]), item));\n    items.sort(this.sortItems);\n\n    this._items$.next(items);\n  }\n\n  sortItems(a, b) {\n    if (!a.order) return 1;\n    if (!b.order) return -1;\n    return a.order - b.order;\n  }\n\n}\n\nlet NavItemsService = /*#__PURE__*/(() => {\n  class NavItemsService extends AbstractMenuService {\n    constructor() {\n      super(...arguments);\n      this.baseClass = NavItem;\n    }\n\n  }\n\n  NavItemsService.ɵfac = /* @__PURE__ */function () {\n    let ɵNavItemsService_BaseFactory;\n    return function NavItemsService_Factory(t) {\n      return (ɵNavItemsService_BaseFactory || (ɵNavItemsService_BaseFactory = i0.ɵɵgetInheritedFactory(NavItemsService)))(t || NavItemsService);\n    };\n  }();\n\n  NavItemsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NavItemsService,\n    factory: NavItemsService.ɵfac,\n    providedIn: 'root'\n  });\n  return NavItemsService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PageAlertService = /*#__PURE__*/(() => {\n  class PageAlertService {\n    constructor() {\n      this.alerts = new InternalStore([]);\n      this.alerts$ = this.alerts.sliceState(state => state);\n    }\n\n    show(alert) {\n      var _a;\n\n      const newAlert = Object.assign(Object.assign({}, alert), {\n        dismissible: (_a = alert.dismissible) !== null && _a !== void 0 ? _a : true\n      });\n      this.alerts.set([newAlert, ...this.alerts.state]);\n    }\n\n    remove(index) {\n      const alerts = [...this.alerts.state];\n      alerts.splice(index, 1);\n      this.alerts.set(alerts);\n    }\n\n  }\n\n  PageAlertService.ɵfac = function PageAlertService_Factory(t) {\n    return new (t || PageAlertService)();\n  };\n\n  PageAlertService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PageAlertService,\n    factory: PageAlertService.ɵfac,\n    providedIn: 'root'\n  });\n  return PageAlertService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToasterService = /*#__PURE__*/(() => {\n  class ToasterService {\n    constructor(contentProjectionService) {\n      this.contentProjectionService = contentProjectionService;\n      this.toasts$ = new ReplaySubject(1);\n      this.lastId = -1;\n      this.toasts = [];\n      /**\r\n       * Removes the toast with given id.\r\n       * @param id ID of the toast to be removed.\r\n       */\n\n      this.remove = id => {\n        this.toasts = this.toasts.filter(toast => {\n          var _a;\n\n          return ((_a = toast.options) === null || _a === void 0 ? void 0 : _a.id) !== id;\n        });\n        this.toasts$.next(this.toasts);\n      };\n    }\n\n    setContainer() {\n      this.containerComponentRef = this.contentProjectionService.projectContent(PROJECTION_STRATEGY.AppendComponentToBody(ToastContainerComponent, {\n        toasts$: this.toasts$,\n        remove: this.remove\n      }));\n      this.containerComponentRef.changeDetectorRef.detectChanges();\n    }\n    /**\r\n     * Creates an info toast with given parameters.\r\n     * @param message Content of the toast\r\n     * @param title Title of the toast\r\n     * @param options Spesific style or structural options for individual toast\r\n     */\n\n\n    info(message, title, options) {\n      return this.show(message, title, 'info', options);\n    }\n    /**\r\n     * Creates a success toast with given parameters.\r\n     * @param message Content of the toast\r\n     * @param title Title of the toast\r\n     * @param options Spesific style or structural options for individual toast\r\n     */\n\n\n    success(message, title, options) {\n      return this.show(message, title, 'success', options);\n    }\n    /**\r\n     * Creates a warning toast with given parameters.\r\n     * @param message Content of the toast\r\n     * @param title Title of the toast\r\n     * @param options Spesific style or structural options for individual toast\r\n     */\n\n\n    warn(message, title, options) {\n      return this.show(message, title, 'warning', options);\n    }\n    /**\r\n     * Creates an error toast with given parameters.\r\n     * @param message Content of the toast\r\n     * @param title Title of the toast\r\n     * @param options Spesific style or structural options for individual toast\r\n     */\n\n\n    error(message, title, options) {\n      return this.show(message, title, 'error', options);\n    }\n    /**\r\n     * Creates a toast with given parameters.\r\n     * @param message Content of the toast\r\n     * @param title Title of the toast\r\n     * @param severity Sets color of the toast. \"success\", \"warning\" etc.\r\n     * @param options Spesific style or structural options for individual toast\r\n     */\n\n\n    show(message, title = undefined, severity = 'neutral', options = {}) {\n      if (!this.containerComponentRef) this.setContainer();\n      const id = ++this.lastId;\n      this.toasts.push({\n        message,\n        title,\n        severity,\n        options: Object.assign({\n          closable: true,\n          id\n        }, options)\n      });\n      this.toasts$.next(this.toasts);\n      return id;\n    }\n    /**\r\n     * Removes all open toasts at once.\r\n     */\n\n\n    clear(containerKey) {\n      this.toasts = !containerKey ? [] : this.toasts.filter(toast => {\n        var _a;\n\n        return ((_a = toast.options) === null || _a === void 0 ? void 0 : _a.containerKey) !== containerKey;\n      });\n      this.toasts$.next(this.toasts);\n    }\n\n  }\n\n  ToasterService.ɵfac = function ToasterService_Factory(t) {\n    return new (t || ToasterService)(i0.ɵɵinject(i2.ContentProjectionService));\n  };\n\n  ToasterService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ToasterService,\n    factory: ToasterService.ɵfac,\n    providedIn: 'root'\n  });\n  return ToasterService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet UserMenuService = /*#__PURE__*/(() => {\n  class UserMenuService extends AbstractMenuService {\n    constructor() {\n      super(...arguments);\n      this.baseClass = UserMenu;\n    }\n\n  }\n\n  UserMenuService.ɵfac = /* @__PURE__ */function () {\n    let ɵUserMenuService_BaseFactory;\n    return function UserMenuService_Factory(t) {\n      return (ɵUserMenuService_BaseFactory || (ɵUserMenuService_BaseFactory = i0.ɵɵgetInheritedFactory(UserMenuService)))(t || UserMenuService);\n    };\n  }();\n\n  UserMenuService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: UserMenuService,\n    factory: UserMenuService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserMenuService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar styles = `\n.is-invalid .form-control {\n  border-color: #dc3545;\n  border-style: solid !important;\n  padding-right: calc(1.5em + .75rem);\n  background-image: url(data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e);\n  background-repeat: no-repeat;\n  background-position: right calc(.375em + .1875rem) center;\n  background-size: calc(.75em + .375rem) calc(.75em + .375rem);\n}\n\n.is-invalid .invalid-feedback,\n.is-invalid + * .invalid-feedback {\n  display: block;\n}\n\n.data-tables-filter {\n  text-align: right;\n}\n\n[dir=rtl] .data-tables-filter {\n  text-align: left;\n}\n\n.pointer {\n  cursor: pointer;\n}\n\n.navbar .dropdown-submenu a::after {\n  transform: rotate(-90deg);\n  position: absolute;\n  right: 16px;\n  top: 18px;\n}\n\n.navbar .dropdown-menu {\n  min-width: 215px;\n}\n\n.datatable-scroll {\n  margin-bottom: 5px !important;\n  width: unset !important;\n}\n\n.ui-table-scrollable-body::-webkit-scrollbar {\n  height: 5px !important;\n  width: 5px !important;\n}\n\n.ui-table-scrollable-body::-webkit-scrollbar-track {\n  background: #ddd;\n}\n\n.ui-table-scrollable-body::-webkit-scrollbar-thumb {\n  background: #8a8686;\n}\n\n.abp-ellipsis-inline {\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.abp-ellipsis {\n  overflow: hidden !important;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.ui-widget-overlay {\n  z-index: 1000;\n}\n\n.color-white {\n  color: #FFF !important;\n}\n\n.custom-checkbox > label {\n  cursor: pointer;\n}\n\n/* <animations */\n\n.fade-in-top {\n  animation: fadeInTop 0.2s ease-in-out;\n}\n\n.fade-out-top {\n  animation: fadeOutTop 0.2s ease-in-out;\n}\n\n.abp-collapsed-height {\n  -moz-transition: max-height linear 0.35s;\n  -ms-transition: max-height linear 0.35s;\n  -o-transition: max-height linear 0.35s;\n  -webkit-transition: max-height linear 0.35s;\n  overflow:hidden;\n  transition:max-height 0.35s linear;\n  height:auto;\n  max-height: 0;\n}\n\n.abp-mh-25 {\n  max-height: 25vh;\n}\n\n.abp-mh-50 {\n  transition:max-height 0.65s linear;\n  max-height: 50vh;\n}\n\n.abp-mh-75 {\n  transition:max-height 0.85s linear;\n  max-height: 75vh;\n}\n\n.abp-mh-100 {\n  transition:max-height 1s linear;\n  max-height: 100vh;\n}\n\n[class^=\"sorting\"] {\n  opacity: .3;\n  cursor: pointer;\n}\n[class^=\"sorting\"]:before {\n  right: 0.5rem;\n  content: \"↑\";\n}\n[class^=\"sorting\"]:after {\n  right: 0.5rem;\n  content: \"↓\";\n}\n\n.sorting_desc {\n  opacity: 1;\n}\n.sorting_desc:before {\n  opacity: .3;\n}\n\n.sorting_asc {\n  opacity: 1;\n}\n.sorting_asc:after {\n  opacity: .3;\n}\n.ngx-datatable.material {\n  box-shadow: none;\n}\nngb-typeahead-window, ngb-typeahead-window.dropdown-menu {\n  max-height: 25em;\n  overflow-y: scroll !important;\n  z-index: 1050;\n}\n\n@keyframes fadeInTop {\n  from {\n    transform: translateY(-5px);\n    opacity: 0;\n  }\n\n  to {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n}\n\n@keyframes fadeOutTop {\n  to {\n    transform: translateY(-5px);\n    opacity: 0;\n  }\n}\n\n/* </animations */\n.ngb-dp-body {\n  z-index: 1055 !important;\n}\n`;\nconst THEME_SHARED_APPEND_CONTENT = new InjectionToken('THEME_SHARED_APPEND_CONTENT', {\n  providedIn: 'root',\n  factory: () => {\n    const domInsertion = inject(DomInsertionService);\n    domInsertion.insertContent(CONTENT_STRATEGY.AppendStyleToHead(styles));\n  }\n});\n\nfunction isNumber(value) {\n  return !isNaN(toInteger(value));\n}\n\nfunction toInteger(value) {\n  return parseInt(`${value}`, 10);\n}\n\nlet DateParserFormatter = /*#__PURE__*/(() => {\n  class DateParserFormatter extends NgbDateParserFormatter {\n    constructor(configState, locale) {\n      super();\n      this.configState = configState;\n      this.locale = locale;\n    }\n\n    parse(value) {\n      if (value) {\n        const dateParts = value.trim().split('-'); // TODO: CHANGED\n\n        if (dateParts.length === 1 && isNumber(dateParts[0])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: -1,\n            day: -1\n          };\n        } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: toInteger(dateParts[1]),\n            day: -1\n          };\n        } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: toInteger(dateParts[1]),\n            day: toInteger(dateParts[2])\n          };\n        }\n      }\n\n      return null;\n    }\n\n    format(date) {\n      var _a, _b;\n\n      if (!date) return '';\n      const localization = this.configState.getOne('localization');\n      const dateFormat = ((_b = (_a = localization.currentCulture) === null || _a === void 0 ? void 0 : _a.dateTimeFormat) === null || _b === void 0 ? void 0 : _b.shortDatePattern) || 'yyyy-MM-dd';\n      return formatDate(new Date(date.year, date.month - 1, date.day), dateFormat, this.locale);\n    }\n\n  }\n\n  DateParserFormatter.ɵfac = function DateParserFormatter_Factory(t) {\n    return new (t || DateParserFormatter)(i0.ɵɵinject(i2.ConfigStateService), i0.ɵɵinject(LOCALE_ID));\n  };\n\n  DateParserFormatter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DateParserFormatter,\n    factory: DateParserFormatter.ɵfac\n  });\n  return DateParserFormatter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst declarationsWithExports = [BreadcrumbComponent, BreadcrumbItemsComponent, ButtonComponent, ConfirmationComponent, LoaderBarComponent, LoadingComponent, ModalComponent, ToastComponent, ToastContainerComponent, NgxDatatableDefaultDirective, NgxDatatableListDirective, LoadingDirective, ModalCloseDirective];\nlet BaseThemeSharedModule = /*#__PURE__*/(() => {\n  class BaseThemeSharedModule {}\n\n  BaseThemeSharedModule.ɵfac = function BaseThemeSharedModule_Factory(t) {\n    return new (t || BaseThemeSharedModule)();\n  };\n\n  BaseThemeSharedModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BaseThemeSharedModule\n  });\n  BaseThemeSharedModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DatePipe],\n    imports: [[CoreModule, NgxDatatableModule, NgxValidateCoreModule, NgbPaginationModule, EllipsisModule], NgxDatatableModule, EllipsisModule]\n  });\n  return BaseThemeSharedModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ThemeSharedModule = /*#__PURE__*/(() => {\n  class ThemeSharedModule {\n    static forRoot({\n      httpErrorConfig,\n      validation = {},\n      confirmationIcons = {}\n    } = {}) {\n      return {\n        ngModule: ThemeSharedModule,\n        providers: [{\n          provide: APP_INITIALIZER,\n          multi: true,\n          deps: [ErrorHandler],\n          useFactory: noop\n        }, THEME_SHARED_ROUTE_PROVIDERS, {\n          provide: APP_INITIALIZER,\n          multi: true,\n          deps: [THEME_SHARED_APPEND_CONTENT],\n          useFactory: noop\n        }, {\n          provide: HTTP_ERROR_CONFIG,\n          useValue: httpErrorConfig\n        }, {\n          provide: 'HTTP_ERROR_CONFIG',\n          useFactory: httpErrorConfigFactory,\n          deps: [HTTP_ERROR_CONFIG]\n        }, {\n          provide: NgbDateParserFormatter,\n          useClass: DateParserFormatter\n        }, NG_BOOTSTRAP_CONFIG_PROVIDERS, {\n          provide: VALIDATION_BLUEPRINTS,\n          useValue: Object.assign(Object.assign({}, DEFAULT_VALIDATION_BLUEPRINTS), validation.blueprints || {})\n        }, {\n          provide: VALIDATION_MAP_ERRORS_FN,\n          useValue: validation.mapErrorsFn || defaultMapErrorsFn\n        }, {\n          provide: VALIDATION_VALIDATE_ON_SUBMIT,\n          useValue: validation.validateOnSubmit\n        }, DocumentDirHandlerService, {\n          provide: APP_INITIALIZER,\n          useFactory: noop,\n          multi: true,\n          deps: [DocumentDirHandlerService]\n        }, {\n          provide: CONFIRMATION_ICONS,\n          useValue: Object.assign(Object.assign({}, DEFAULT_CONFIRMATION_ICONS), confirmationIcons || {})\n        }]\n      };\n    }\n\n  }\n\n  ThemeSharedModule.ɵfac = function ThemeSharedModule_Factory(t) {\n    return new (t || ThemeSharedModule)();\n  };\n\n  ThemeSharedModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ThemeSharedModule\n  });\n  ThemeSharedModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[BaseThemeSharedModule], BaseThemeSharedModule]\n  });\n  return ThemeSharedModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst {\n  minLength,\n  maxLength\n} = Validators;\n\nfunction getPasswordValidators(injector) {\n  const getRule = getRuleFn(injector);\n  const passwordRulesArr = [];\n  let requiredLength = 1;\n\n  if (getRule('RequireDigit') === 'true') {\n    passwordRulesArr.push('number');\n  }\n\n  if (getRule('RequireLowercase') === 'true') {\n    passwordRulesArr.push('small');\n  }\n\n  if (getRule('RequireUppercase') === 'true') {\n    passwordRulesArr.push('capital');\n  }\n\n  if (getRule('RequireNonAlphanumeric') === 'true') {\n    passwordRulesArr.push('special');\n  }\n\n  if (Number.isInteger(+getRule('RequiredLength'))) {\n    requiredLength = +getRule('RequiredLength');\n  }\n\n  const passwordValidators = passwordRulesArr.map(rule => validatePassword(rule));\n  return [...passwordValidators, minLength(requiredLength), maxLength(128)];\n}\n\nfunction getRuleFn(injector) {\n  const configState = injector.get(ConfigStateService);\n  return key => {\n    const passwordRules = configState.getSettings('Identity.Password');\n    return (passwordRules[`Abp.Identity.Password.${key}`] || '').toLowerCase();\n  };\n}\n\nconst errorMessageMap = {\n  small: 'passwordRequiresLower',\n  capital: 'passwordRequiresUpper',\n  number: 'passwordRequiresDigit',\n  special: 'passwordRequiresNonAlphanumeric'\n};\n\nfunction validatePassword(shouldContain) {\n  return control => {\n    if (!control.value) return null;\n    const value = normalizeDiacritics(control.value);\n    const regexMap = {\n      small: /.*[a-z].*/,\n      capital: /.*[A-Z].*/,\n      number: /.*[0-9].*/,\n      special: /.*[^0-9a-zA-Z].*/\n    };\n    const regex = regexMap[shouldContain];\n    const isValid = regex.test(value);\n\n    if (isValid) {\n      return null;\n    }\n\n    const error = errorMessageMap[shouldContain];\n    return {\n      [error]: true\n    };\n  };\n}\n/*\r\n * Public API Surface of theme-shared\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { BaseThemeSharedModule, BreadcrumbComponent, BreadcrumbItemsComponent, ButtonComponent, Confirmation, ConfirmationComponent, ConfirmationService, DEFAULT_ERROR_LOCALIZATIONS, DEFAULT_ERROR_MESSAGES, DEFAULT_VALIDATION_BLUEPRINTS, DateParserFormatter, DocumentDirHandlerService, EllipsisDirective, EllipsisModule, ErrorHandler, HTTP_ERROR_CONFIG, HTTP_ERROR_HANDLER, HttpErrorWrapperComponent, LoaderBarComponent, LoadingComponent, LoadingDirective, ModalCloseDirective, ModalComponent, ModalRefService, NGX_DATATABLE_MESSAGES, NG_BOOTSTRAP_CONFIG_PROVIDERS, NavItem, NavItemsService, NgxDatatableDefaultDirective, NgxDatatableListDirective, PageAlertService, SUPPRESS_UNSAVED_CHANGES_WARNING, THEME_SHARED_APPEND_CONTENT, THEME_SHARED_ROUTE_PROVIDERS, ThemeSharedModule, ToastComponent, ToastContainerComponent, ToasterService, UserMenu, UserMenuService, bounceIn, collapse, collapseLinearWithMargin, collapseWithMargin, collapseX, collapseY, collapseYWithMargin, configureNgBootstrap, configureRoutes, defaultNgxDatatableMessages, dialogAnimation, expandX, expandY, expandYWithMargin, fadeAnimation, fadeIn, fadeInDown, fadeInLeft, fadeInRight, fadeInUp, fadeOut, fadeOutDown, fadeOutLeft, fadeOutRight, fadeOutUp, getPasswordValidators, httpErrorConfigFactory, slideFromBottom, toastInOut, validatePassword }; //# sourceMappingURL=abp-ng.theme.shared.mjs.map","map":null,"metadata":{},"sourceType":"module"}