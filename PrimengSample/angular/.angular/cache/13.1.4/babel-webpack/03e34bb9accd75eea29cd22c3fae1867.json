{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, HostBinding, EventEmitter, Component, Output, NgModule } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport * as i1 from '@abp/ng.core';\nimport { CoreModule } from '@abp/ng.core';\nimport * as i2 from '@abp/ng.feature-management/proxy';\nimport * as i3 from '@abp/ng.theme.shared';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport * as i4 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\nimport * as i5 from '@angular/common';\nimport * as i6 from '@angular/forms';\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"AbpFeatureManagement::Features\"));\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_1_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 22);\n    i0.ɵɵelementStart(2, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_1_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const feature_r15 = i0.ɵɵnextContext().$implicit;\n      return feature_r15.value = $event;\n    })(\"ngModelChange\", function FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_1_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const feature_r15 = i0.ɵɵnextContext().$implicit;\n      const ctx_r25 = i0.ɵɵnextContext(5);\n      return ctx_r25.onCheckboxClick($event, feature_r15);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 24);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_1_ng_container_5_Template, 1, 0, \"ng-container\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const feature_r15 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵnextContext(3);\n\n    const _r9 = i0.ɵɵreference(6);\n\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", feature_r15.name)(\"ngModel\", feature_r15.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"htmlFor\", feature_r15.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(feature_r15.displayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r9)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c0, feature_r15.description));\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_2_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 26);\n    i0.ɵɵelementStart(2, \"label\", 27);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_2_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const feature_r15 = i0.ɵɵnextContext().$implicit;\n      return feature_r15.value = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_2_ng_container_5_Template, 1, 0, \"ng-container\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const feature_r15 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵnextContext(3);\n\n    const _r9 = i0.ɵɵreference(6);\n\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"htmlFor\", feature_r15.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(feature_r15.displayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", feature_r15.name)(\"ngModel\", feature_r15.value)(\"abpFeatureManagementFreeText\", feature_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r9)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c0, feature_r15.description));\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_3_ng_container_1_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r36 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r36.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, (item_r36.displayText == null ? null : item_r36.displayText.resourceName) + \"::\" + (item_r36.displayText == null ? null : item_r36.displayText.name)), \" \");\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_3_ng_container_1_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 26);\n    i0.ɵɵelementStart(2, \"label\", 27);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_3_ng_container_1_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r39);\n      const feature_r15 = i0.ɵɵnextContext(2).$implicit;\n      return feature_r15.value = $event;\n    });\n    i0.ɵɵtemplate(5, FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_3_ng_container_1_option_5_Template, 3, 4, \"option\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_3_ng_container_1_ng_container_6_Template, 1, 0, \"ng-container\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const feature_r15 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵnextContext(3);\n\n    const _r9 = i0.ɵɵreference(6);\n\n    const ctx_r33 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"htmlFor\", feature_r15.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(feature_r15.displayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", feature_r15.name)(\"ngModel\", feature_r15.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", feature_r15.valueType.itemSource == null ? null : feature_r15.valueType.itemSource.items)(\"ngForTrackBy\", ctx_r33.track.by(\"value\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r9)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(8, _c0, feature_r15.description));\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_3_ng_container_1_Template, 7, 10, \"ng-container\", 29);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const feature_r15 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", feature_r15.valueType.itemSource == null ? null : feature_r15.valueType.itemSource.items == null ? null : feature_r15.valueType.itemSource.items.length);\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const feature_r15 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(feature_r15.displayName);\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵlistener(\"keyup.enter\", function FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_Template_div_keyup_enter_0_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r43 = i0.ɵɵnextContext(5);\n      return ctx_r43.save();\n    });\n    i0.ɵɵtemplate(1, FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_1_Template, 6, 8, \"ng-container\", 20);\n    i0.ɵɵtemplate(2, FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_2_Template, 6, 9, \"ng-container\", 20);\n    i0.ɵɵtemplate(3, FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_3_Template, 2, 1, \"ng-container\", 20);\n    i0.ɵɵtemplate(4, FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_ng_container_4_Template, 2, 1, \"ng-container\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const feature_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"ngStyle\", feature_r15.style)(\"ngSwitch\", feature_r15.valueType == null ? null : feature_r15.valueType.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r14.valueTypes.ToggleStringValueType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r14.valueTypes.FreeTextStringValueType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r14.valueTypes.SelectionStringValueType);\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"hr\", 17);\n    i0.ɵɵtemplate(3, FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_div_3_Template, 5, 5, \"div\", 18);\n  }\n\n  if (rf & 2) {\n    const group_r12 = i0.ɵɵnextContext().$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r13.selectedGroupDisplayName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r13.features[group_r12.name])(\"ngForTrackBy\", ctx_r13.track.by(\"id\"));\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 14);\n    i0.ɵɵelementStart(1, \"a\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_ng_template_3_Template, 4, 3, \"ng-template\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngbNavItem\", group_r12.displayName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(group_r12.displayName);\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_ng_template_5_small_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const description_r46 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(description_r46);\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FeatureManagementComponent_abp_modal_0_ng_template_3_ng_template_5_small_0_Template, 2, 1, \"small\", 33);\n  }\n\n  if (rf & 2) {\n    const description_r46 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", description_r46);\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"AbpFeatureManagement::NoFeatureFoundMessage\"), \" \");\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"ul\", 7, 8);\n    i0.ɵɵlistener(\"activeIdChange\", function FeatureManagementComponent_abp_modal_0_ng_template_3_Template_ul_activeIdChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r50);\n      const ctx_r49 = i0.ɵɵnextContext(2);\n      return ctx_r49.selectedGroupDisplayName = $event;\n    });\n    i0.ɵɵtemplate(4, FeatureManagementComponent_abp_modal_0_ng_template_3_li_4_Template, 4, 2, \"li\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, FeatureManagementComponent_abp_modal_0_ng_template_3_ng_template_5_Template, 1, 1, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(7, \"div\", 11);\n    i0.ɵɵelement(8, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, FeatureManagementComponent_abp_modal_0_ng_template_3_div_9_Template, 3, 3, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r7 = i0.ɵɵreference(3);\n\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"activeId\", ctx_r4.selectedGroupDisplayName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.groups)(\"ngForTrackBy\", ctx_r4.track.by(\"name\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngbNavOutlet\", _r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.groups.length);\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_5_abp_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r53 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"abp-button\", 38);\n    i0.ɵɵlistener(\"click\", function FeatureManagementComponent_abp_modal_0_ng_template_5_abp_button_3_Template_abp_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r53);\n      const ctx_r52 = i0.ɵɵnextContext(3);\n      return ctx_r52.save();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r51 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r51.modalBusy);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"AbpFeatureManagement::Save\"), \" \");\n  }\n}\n\nfunction FeatureManagementComponent_abp_modal_0_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"abpLocalization\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, FeatureManagementComponent_abp_modal_0_ng_template_5_abp_button_3_Template, 3, 4, \"abp-button\", 37);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"AbpFeatureManagement::Cancel\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.groups.length);\n  }\n}\n\nconst _c1 = function () {\n  return {\n    size: \"lg\"\n  };\n};\n\nfunction FeatureManagementComponent_abp_modal_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r55 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"abp-modal\", 1);\n    i0.ɵɵlistener(\"visibleChange\", function FeatureManagementComponent_abp_modal_0_Template_abp_modal_visibleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return ctx_r54.visible = $event;\n    });\n    i0.ɵɵtemplate(1, FeatureManagementComponent_abp_modal_0_ng_template_1_Template, 3, 3, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(3, FeatureManagementComponent_abp_modal_0_ng_template_3_Template, 10, 5, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, FeatureManagementComponent_abp_modal_0_ng_template_5_Template, 4, 4, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"visible\", ctx_r0.visible)(\"busy\", ctx_r0.modalBusy)(\"options\", i0.ɵɵpureFunction0(3, _c1));\n  }\n}\n\nconst INPUT_TYPES = {\n  numeric: 'number',\n  default: 'text'\n};\nlet FreeTextInputDirective = /*#__PURE__*/(() => {\n  class FreeTextInputDirective {\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set feature(val) {\n      this._feature = val;\n      this.setInputType();\n    }\n\n    get feature() {\n      return this._feature;\n    }\n\n    setInputType() {\n      var _a, _b, _c, _d;\n\n      const validatorType = (_c = (_b = (_a = this.feature) === null || _a === void 0 ? void 0 : _a.valueType) === null || _b === void 0 ? void 0 : _b.validator) === null || _c === void 0 ? void 0 : _c.name.toLowerCase();\n      this.type = (_d = INPUT_TYPES[validatorType]) !== null && _d !== void 0 ? _d : INPUT_TYPES.default;\n    }\n\n  }\n\n  FreeTextInputDirective.ɵfac = function FreeTextInputDirective_Factory(t) {\n    return new (t || FreeTextInputDirective)();\n  };\n\n  FreeTextInputDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FreeTextInputDirective,\n    selectors: [[\"input\", \"abpFeatureManagementFreeText\", \"\"]],\n    hostVars: 1,\n    hostBindings: function FreeTextInputDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      feature: [\"abpFeatureManagementFreeText\", \"feature\"]\n    },\n    exportAs: [\"inputAbpFeatureManagementFreeText\"]\n  });\n  return FreeTextInputDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ValueTypes = /*#__PURE__*/(() => {\n  (function (ValueTypes) {\n    ValueTypes[\"ToggleStringValueType\"] = \"ToggleStringValueType\";\n    ValueTypes[\"FreeTextStringValueType\"] = \"FreeTextStringValueType\";\n    ValueTypes[\"SelectionStringValueType\"] = \"SelectionStringValueType\";\n  })(ValueTypes || (ValueTypes = {}));\n\n  return ValueTypes;\n})();\nlet FeatureManagementComponent = /*#__PURE__*/(() => {\n  class FeatureManagementComponent {\n    constructor(track, service, configState) {\n      this.track = track;\n      this.service = service;\n      this.configState = configState;\n      this.groups = [];\n      this.valueTypes = ValueTypes;\n      this.visibleChange = new EventEmitter();\n      this.modalBusy = false;\n    }\n\n    get visible() {\n      return this._visible;\n    }\n\n    set visible(value) {\n      if (this._visible === value) return;\n      this._visible = value;\n      this.visibleChange.emit(value);\n      if (value) this.openModal();\n    }\n\n    openModal() {\n      if (!this.providerName) {\n        throw new Error('providerName is required.');\n      }\n\n      this.getFeatures();\n    }\n\n    getFeatures() {\n      this.service.get(this.providerName, this.providerKey).subscribe(res => {\n        var _a;\n\n        if (!((_a = res.groups) === null || _a === void 0 ? void 0 : _a.length)) return;\n        this.groups = res.groups.map(({\n          name,\n          displayName\n        }) => ({\n          name,\n          displayName\n        }));\n        this.selectedGroupDisplayName = this.groups[0].displayName;\n        this.features = res.groups.reduce((acc, val) => Object.assign(Object.assign({}, acc), {\n          [val.name]: mapFeatures(val.features, document.body.dir)\n        }), {});\n      });\n    }\n\n    save() {\n      if (this.modalBusy) return;\n      const changedFeatures = [];\n      Object.keys(this.features).forEach(key => {\n        this.features[key].forEach(feature => {\n          if (feature.value !== feature.initialValue) changedFeatures.push({\n            name: feature.name,\n            value: `${feature.value}`\n          });\n        });\n      });\n\n      if (!changedFeatures.length) {\n        this.visible = false;\n        return;\n      }\n\n      this.modalBusy = true;\n      this.service.update(this.providerName, this.providerKey, {\n        features: changedFeatures\n      }).pipe(finalize(() => this.modalBusy = false)).subscribe(() => {\n        this.visible = false;\n\n        if (!this.providerKey) {\n          // to refresh host's features\n          this.configState.refreshAppState().subscribe();\n        }\n      });\n    }\n\n    onCheckboxClick(val, feature) {\n      if (val) {\n        this.checkToggleAncestors(feature);\n      } else {\n        this.uncheckToggleDescendants(feature);\n      }\n    }\n\n    uncheckToggleDescendants(feature) {\n      this.findAllDescendantsOfByType(feature, ValueTypes.ToggleStringValueType).forEach(node => this.setFeatureValue(node, false));\n    }\n\n    checkToggleAncestors(feature) {\n      this.findAllAncestorsOfByType(feature, ValueTypes.ToggleStringValueType).forEach(node => this.setFeatureValue(node, true));\n    }\n\n    findAllAncestorsOfByType(feature, type) {\n      let parent = this.findParentByType(feature, type);\n      const ancestors = [];\n\n      while (parent) {\n        ancestors.push(parent);\n        parent = this.findParentByType(parent, type);\n      }\n\n      return ancestors;\n    }\n\n    findAllDescendantsOfByType(feature, type) {\n      const descendants = [];\n      const queue = [feature];\n\n      while (queue.length) {\n        const node = queue.pop();\n        const newDescendants = this.findChildrenByType(node, type);\n        descendants.push(...newDescendants);\n        queue.push(...newDescendants);\n      }\n\n      return descendants;\n    }\n\n    findParentByType(feature, type) {\n      return this.getCurrentGroup().find(f => f.valueType.name === type && f.name === feature.parentName);\n    }\n\n    findChildrenByType(feature, type) {\n      return this.getCurrentGroup().filter(f => f.valueType.name === type && f.parentName === feature.name);\n    }\n\n    getCurrentGroup() {\n      var _a;\n\n      return (_a = this.features[this.selectedGroupDisplayName]) !== null && _a !== void 0 ? _a : [];\n    }\n\n    setFeatureValue(feature, val) {\n      feature.value = val;\n    }\n\n  }\n\n  FeatureManagementComponent.ɵfac = function FeatureManagementComponent_Factory(t) {\n    return new (t || FeatureManagementComponent)(i0.ɵɵdirectiveInject(i1.TrackByService), i0.ɵɵdirectiveInject(i2.FeaturesService), i0.ɵɵdirectiveInject(i1.ConfigStateService));\n  };\n\n  FeatureManagementComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FeatureManagementComponent,\n    selectors: [[\"abp-feature-management\"]],\n    inputs: {\n      providerKey: \"providerKey\",\n      providerName: \"providerName\",\n      visible: \"visible\"\n    },\n    outputs: {\n      visibleChange: \"visibleChange\"\n    },\n    exportAs: [\"abpFeatureManagement\"],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"visible\", \"busy\", \"options\", \"visibleChange\", 4, \"ngIf\"], [3, \"visible\", \"busy\", \"options\", \"visibleChange\"], [\"abpHeader\", \"\"], [\"abpBody\", \"\"], [\"abpFooter\", \"\"], [1, \"row\"], [1, \"col-md-4\"], [\"ngbNav\", \"\", \"orientation\", \"vertical\", 1, \"nav-pills\", 3, \"activeId\", \"activeIdChange\"], [\"nav\", \"ngbNav\"], [3, \"ngbNavItem\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"descTmp\", \"\"], [1, \"col-md-8\"], [3, \"ngbNavOutlet\"], [\"class\", \"mx-3\", 4, \"ngIf\"], [3, \"ngbNavItem\"], [\"ngbNavLink\", \"\"], [\"ngbNavContent\", \"\"], [1, \"mt-2\", \"mb-3\"], [\"class\", \"mt-2\", 3, \"ngStyle\", \"ngSwitch\", \"keyup.enter\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"mt-2\", 3, \"ngStyle\", \"ngSwitch\", \"keyup.enter\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [1, \"form-check\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"id\", \"ngModel\", \"ngModelChange\"], [1, \"form-check-label\", 3, \"htmlFor\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"mb-3\", \"form-group\"], [1, \"form-label\", 3, \"htmlFor\"], [\"type\", \"text\", 1, \"form-control\", 3, \"id\", \"ngModel\", \"abpFeatureManagementFreeText\", \"ngModelChange\"], [4, \"ngIf\"], [1, \"form-select\", 3, \"id\", \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngValue\"], [\"class\", \"d-block form-text text-muted\", 4, \"ngIf\"], [1, \"d-block\", \"form-text\", \"text-muted\"], [1, \"mx-3\"], [\"abpClose\", \"\", \"type\", \"button\", 1, \"btn\", \"btn-secondary\"], [\"iconClass\", \"fa fa-check\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"iconClass\", \"fa fa-check\", 3, \"disabled\", \"click\"]],\n    template: function FeatureManagementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, FeatureManagementComponent_abp_modal_0_Template, 7, 4, \"abp-modal\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.visible);\n      }\n    },\n    directives: [i3.ModalComponent, i4.NgbNavOutlet, i3.ButtonComponent, i5.NgIf, i4.NgbNav, i5.NgForOf, i4.NgbNavItem, i4.NgbNavLink, i4.NgbNavContent, i5.NgStyle, i5.NgSwitch, i5.NgSwitchCase, i6.CheckboxControlValueAccessor, i6.NgControlStatus, i6.NgModel, i5.NgTemplateOutlet, i6.DefaultValueAccessor, FreeTextInputDirective, i6.SelectControlValueAccessor, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i5.NgSwitchDefault, i3.ModalCloseDirective],\n    pipes: [i1.LocalizationPipe],\n    encapsulation: 2\n  });\n  return FeatureManagementComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction mapFeatures(features, dir) {\n  const margin = `margin-${dir === 'rtl' ? 'right' : 'left'}.px`;\n  return features.map(feature => {\n    var _a;\n\n    const value = ((_a = feature.valueType) === null || _a === void 0 ? void 0 : _a.name) === ValueTypes.ToggleStringValueType ? (feature.value || '').toLowerCase() === 'true' : feature.value;\n    return Object.assign(Object.assign({}, feature), {\n      value,\n      initialValue: value,\n      style: {\n        [margin]: feature.depth * 20\n      }\n    });\n  });\n}\n\nconst exported = [FeatureManagementComponent, FreeTextInputDirective];\nlet FeatureManagementModule = /*#__PURE__*/(() => {\n  class FeatureManagementModule {}\n\n  FeatureManagementModule.ɵfac = function FeatureManagementModule_Factory(t) {\n    return new (t || FeatureManagementModule)();\n  };\n\n  FeatureManagementModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FeatureManagementModule\n  });\n  FeatureManagementModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CoreModule, ThemeSharedModule, NgbNavModule]]\n  });\n  return FeatureManagementModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { FeatureManagementComponent, FeatureManagementModule, FreeTextInputDirective, INPUT_TYPES }; //# sourceMappingURL=abp-ng.feature-management.mjs.map","map":null,"metadata":{},"sourceType":"module"}