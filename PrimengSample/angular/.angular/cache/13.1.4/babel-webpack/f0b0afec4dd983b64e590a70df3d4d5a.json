{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport * as i1 from '@abp/ng.core';\nlet IdentityRoleService = /*#__PURE__*/(() => {\n  class IdentityRoleService {\n    constructor(restService) {\n      this.restService = restService;\n      this.apiName = 'AbpIdentity';\n\n      this.create = input => this.restService.request({\n        method: 'POST',\n        url: '/api/identity/roles',\n        body: input\n      }, {\n        apiName: this.apiName\n      });\n\n      this.delete = id => this.restService.request({\n        method: 'DELETE',\n        url: `/api/identity/roles/${id}`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.get = id => this.restService.request({\n        method: 'GET',\n        url: `/api/identity/roles/${id}`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.getAllList = () => this.restService.request({\n        method: 'GET',\n        url: '/api/identity/roles/all'\n      }, {\n        apiName: this.apiName\n      });\n\n      this.getList = input => this.restService.request({\n        method: 'GET',\n        url: '/api/identity/roles',\n        params: {\n          filter: input.filter,\n          sorting: input.sorting,\n          skipCount: input.skipCount,\n          maxResultCount: input.maxResultCount\n        }\n      }, {\n        apiName: this.apiName\n      });\n\n      this.update = (id, input) => this.restService.request({\n        method: 'PUT',\n        url: `/api/identity/roles/${id}`,\n        body: input\n      }, {\n        apiName: this.apiName\n      });\n    }\n\n  }\n\n  IdentityRoleService.ɵfac = function IdentityRoleService_Factory(t) {\n    return new (t || IdentityRoleService)(i0.ɵɵinject(i1.RestService));\n  };\n\n  IdentityRoleService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: IdentityRoleService,\n    factory: IdentityRoleService.ɵfac,\n    providedIn: 'root'\n  });\n  return IdentityRoleService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IdentityUserLookupService = /*#__PURE__*/(() => {\n  class IdentityUserLookupService {\n    constructor(restService) {\n      this.restService = restService;\n      this.apiName = 'AbpIdentity';\n\n      this.findById = id => this.restService.request({\n        method: 'GET',\n        url: `/api/identity/users/lookup/${id}`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.findByUserName = userName => this.restService.request({\n        method: 'GET',\n        url: `/api/identity/users/lookup/by-username/${userName}`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.getCount = input => this.restService.request({\n        method: 'GET',\n        url: '/api/identity/users/lookup/count',\n        params: {\n          filter: input.filter\n        }\n      }, {\n        apiName: this.apiName\n      });\n\n      this.search = input => this.restService.request({\n        method: 'GET',\n        url: '/api/identity/users/lookup/search',\n        params: {\n          filter: input.filter,\n          sorting: input.sorting,\n          skipCount: input.skipCount,\n          maxResultCount: input.maxResultCount\n        }\n      }, {\n        apiName: this.apiName\n      });\n    }\n\n  }\n\n  IdentityUserLookupService.ɵfac = function IdentityUserLookupService_Factory(t) {\n    return new (t || IdentityUserLookupService)(i0.ɵɵinject(i1.RestService));\n  };\n\n  IdentityUserLookupService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: IdentityUserLookupService,\n    factory: IdentityUserLookupService.ɵfac,\n    providedIn: 'root'\n  });\n  return IdentityUserLookupService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet IdentityUserService = /*#__PURE__*/(() => {\n  class IdentityUserService {\n    constructor(restService) {\n      this.restService = restService;\n      this.apiName = 'AbpIdentity';\n\n      this.create = input => this.restService.request({\n        method: 'POST',\n        url: '/api/identity/users',\n        body: input\n      }, {\n        apiName: this.apiName\n      });\n\n      this.delete = id => this.restService.request({\n        method: 'DELETE',\n        url: `/api/identity/users/${id}`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.findByEmail = email => this.restService.request({\n        method: 'GET',\n        url: `/api/identity/users/by-email/${email}`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.findByUsername = userName => this.restService.request({\n        method: 'GET',\n        url: `/api/identity/users/by-username/${userName}`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.get = id => this.restService.request({\n        method: 'GET',\n        url: `/api/identity/users/${id}`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.getAssignableRoles = () => this.restService.request({\n        method: 'GET',\n        url: '/api/identity/users/assignable-roles'\n      }, {\n        apiName: this.apiName\n      });\n\n      this.getList = input => this.restService.request({\n        method: 'GET',\n        url: '/api/identity/users',\n        params: {\n          filter: input.filter,\n          sorting: input.sorting,\n          skipCount: input.skipCount,\n          maxResultCount: input.maxResultCount\n        }\n      }, {\n        apiName: this.apiName\n      });\n\n      this.getRoles = id => this.restService.request({\n        method: 'GET',\n        url: `/api/identity/users/${id}/roles`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.update = (id, input) => this.restService.request({\n        method: 'PUT',\n        url: `/api/identity/users/${id}`,\n        body: input\n      }, {\n        apiName: this.apiName\n      });\n\n      this.updateRoles = (id, input) => this.restService.request({\n        method: 'PUT',\n        url: `/api/identity/users/${id}/roles`,\n        body: input\n      }, {\n        apiName: this.apiName\n      });\n    }\n\n  }\n\n  IdentityUserService.ɵfac = function IdentityUserService_Factory(t) {\n    return new (t || IdentityUserService)(i0.ɵɵinject(i1.RestService));\n  };\n\n  IdentityUserService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: IdentityUserService,\n    factory: IdentityUserService.ɵfac,\n    providedIn: 'root'\n  });\n  return IdentityUserService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { IdentityRoleService, IdentityUserLookupService, IdentityUserService }; //# sourceMappingURL=abp-ng.identity-proxy.mjs.map","map":null,"metadata":{},"sourceType":"module"}