{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport * as i1 from '@abp/ng.core';\nlet TenantService = /*#__PURE__*/(() => {\n  class TenantService {\n    constructor(restService) {\n      this.restService = restService;\n      this.apiName = 'AbpTenantManagement';\n\n      this.create = input => this.restService.request({\n        method: 'POST',\n        url: '/api/multi-tenancy/tenants',\n        body: input\n      }, {\n        apiName: this.apiName\n      });\n\n      this.delete = id => this.restService.request({\n        method: 'DELETE',\n        url: `/api/multi-tenancy/tenants/${id}`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.deleteDefaultConnectionString = id => this.restService.request({\n        method: 'DELETE',\n        url: `/api/multi-tenancy/tenants/${id}/default-connection-string`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.get = id => this.restService.request({\n        method: 'GET',\n        url: `/api/multi-tenancy/tenants/${id}`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.getDefaultConnectionString = id => this.restService.request({\n        method: 'GET',\n        responseType: 'text',\n        url: `/api/multi-tenancy/tenants/${id}/default-connection-string`\n      }, {\n        apiName: this.apiName\n      });\n\n      this.getList = input => this.restService.request({\n        method: 'GET',\n        url: '/api/multi-tenancy/tenants',\n        params: {\n          filter: input.filter,\n          sorting: input.sorting,\n          skipCount: input.skipCount,\n          maxResultCount: input.maxResultCount\n        }\n      }, {\n        apiName: this.apiName\n      });\n\n      this.update = (id, input) => this.restService.request({\n        method: 'PUT',\n        url: `/api/multi-tenancy/tenants/${id}`,\n        body: input\n      }, {\n        apiName: this.apiName\n      });\n\n      this.updateDefaultConnectionString = (id, defaultConnectionString) => this.restService.request({\n        method: 'PUT',\n        url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\n        params: {\n          defaultConnectionString\n        }\n      }, {\n        apiName: this.apiName\n      });\n    }\n\n  }\n\n  TenantService.ɵfac = function TenantService_Factory(t) {\n    return new (t || TenantService)(i0.ɵɵinject(i1.RestService));\n  };\n\n  TenantService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TenantService,\n    factory: TenantService.ɵfac,\n    providedIn: 'root'\n  });\n  return TenantService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { TenantService }; //# sourceMappingURL=abp-ng.tenant-management-proxy.mjs.map","map":null,"metadata":{},"sourceType":"module"}