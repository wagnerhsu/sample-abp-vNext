{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport { differentLocales } from '@abp/ng.core';\nimport { isDevMode } from '@angular/core';\nlet localeMap = {};\n\nfunction registerLocale({\n  cultureNameLocaleFileMap = {},\n  errorHandlerFn = defaultLocalErrorHandlerFn\n} = {}) {\n  return locale => {\n    localeMap = Object.assign(Object.assign({}, differentLocales), cultureNameLocaleFileMap);\n    const localePath = `/locales/${localeMap[locale] || locale}`;\n    return new Promise((resolve, reject) => {\n      return import(\n      /* webpackMode: \"lazy-once\" */\n\n      /* webpackChunkName: \"locales\"*/\n\n      /* webpackInclude: /[/\\\\](ar|cs|en|en-GB|es|de|fi|fr|hi|hu|is|it|pt|tr|ru|ro|sk|sl|zh-Hans|zh-Hant)\\.(mjs|js)$/ */\n\n      /* webpackExclude: /[/\\\\]global|extra/ */\n      `@angular/common${localePath}`).then(val => {\n        let module = val;\n\n        while (module.default) {\n          module = module.default;\n        }\n\n        resolve({\n          default: module\n        });\n      }).catch(error => {\n        errorHandlerFn({\n          resolve,\n          reject,\n          error,\n          locale\n        });\n      });\n    });\n  };\n}\n\nconst extraLocales = {};\n\nfunction storeLocaleData(data, localeId) {\n  extraLocales[localeId] = data;\n}\n\nfunction defaultLocalErrorHandlerFn({\n  locale,\n  resolve\n}) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (extraLocales[locale]) {\n      resolve({\n        default: extraLocales[localeMap[locale] || locale]\n      });\n      return;\n    }\n\n    if (isDevMode) {\n      console.error(`Cannot find the ${locale} locale file. You can check how can add new culture at https://docs.abp.io/en/abp/latest/UI/Angular/Localization#adding-a-new-culture`);\n    }\n\n    resolve();\n  });\n}\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { defaultLocalErrorHandlerFn, registerLocale, storeLocaleData }; //# sourceMappingURL=abp-ng.core-locale.mjs.map","map":null,"metadata":{},"sourceType":"module"}